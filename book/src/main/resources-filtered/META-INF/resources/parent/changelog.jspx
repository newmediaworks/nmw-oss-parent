<?xml version="1.0" encoding="UTF-8"?>
<!--
nmw-oss-parent - Parent POM for all New Media Works open-source software projects.
Copyright (C) 2019, 2020  New Media Works
    info@newmediaworks.com
    703 2nd Street #465
    Santa Rosa, CA 95404

This file is part of nmw-oss-parent.

nmw-oss-parent is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

nmw-oss-parent is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with nmw-oss-parent.  If not, see <http://www.gnu.org/licenses />.
-->
<jsp:root
	xmlns:ao="https://aoindustries.com/ao-taglib/"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:changelog="https://semanticcms.com/changelog/taglib/"
	xmlns:core="https://semanticcms.com/core/taglib/"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions"
	xmlns:jsp="http://java.sun.com/JSP/Page"
	version="2.1"
>
	<jsp:directive.page language="java" pageEncoding="UTF-8" />
	<jsp:directive.page session="false" />
	<core:page
		title="@{documented.name} Changelog"
		shortTitle="Changelog"
		tocLevels="1"
		datePublished="2019-05-24T19:05:12-0500"
		dateModified="2020-05-16T15:38:10-05:00"
	>
		<!-- The current snapshot, unreleased version -->
		<c:set var="version" value="@{com.newmediaworks:nmw-oss-parent:pom.version}" />
		<ao:assert
			test="${!fn:startsWith(version, '@')}"
			message="Version not substituted: #{version}"
		/>
		<c:if test="${fn:endsWith(version, '-SNAPSHOT') and !fn:endsWith(version, '-POST-SNAPSHOT')}">
			<changelog:release
				projectName="@{documented.name}"
				version="#{version}"
				groupId="@{project.groupId}"
				artifactId="@{documented.artifactId}"
				scmUrl="@{project.scm.url}"
			>
				<ul>
					<li>
						Added <ao:a href="https://axis.apache.org/axis2/java/core/tools/maven-plugins/axis2-aar-maven-plugin/howto.html">axis2-aar-maven-plugin</ao:a> for building web services.
						<ol>
							<li>Configured manifest entries consistent with other plugins.</li>
						</ol>
					</li>
					<li>
						Changed <code>Built-By</code> manifest entries from defaulting to blank
						to now defaulting to <code>\${project.organization.name}</code>.
					</li>
					<li>
						Enabled <code><![CDATA[&lt;attachClasses&gt;true&lt;/attachClasses&gt;]]></code>
						on <ao:a href="https://maven.apache.org/plugins/maven-war-plugin/">maven-war-plugin</ao:a> when
						<code>src/main/java</code> exists.  This allows the classes to by used as a dependency.
						This is particularly useful for our multi-project translation tools.
					</li>
					<li>
						Set <code><![CDATA[&lt;trimStackTrace&gt;false&lt;/trimStackTrace&gt;]]></code>
						on <ao:a href="https://maven.apache.org/surefire/maven-surefire-plugin/">maven-surefire-plugin</ao:a>.
						The full stack traces of exceptions during testing should help in debugging.
					</li>
					<li>
						Defined default build resources of both <code>src/main/resources</code> and <code>src/main/resources-filtered</code> (filtered).
						Previously, we had obtained this behavior through configuring plugins directly, but missed the more proper
						approach of defining in project/build/resources.  This cleans-up the implementation, and allows other
						parts of the configuration to work correctly when projects define different or additional resources.
					</li>
					<li>
						Defined default test resources of both <code>src/test/resources</code> and <code>src/test/resources-filtered</code> (filtered).
						This is for consistency with the definition of compilation resources.
					</li>
					<li>
						Added both <ao:a href="https://maven.apache.org/plugins/maven-jar-plugin/test-jar-mojo.html">tests</ao:a>
						and <ao:a href="https://maven.apache.org/plugins/maven-source-plugin/test-jar-no-fork-mojo.html">test-sources</ao:a>
						artifacts, unless empty.
					</li>
					<li>
						Configured <ao:a href="https://maven.apache.org/plugins/maven-war-plugin/">maven-war-plugin</ao:a> to support filtered
						<code>META-INF/context.xml</code>, which is used to provided development values to web applications:
						<ol>
							<li>
								Added filtered web resources <code>src/main/webapp-filtered</code>, which is expected
								to include a <code>META-INF/context.xml</code>.  This means that projects
								<strong>must have a <code>src/main/webapp-filtered</code> directory</strong>,
								even if just an empty directory.
							</li>
							<li>
								Excluded <code>src/main/webapp/META-INF/context.xml</code> so that the filtered
								version may be used.  This file still must be present, however, as NetBeans uses
								this file to determine how to deploy to local development Tomcat.
							</li>
							<li>
								<code>META-INF/context.xml</code> is not included in the WAR file.  The expectation is production
								values will be provided by the container.
							</li>
						</ol>
					</li>
					<!-- TODO:
					<li>Updated plugin versions.</li>
					-->
				</ul>
			</changelog:release>
		</c:if>

		<changelog:release
			projectName="@{documented.name}"
			version="1.6.0"
			datePublished="2020-04-21T03:08:00-05:00"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>
					<p>
						Newer versions of Javadocs no longer use frames.  We now build
						API docs with <code>target="_self"</code> for <![CDATA[JDK &gt;= 9]]>.
					</p>
					<p>
						We still supporting building with older JDK versions,
						in which <code>target="_top"</code> is used so that links
						can escape the frames.
					</p>
				</li>
				<li>Updated plugin versions.</li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.5.1"
			datePublished="2020-03-24T21:25:51-05:00"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>Updated links to <ao:a href="https://search.maven.org/" /></li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.5.0"
			datePublished="2020-03-23T21:27:27-05:00"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>Changed default Java version from 1.7 to 1.8</li>
				<li>
					Reduced use of property substitutions in <code>pom.xml</code>.
					This is to help 3rd-party parsers that fail to perform full Maven-compatible substitutions.
				</li>
				<li>Now setting build properties <code>maven.compiler.source</code> and <code>maven.compiler.target</code>.</li>
				<li>
					Now setting build property <code>javadoc.link.javamail</code> in parent POM
					instead of on a per-project basis.
				</li>
				<li>
					Now setting builds properties <code>documented.javase.version</code> and <code>documented.javadoc.link.javase</code>
					in parent POM, with the default Java version (currently 1.8).  This allows books to not specify
					the Java version of the documented project when it is the default.
				</li>
				<li>
					Renamed some build properties to better represent their usage:
					<ol>
						<li>
							Consolidated build properties <code>compiler.bootclasspath</code> and <code>javac.bootclasspath</code>
							into a single property <code>java.bootclasspath</code>.
						</li>
						<li><code>javaVersion</code>                   to <code>javase.version</code></li>
						<li><code>javac.link.javaApi</code>            to <code>javadoc.link.javase</code></li>
						<li><code>javac.link.javaApi.jdk*</code>       to <code>javadoc.link.javase.*</code></li>
						<li><code>javac.link.javaeeApi.*</code>        to <code>javadoc.link.javaee.*</code></li>
						<li><code>javac.link.javamailApi</code>        to <code>javadoc.link.javamail</code></li>
						<li><code>java.bootclasspath</code>            to <code>javase.bootclasspath</code></li>
						<li><code>javase.bootclasspath*</code>         to <code>javase.bootclasspath.*</code></li>
						<li><code>documented.javaVersion</code>        to <code>documented.javase.version</code></li>
						<li><code>documented.javac.link.javaApi</code> to <code>documented.javadoc.link.javase</code></li>
					</ol>
				</li>
				<li>Renamed profile <code>bootclasspaths</code> to <code>javase.bootclasspath</code>.</li>
				<li>Added build properties for Java EE:
					<ol>
						<li><code>javaee.version</code>,default <code>6</code></li>
						<li><code>javadoc.link.javaee</code>, default <code>\${javadoc.link.javaee.6}</code></li>
						<li><code>documented.javaee.version</code>, default <code>6</code></li>
						<li><code>documented.javadoc.link.javaee</code>, default <code>\${javadoc.link.javaee.6}</code></li>
					</ol>
				</li>
				<li>
					Added <ao:a href="http://maven.apache.org/plugins/maven-javadoc-plugin/javadoc-mojo.html#source"><![CDATA[&lt;source&gt;]]></ao:a>
					configuration to <ao:a href="http://maven.apache.org/plugins/maven-javadoc-plugin/javadoc-mojo.html">maven-javadoc-plugin</ao:a> to build correctly in Java 11.
				</li>
				<li>Simplified use of <ao:a href="https://maven.apache.org/plugins/maven-gpg-plugin/sign-mojo.html">maven-gpg-plugin</ao:a>:
					<ul>
						<li>Changed <ao:a href="https://maven.apache.org/plugins/maven-gpg-plugin/sign-mojo.html#lockMode">lockMode</ao:a> to a fixed value "multiple"</li>
						<li>Removed <ao:a href="https://maven.apache.org/plugins/maven-gpg-plugin/sign-mojo.html#defaultKeyring">defaultKeyring</ao:a></li>
						<li>Removed <ao:a href="https://maven.apache.org/plugins/maven-gpg-plugin/sign-mojo.html#useAgent">useAgent</ao:a></li>
						<li>Removed <ao:a href="https://maven.apache.org/plugins/maven-gpg-plugin/sign-mojo.html#publicKeyring">publicKeyring</ao:a></li>
						<li>Removed <ao:a href="https://maven.apache.org/plugins/maven-gpg-plugin/sign-mojo.html#secretKeyring">secretKeyring</ao:a></li>
					</ul>
				</li>
				<li>Now using <code>--release</code> instead of <code>-bootclasspath</code> when building with <![CDATA[JDK &gt;= 9]]>.</li>
				<li>Java updates:
					<ol>
						<li>Java 13 is now end-of-life</li>
						<li>Java 14 is now current stable</li>
						<li>Java 15 is new beta</li>
					</ol>
				</li>
				<li>
					Changed default <ao:a href="https://docs.oracle.com/javase/8/docs/technotes/tools/windows/javadoc.html#BEJEFABE">doclint</ao:a>
					from <code>-Xdoclint:none</code> to <code>-Xdoclint:all,-missing</code>.
				</li>
				<li>Updated plugin versions.</li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.4.0"
			datePublished="2019-10-14T01:57:40-0500"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>
					To significantly reduce the size of Javadocs, using new <core:link book="/javadoc-resources" page="/index.jspx" />
					project instead of <code>data:</code> URLs.
				</li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.3.0"
			datePublished="2019-10-01T18:05:43-0500"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>Java updates:
					<ol>
						<li>Java 12 is now end-of-life</li>
						<li>Java 13 is now current stable</li>
						<li>Java 14 is new beta</li>
					</ol>
				</li>
				<li>Updated plugin versions.</li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.2.0"
			datePublished="2019-08-11T07:26:43-0500"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>
					<p>
						Set delimiters for <ao:a href="https://maven.apache.org/plugins/maven-war-plugin/">maven-war-plugin</ao:a>
						to match the configuration of <ao:a href="https://maven.apache.org/plugins/maven-resources-plugin/">maven-resources-plugin</ao:a>,
						using <code>@{*}</code>.
					</p>
					<p>
						Also enabled <ao:a href="https://maven.apache.org/plugins/maven-war-plugin/war-mojo.html#filteringDeploymentDescriptors">filteringDeploymentDescriptors</ao:a>
						by default.
					</p>
				</li>
				<li>Updated plugin versions.</li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.1.1"
			datePublished="2019-06-29T19:11:19-0500"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>
					Changed <code>Include-Resource</code> to <code>{maven-resources}, target/resources-filtered</code>
					in order to not leak full build paths into <code>META-INF/MANIFEST.MF</code>
				</li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.1.0"
			datePublished="2019-06-23T11:03:56-0500"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>New profile "POST-SNAPSHOT" that enables the use of
					post-release builds as dependencies.
					<p>
						This profile is not active by default.
						Activate in <code>~/.m2/settings.xml</code> to use post-release builds as dependencies:
					</p>
<pre><![CDATA[		&lt;profile&gt;
			&lt;id&gt;POST-SNAPSHOT&lt;/id&gt;
			&lt;activation&gt;
				&lt;activeByDefault&gt;true&lt;/activeByDefault&gt;
			&lt;/activation&gt;
			&lt;properties&gt;
				&lt;POST-SNAPSHOT&gt;-POST-SNAPSHOT&lt;/POST-SNAPSHOT&gt;
			&lt;/properties&gt;
		&lt;/profile&gt;]]></pre>
					<p>
						This profile must not be active while performing a release.  Deactivate with:
					</p>
					<pre>mvn -Prelease,'!POST-SNAPSHOT' …</pre>
					<p>
						Post-release builds happen after a release and before a new -SNAPSHOT is
						started.  They are used to ensure that previous releases still compile
						against newer dependencies.
					</p>
					<p>
						Furthermore, post-release builds may contain the following changes without
						being promoted to the next -SNAPSHOT version:
					</p>
					<ol>
						<li>Updated parent POM</li>
						<li>Updated POM</li>
						<li>Updated Java version (without any source code changes)</li>
						<li>Updated dependency versions</li>
						<li>Updated javadocs</li>
						<li>Updated documentation</li>
						<li>Updated unit tests</li>
						<li>Deprecated methods and classes</li>
						<li>Renamed private fields and local variables</li>
						<li>Other changes to white-space or comments</li>
					</ol>
					<p>
						Post-release builds also allow NetBeans to correctly connect projects
						together for those who are actively developing multiple modules.
					</p>
					<p>
						Those who are only using the dependency can use the regular release to
						avoid the overhead of the daily check for updates.
					</p>
				</li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.0.0"
			datePublished="2019-06-19T03:36:25-0500"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>Project moved to GitHub and Maven.</li>
				<li>Set maven-surefire-plugin back to default configuration for better interaction with standard development tools.</li>
			</ul>
		</changelog:release>
	</core:page>
</jsp:root>

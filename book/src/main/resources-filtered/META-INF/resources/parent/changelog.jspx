<?xml version="1.0" encoding="UTF-8"?>
<!--
nmw-oss-parent - Parent POM for all New Media Works open-source software projects.
Copyright (C) 2019, 2020, 2021, 2022, 2023  New Media Works
    info@newmediaworks.com
    703 2nd Street #465
    Santa Rosa, CA 95404

This file is part of nmw-oss-parent.

nmw-oss-parent is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

nmw-oss-parent is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with nmw-oss-parent.  If not, see <https://www.gnu.org/licenses/>.
-->
<jsp:root
  xmlns:ao="https://oss.aoapps.com/taglib/"
  xmlns:c="http://java.sun.com/jsp/jstl/core"
  xmlns:changelog="https://semanticcms.com/changelog/taglib/"
  xmlns:core="https://semanticcms.com/core/taglib/"
  xmlns:fn="http://java.sun.com/jsp/jstl/functions"
  xmlns:jsp="http://java.sun.com/JSP/Page"
  version="2.1"
>
  <jsp:directive.page language="java" pageEncoding="UTF-8" />
  <jsp:directive.page session="false" />
  <core:page
    title="@{documented.name} Changelog"
    shortTitle="Changelog"
    tocLevels="1"
    datePublished="2019-05-24T19:05:12-05:00"
    dateModified="2023-09-18T01:27:39Z"
    allowRobots="false"
  >
    <c:set var="latestRelease" value="1.20.1" />
    <c:if test="${
      fn:endsWith('@{project.version}', '-SNAPSHOT')
      and !fn:endsWith('@{project.version}', '-POST-SNAPSHOT')
      and '@{project.version}' != (latestRelease.concat('-SNAPSHOT'))
    }">
      <changelog:release
        projectName="@{documented.name}"
        version="@{project.version}"
        groupId="@{project.groupId}"
        artifactId="@{documented.artifactId}"
        repository="@{nexusUrl}content/repositories/snapshots/"
        scmUrl="@{project.scm.url}"
      >
        <ul>
          <li>
            Stripping any <code>-POST-SNAPSHOT</code> from versions used in Javadoc
            <ao:a href="https://maven.apache.org/plugins/maven-javadoc-plugin/jar-mojo.html#doctitle">doctitle</ao:a>
            and <ao:a href="https://maven.apache.org/plugins/maven-javadoc-plugin/jar-mojo.html#windowtitle">windowtitle</ao:a>.
          </li>
        </ul>
      </changelog:release>
    </c:if>

    <changelog:release
      projectName="@{documented.name}"
      version="1.20.1"
      datePublished="2023-09-17T11:19:34Z"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>
          Avoiding second invocation of
          <ao:a href="https://felix.apache.org/documentation/_attachments/components/bundle-plugin/manifest-mojo.html">bundle:manifest</ao:a>
          during Jenkins "Deploy" stage.  The second invocation was polluting the <code>MANIFEST.MF</code> with an
          extra entry <code>Originally-Created-By: Apache Maven Bundle Plugin 5.1.9</code>.
        </li>
        <li>
          Reproducible build <code>\${project.build.outputTimestamp}</code> set back to <code>\${git.commit.time}</code>.
          The property was replaced with a fixed timestamp by
          <ao:a href="https://maven.apache.org/maven-release/maven-release-plugin/">Maven Release Plugin</ao:a> during
          the last release.  This caused all child projects to incorrectly use the time that the parent was released, not that of
          the project's last commit as intended.
        </li>
        <li>
          Only doing the second filtering pass of <code>src/main/resources-filtered</code> for packaging type "bundle",
          which none of our projects currently use.  This is a workaround for
          <ao:a href="https://felix.apache.org/documentation/_attachments/components/bundle-plugin/bundle-mojo.html">bundle:bundle</ao:a>
          not including filtered resources directly.  This also results in a cleaner and more reproducible
          <code>MANIFEST.MF</code>, with <code>Include-Resource</code> no longer including
          <code>\${project.build.directory}/resources-filtered</code>.
        </li>
        <li>Removed unused build property <code>\${javase.bootclasspath}</code>.</li>
        <li>Defined all versions as Maven properties.</li>
        <li>
          <p>
            Enabled <ao:a href="https://www.eclemma.org/jacoco/trunk/doc/maven.html">jacoco-maven-plugin</ao:a> in
            <code><![CDATA[&lt;reporting&gt;]]></code> (generated site reports).
          </p>
          <p>
            Please note that <code>mvn site</code> is currently broken due to <ao:a href="https://issues.apache.org/jira/browse/MSITE-973">MSITE-973</ao:a>.
            We expect this problem to be resolved when <ao:a href="https://github.com/apache/maven-site-plugin/tags">maven-site-plugin-4.0.0-M10</ao:a> is released.
          </p>
        </li>
        <li>
          <ao:a href="https://oss.aoapps.com/ant-tasks/">AO Ant Tasks</ao:a> are now run on every build.
          <ol>
            <li>
              Patches timestamps from the last build for entries that are not modified.
              These optimized reproducible artifacts accomplish the following:
              <ol type="a">
                <li>Fine-grained timestamp tracking of AAR/JAR/WAR/ZIP artifact entries</li>
                <li>Reduced number of distinct build artifacts</li>
                <li>
                  Correct maintenance and propagation of last-modified time for caching layers, clients, and related
                  tools such as sitemap generators
                </li>
              </ol>
            </li>
            <li>
              SEO filtering of Javadocs, including canonical meta tags, robots noindex, rel="nofollow" links, and
              XML sitemaps.
            </li>
          </ol>
        </li>
        <li>
          Set <ao:a href="https://maven.apache.org/plugins/maven-dependency-plugin/analyze-only-mojo.html#ignoreNonCompile"><![CDATA[&lt;ignoreNonCompile&gt;true&lt;/ignoreNonCompile&gt;]]></ao:a>
          as the default for all projects.
        </li>
        <li>
          Set <ao:a href="https://maven.apache.org/plugins/maven-dependency-plugin/analyze-only-mojo.html#ignoredUnusedDeclaredDependencies"><![CDATA[&lt;ignoredUnusedDeclaredDependencies&gt;&lt;dependency&gt;*:*:pom:*&lt;/dependency&gt;&lt;/ignoredUnusedDeclaredDependencies&lt;]]></ao:a>
          as the default for all projects.
        </li>
        <li>
          <p>
            <ao:a href="https://maven.apache.org/maven-release/maven-release-plugin/prepare-mojo.html">release:prepare</ao:a>
            has no way to avoid it replacing <code>\${git.commit.time}</code> with a fixed ISO8601 timestamp.
            Having a fixed timestamp has some arguable benefits regarding build reproducibility, so we're not going
            to fight this.
          </p>
          <p>
            Releases now use fixed ISO8601 timestamps while snapshots continue to use <code>\${git.commit.time}</code>.
            This means that all child projects must define their own <code>\${project.build.outputTimestamp}</code>
            property in order to not inherit the timestamp of the parent during releases.
          </p>
          <p>
            Since releases no longer depend on <code>\${git.commit.time}</code>, the
            <ao:a href="https://github.com/git-commit-id/git-commit-id-maven-plugin">git-commit-id-maven-plugin</ao:a>
            goals are disabled under the <code>release</code> profile.
          </p>
          <p>
            We also added an enforcer rule to ensure <code>\${project.build.outputTimestamp}</code> is correctly set
            back to <code>\${git.commit.time}</code> after a release.
          </p>
        </li>
        <li>OSGi improvements:
          <ol>
            <li>
              Implementation-Version now uses correct OSGi version format.
              Previously was using <code>\${project.version}</code>, but now uses <code>\${parsedVersion.osgiVersion}</code> from
              <ao:a href="http://www.mojohaus.org/build-helper-maven-plugin/parse-version-mojo.html">build-helper:parse-version</ao:a>.
            </li>
            <li>
              Added <code>_nouses</code> to avoid
              <ao:a href="https://www.eclipse.org/lists/stp-dev/msg01624.html">NP-hard time complexity in "uses" resolvers</ao:a>.
            </li>
          </ol>
        </li>
        <li>
          New <code>\${devMode}</code> property that will be <code>true</code> only when the "development" profile
          is active.  "publish" profile may not be activated at the same time as "development" profile.
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.20.0"
      datePublished="2023-08-20T02:10:24Z"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>
          Reproducible build <code>\${project.build.outputTimestamp}</code> is now based off <code>\${git.commit.time}</code>
          via <ao:a href="https://github.com/git-commit-id/git-commit-id-maven-plugin">git-commit-id-maven-plugin</ao:a>.
        </li>
        <li>Builds now require Java 11 or newer.</li>
        <li>
          Builds now require Maven 3.9.0 or newer for
          <ao:a href="https://maven.apache.org/guides/introduction/introduction-to-profiles.html">profile activation by packaging</ao:a>.
        </li>
        <li>
          <p>
            Using packaging=jar instead of packaging=bundle for all jar projects.
            OSGi manifest entries are still added, however, as documented at
            <ao:a href="https://felix.apache.org/documentation/subprojects/apache-felix-maven-bundle-plugin-bnd.html#_adding_osgi_metadata_to_existing_projects_without_changing_the_packaging_type">
              Adding OSGi metadata to existing projects without changing the packaging type
            </ao:a>.
            This has the side effect that projects that were previously packaging=jar will now have
            OSGi manifest entries added.  None of our projects were previously of the jar packaging.
          </p>
          <p>
            This change is required since <ao:a href="https://felix.apache.org/documentation/subprojects/apache-felix-maven-bundle-plugin-bnd.html">maven-bundle-plugin</ao:a>
            has been <ao:a href="https://github.com/FasterXML/jackson-databind/issues/3680">adding entries with a constant and hard-coded timestamp of 1980-02-01</ao:a>.
          </p>
          <p>
            These constant timestamps are incompatible with the automatic lastModified parameters added by
            <ao:a href="https://oss.aoapps.com/servlet-last-modified/">AO Servlet Last Modified</ao:a> when the resource
            is contained in a JAR file within <code>WEB-INF/lib</code>.  This has resulted in browsers using
            out-of-date cached content.
          </p>
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.19.0"
      datePublished="2023-08-15T21:20:20Z"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Updated plugin versions.</li>
        <li>
          New automatic profile for per-project <ao:a href="https://github.com/s4u/pgp-keys-map">PGP keys map</ao:a>
          via <code>pgp-keys-map.list</code> file in project root.
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.18.3"
      datePublished="2023-08-02T21:39:28Z"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Updated plugin versions.</li>
        <li>Java updates:
          <ol>
            <li>Java 19 is now end-of-life</li>
            <li>Java 20 is now current stable</li>
            <li>Java 21 is new beta</li>
          </ol>
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.18.2"
      datePublished="2023-07-03T21:18:53Z"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Updated default project settings for <ao:a href="https://github.com/apache/netbeans/releases/tag/17">NetBeans 17</ao:a>.</li>
        <li>Updated plugin versions.</li>
        <li>Updated to latest release of <ao:a href="https://github.com/s4u/pgp-keys-map">PGP keys map to maven artifacts</ao:a>.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.18.1"
      datePublished="2023-02-28T02:41:32Z"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Updated plugin versions.</li>
        <li>Updated to latest release of <ao:a href="https://github.com/s4u/pgp-keys-map">PGP keys map to maven artifacts</ao:a>.</li>
        <li>
          New build property <code>\${build.versionNoPostSnapshot}</code> that contains the project version number
          without any trailing <code>-POST-SNAPSHOT</code>.  For example, version <samp>1.2.3-SNAPSHOT</samp> remains
          <samp>1.2.3-SNAPSHOT</samp> while both <samp>1.2.3</samp> and <samp>1.2.3-POST-SNAPSHOT</samp> become
          <samp>1.2.3</samp>.
        </li>
        <li>Updated links from <ao:a href="https://search.maven.org/" /> to <ao:a href="https://central.sonatype.com/" /></li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.18.0"
      datePublished="2023-02-11T17:45:23Z"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Enabled <ao:a href="https://maven.apache.org/guides/mini/guide-reproducible-builds.html">Reproducible Builds</ao:a>:
          <ol>
            <li>Removed <code>Implementation-Build-Date</code> from all manifest.</li>
            <li>
              Set <ao:a href="https://maven.apache.org/plugins/maven-javadoc-plugin/javadoc-mojo.html#notimestamp"><code>notimestamp</code></ao:a>
              in <ao:a href="https://maven.apache.org/plugins/maven-javadoc-plugin/">maven-javadoc-plugin</ao:a>.
            </li>
            <li>
              <code>build.currentYear</code> property is now extracted from <code>project.build.outputTimestamp</code>.
              As a result, <ao:a href="https://www.mojohaus.org/buildnumber-maven-plugin/">buildnumber-maven-plugin</ao:a> is no longer part of the build.
            </li>
            <li>
              Upgraded <ao:a href="https://maven.apache.org/plugins/maven-javadoc-plugin/">maven-javadoc-plugin</ao:a>
              from 3.0.1 to 3.4.1.  Due to <ao:a href="https://issues.apache.org/jira/projects/MJAVADOC/issues/MJAVADOC-682">MJAVADOC-682</ao:a>
              not yet resolved, builds will revert to version 3.0.1 under a new "reactor" profile.
            </li>
            <li>Changed Jenkins builds from Java 11 to Java 17.</li>
            <li>
              Jenkins builds now use <code>.m2/repository-jdk-\${jdk}</code> for all Java versions.
              Previously, builds for <code>\${deployJdk}</code> used <code>.m2/repository</code>.
              This change makes it unnecessary to rename local repositories when changing <code>\${deployJdk}</code>.
            </li>
          </ol>
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.17.2"
      datePublished="2023-02-07T08:35:39-06:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Updated plugin versions.</li>
        <li>Updated to latest release of <ao:a href="https://github.com/s4u/pgp-keys-map">PGP keys map to maven artifacts</ao:a>.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.17.1"
      datePublished="2022-12-17T11:59:07-06:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Updated to latest release of <ao:a href="https://github.com/s4u/pgp-keys-map">PGP keys map to maven artifacts</ao:a>.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.17.0"
      datePublished="2022-11-22T21:53:08-06:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Jakarta EE updates:
          <ol>
            <li>Added <ao:a href="https://jakarta.ee/release/10/">Jakarta EE 10</ao:a></li>
          </ol>
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.16.9"
      datePublished="2022-11-04T10:38:46-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Java updates:
          <ol>
            <li>Java 18 is now end-of-life</li>
            <li>Java 19 is now current stable</li>
            <li>Java 20 is new beta</li>
          </ol>
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.16.8"
      datePublished="2022-10-19T09:19:13-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Updated plugin versions.</li>
        <li>Updated to latest release of <ao:a href="https://github.com/s4u/pgp-keys-map">PGP keys map to maven artifacts</ao:a>.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.16.7"
      datePublished="2022-09-04T03:39:11-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Updated to latest release of <ao:a href="https://github.com/s4u/pgp-keys-map">PGP keys map to maven artifacts</ao:a>.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.16.6"
      datePublished="2022-08-14T18:54:18-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Updated plugin versions.</li>
        <li>Updated to latest release of <ao:a href="https://github.com/s4u/pgp-keys-map">PGP keys map to maven artifacts</ao:a>.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.16.5"
      datePublished="2022-07-23T17:09:25-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Updated to latest release of <ao:a href="https://github.com/s4u/pgp-keys-map">PGP keys map to maven artifacts</ao:a>.</li>
        <li>Updated to <ao:a href="https://axis.apache.org/axis2/java/core/release-notes/1.8.2.html">Apache Axis2 1.8.2</ao:a>.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.16.4"
      datePublished="2022-07-12T00:43:14-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Updated to latest release of <ao:a href="https://github.com/s4u/pgp-keys-map">PGP keys map to maven artifacts</ao:a>.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.16.3"
      datePublished="2022-07-02T17:17:56-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Updated to latest release of <ao:a href="https://github.com/s4u/pgp-keys-map">PGP keys map to maven artifacts</ao:a>.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.16.2"
      datePublished="2022-06-14T01:05:28-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Updated to <ao:a href="https://axis.apache.org/axis2/java/core/release-notes/1.8.1.html">Apache Axis2 1.8.1</ao:a>.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.16.1"
      datePublished="2022-05-29T23:20:13-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Updated to <ao:a href="https://checkstyle.org/releasenotes.html#Release_10.3">Checkstyle 10.3</ao:a>.</li>
        <li>Updated to latest release of <ao:a href="https://github.com/s4u/pgp-keys-map">PGP keys map to maven artifacts</ao:a>.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.16.0"
      datePublished="2022-05-18T16:13:11-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>
          <code>javax.activation:activation</code> apidocs now link to
          <ao:a href="https://jakarta.ee/specifications/activation/1.2/apidocs/" />.
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.15.0"
      datePublished="2022-05-14T04:45:38-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Updated to latest release of <ao:a href="https://github.com/s4u/pgp-keys-map">PGP keys map to maven artifacts</ao:a>.</li>
        <li>Updated plugin versions.</li>
        <li>
          Limited the workaround for <ao:a href="https://bugs.openjdk.java.net/browse/JDK-8215291">JDK-8215291</ao:a>
          to only builds in <code><![CDATA[JDK &lt; 12]]></code> with no <code>src/main/java/module-info.java</code>.
          The previous mitigation was applied too broadly and broke the search URLs for projects with modules.
        </li>
        <li>Reduced size of Javadoc top section and fixed scroll position in Java 11.</li>
        <li>
          <p>
            Enabled <ao:a href="https://checkstyle.org/">Checkstyle</ao:a> on all builds using
            <ao:a href="https://maven.apache.org/plugins/maven-checkstyle-plugin/index.html">Apache Maven Checkstyle Plugin</ao:a>.
          </p>
          <p>
            The default style is based on <ao:a href="https://checkstyle.org/google_style.html">Google's Java Style Checkstyle</ao:a>,
            but with the maximum line length increased to 200 characters.
          </p>
          <p>
            By default, builds fail on Checkstyle error.  Each project that cannot immediately be adapted
            to pass the analysis should configure the plugin with
            <code><![CDATA[&lt;failOnViolation&gt;false&lt;/failOnViolation&gt;]]></code>.
          </p>
        </li>
        <li>
          <p>
            Enabled <ao:a href="https://spotbugs.github.io/">SpotBugs</ao:a> on all builds using
            <ao:a href="https://spotbugs.github.io/spotbugs-maven-plugin/index.html">SpotBugs Maven Plugin</ao:a>.
          </p>
          <p>
            By default, builds fail on SpotBugs error.  Each project that cannot immediately be adapted
            to pass the analysis should configure the plugin with
            <code><![CDATA[&lt;failOnError&gt;false&lt;/failOnError&gt;]]></code>.
          </p>
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.14.4"
      datePublished="2022-02-16T03:22:15-06:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Updated to latest release of <ao:a href="https://github.com/s4u/pgp-keys-map">PGP keys map to maven artifacts</ao:a>.</li>
        <li>
          <ao:a href="https://stackoverflow.com/a/12598554/7121505">An alternate build directory (other than the
          default <code>target</code>)</ao:a> may now be selected by providing an <code>alt.build.dir</code>
          property.  We use this in continuous integration to be able to concurrently build a project for
          multiple JDK versions, significantly reducing the build time.
        </li>
        <li>
          <ao:a href="https://github.com/sonatype/nexus-maven-plugins/tree/master/staging/maven-plugin">nexus-staging-maven-plugin</ao:a>
          is now only enabled by a new <code>nexus</code> profile.  This is to support regular deployments
          via <ao:a href="https://maven.apache.org/plugins/maven-deploy-plugin/">maven-deploy-plugin</ao:a>
          in continuous integration.
        </li>
        <li>Added Jenkins continuous integration.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.14.3"
      datePublished="2021-10-16T21:20:54-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>"skip-war" profile improvements to increase local development speed:
          <ol>
            <li>Enforces "development" profile is also active</li>
            <li>Disables <ao:a href="https://www.simplify4u.org/pgpverify-maven-plugin/">PGP artifact verification</ao:a></li>
            <li>Disables <ao:a href="https://maven.apache.org/plugins/maven-gpg-plugin/">GPG artifact signing</ao:a></li>
          </ol>
        </li>
        <li>Updated to latest release of <ao:a href="https://github.com/s4u/pgp-keys-map">PGP keys map to maven artifacts</ao:a>.</li>
        <li>Enabled <ao:a href="https://www.simplify4u.org/pgpverify-maven-plugin/check-mojo.html#verifyProvidedDependencies">verifying PGP keys of "provided" dependencies</ao:a>.</li>
        <li>Java updates:
          <ol>
            <li>Java 16 is now end-of-life</li>
            <li>Java 17 is now current stable</li>
            <li>Java 18 is new beta</li>
          </ol>
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.14.2"
      datePublished="2021-09-22T05:13:59-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Updated to latest release of <ao:a href="https://github.com/s4u/pgp-keys-map">PGP keys map to maven artifacts</ao:a>.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.14.1"
      datePublished="2021-08-17T14:43:29-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>
          Updated to latest releases of <ao:a href="https://github.com/s4u/pgp-keys-map">PGP keys map to maven artifacts</ao:a>
          and <ao:a href="https://oss.aoapps.com/pgp-keys-map/">AO PGP Keys Map</ao:a>.
        </li>
        <li>Updated to <ao:a href="https://axis.apache.org/axis2/java/core/release-notes/1.8.0.html">Apache Axis2 1.8.0</ao:a>.</li>
        <li>Updated plugin versions.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.14.0"
      datePublished="2021-07-17T23:57:38-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>
          Added new "coverage" profile that enables <ao:a href="https://www.jacoco.org/jacoco/">JaCoCo unit test code coverage</ao:a>.
          This is expected to primarily be used within continuous integration systems, and may be used as a basis for
          <ao:a href="https://sonarcloud.io/">SonarCloud</ao:a>/<ao:a href="https://www.sonarqube.org/">SonarQube</ao:a> analysis.
        </li>
        <li>
          Now <ao:a href="https://www.simplify4u.org/pgpverify-maven-plugin/">verifying artifact PGP signatures</ao:a>
          on all builds.  This means that GPG signing is now performed for all builds, including local-only
          builds with the "development" profile active.
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.13.0"
      datePublished="2021-07-07T02:56:08-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Enabled <ao:a href="https://sonatype.github.io/ossindex-maven/maven-plugin/">dependency audits</ao:a> on builds.</li>
        <li>Java™ EE updates:
          <ol>
            <li>
              Default version changed from <ao:a href="https://docs.oracle.com/javaee/6/">Java™ EE 6</ao:a>
              to <ao:a href="https://docs.oracle.com/javaee/7/">Java™ EE 7</ao:a>
            </li>
            <li>Updated apidocs URL for <ao:a href="https://jakarta.ee/release/8/">Jakarta EE 8</ao:a></li>
            <li>Added <ao:a href="https://jakarta.ee/release/9/">Jakarta EE 9</ao:a></li>
            <li>Added <ao:a href="https://jakarta.ee/release/9.1/">Jakarta EE 9.1</ao:a></li>
          </ol>
        </li>
        <li>Changed default Java version from 1.8 to 11</li>
        <li>
          Enabled <ao:a href="https://www.mojohaus.org/extra-enforcer-rules/enforceBytecodeVersion.html">dependency bytecode version checks</ao:a>
          on builds.  This will ensure a project does not inadvertently depend on a library of a newer Java
          version than the project itself.  The check is skipped when the <code>development</code> profile
          is active.
        </li>
        <li>Updated plugin versions.</li>
        <li><code>Bundle-SymbolicName</code> is now defined to be the same as Java 9+ module names.</li>
        <li>
          The "release" profile is now only to be used for production non-SNAPSHOT releases.  SNAPSHOT
          builds should only use the "POST-SNAPSHOT" profile.  Local development builds should now use the
          "development" profile, and may optionally use the "POST-SNAPSHOT" profile.
        </li>
        <li>
          Reverted <code>maven-dependency-plugin</code> from version 3.2.0 to 3.1.2 until
          <ao:a href="https://issues.apache.org/jira/browse/MDEP-753">Issue 753</ao:a> is resolved.
        </li>
        <li>
          Reverted <code>maven-javadoc-plugin</code> from version 3.3.0 to 3.0.1 since reactor builds are
          failing with "Exit code: 1 - error: module not found: …" on projects with Java 9+ modules.
          Please see <ao:a href="https://issues.apache.org/jira/projects/MJAVADOC/issues/MJAVADOC-682">Issue 682</ao:a>.
        </li>
        <li>
          <p>
            Several profiles may now be conveniently activated by the presence of files in an optional
            <code>profile.d</code> directory.  This technique is primarily a workaround for profiles not
            being able to be activated by properties of sub-projects, and has the added benefit that the
            set of profiles across all projects is easily manipulated through Bash scripts.
          </p>
          <p>
            This includes <code>maven.javadoc.skip</code>, <code>maven.install.skip</code>,
            <code>maven.deploy.skip</code>, and <code>skipNexusStagingDeployMojo</code>, which all have
            the expected skipping behavior matching the property of the same name.
          </p>
        </li>
        <li>
          Nexus Repository Manager URL is now defined in a <code>$nexusUrl</code> property.
          The URL should end with a slash (/) and is used for both distributionManagement/snapshotRepository
          and nexus-staging-maven-plugin/nexusUrl.  Defaults to <ao:a href="https://oss.sonatype.org/" />
          since groupId <code>com.newmediaworks</code> is on the original Sonatype Nexus Repository Manager.
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.12.1"
      datePublished="2021-03-20T11:49:34-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Java updates:
          <ol>
            <li>Java 15 is now end-of-life</li>
            <li>Java 16 is now current stable</li>
            <li>Java 17 is new beta</li>
          </ol>
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.12.0"
      datePublished="2021-03-18T10:13:10-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Updated plugin versions.</li>
        <li>
          Removed offline Javadocs for <code>com.servlets:cos</code>, since we have eradicated it from all projects in favor of
          <ao:a rel="nofollow" href="@{javadoc.link.javaee}javax/servlet/http/HttpServletRequest.html#getParts()">the standard file upload API</ao:a>
          and <ao:a href="https://javaee.github.io/javamail/">JavaMail</ao:a>.
        </li>
        <li>
          Added <ao:a href="https://stackoverflow.com/a/57284322">workaround for "undefined" in URL during Javadoc search</ao:a>
          when project has no modules.
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.11.0"
      datePublished="2020-12-08T14:15:39-06:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>
          <p>
            Switched back to generating Javadocs links with <code>target="_top"</code> on all versions of
            Java.  Eventhough the API Docs are generated without frames as of Java 9, they may still be used
            within frames in other contexts, such as when viewed at <ao:a href="https://javadoc.io/" />.
          </p>
          <p>
            Furthermore, browsers are increasingly blocking or issuing warnings when a link tries to go
            to a different site within a frame.  This change ensures links always escape frames.
          </p>
        </li>
        <li>
          New build properties <code>\${build.isSnapshot}</code> and <code>\${build.notSnapshot}</code>
          that are set to <code>true</code> or <code>false</code>, depending in whether the
          <code>\${project.version}</code> is, or is not respectively, <code>*-SNAPSHOT</code>.
        </li>
        <li>Updated plugin versions.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.10.0"
      datePublished="2020-11-30T00:24:07-06:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Added default NetBeans server settings.</li>
        <li>Added default NetBeans hint settings.</li>
        <li>Java updates:
          <ol>
            <li>Java 14 is now end-of-life</li>
            <li>Java 15 is now current stable</li>
            <li>Java 16 is new beta</li>
          </ol>
        </li>
        <li>Updated plugin versions.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.9.0"
      datePublished="2020-08-28T00:48:44-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Added default NetBeans formatting settings.</li>
        <li>Added default NetBeans line ending settings.</li>
        <li>Added plugin repositories to match repositories.</li>
        <li>
          Now <ao:a href="https://maven.apache.org/plugins/maven-dependency-plugin/analyze-only-mojo.html">analyzing dependencies</ao:a>
          during release builds.
        </li>
        <li>
          Now automatically configures <ao:a href="https://www.mojohaus.org/versions-maven-plugin/display-dependency-updates-mojo.html#rulesUri">rulesUri</ao:a>
          for <ao:a href="https://www.mojohaus.org/versions-maven-plugin/">versions-maven-plugin</ao:a>
          when the <code>versions-rules.xml</code> file exists, via a new <code>versions-rules</code> profile.
        </li>
        <li>Updated plugin versions.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.8.0"
      datePublished="2020-06-11T02:11:21-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Corrected the default value for the Maven build property <code>documented.javadoc.link.javaee</code>.</li>
        <li>
          <p>
            Set <code><![CDATA[&lt;detectOfflineLinks&gt;false&lt;/detectOfflineLinks&gt;]]></code>
            on <ao:a href="https://maven.apache.org/plugins/maven-javadoc-plugin/">maven-javadoc-plugin</ao:a>.
          </p>
          <p>
            Projects are built and released on an individual basis, and thus we manually link
            between projects to not rely on reactor / aggregator builds to achieve proper linking.
          </p>
          <p>
            Furthermore, we maximize the use of offline links from javadoc artifacts.
            This has several benefits:
          </p>
          <ol>
            <li>Repeatable builds: linking is done against the specified version versus whatever is published online</li>
            <li>More reliable build: does not depend on external apidocs server to be online</li>
            <li>Higher build performance: uses locally cached artifacts instead of http/https requests on each build</li>
            <li>Offline builds: when all artifacts are already locally available</li>
            <li>Private builds: linking to apidocs from private projects not publicly available</li>
            <li>Chicken-and-Egg resolved: can link between projects before publishing any of them</li>
            <li>New version linking: links are properly created before releasing new versions</li>
          </ol>
          <p>
            Default <code><![CDATA[&lt;links /&gt;]]></code> converted to <code><![CDATA[&lt;offlineLinks /&gt;]]></code>
            on <ao:a href="https://maven.apache.org/plugins/maven-javadoc-plugin/">maven-javadoc-plugin</ao:a>, taking
            advantage of the new <ao:a href="https://oss.aoapps.com/javadoc-offline/">AO Javadoc Offline</ao:a> project.
            Furthermore, the offline links also include JavaMail and Java EE.
          </p>
          <p>
            Offline links are enabled by the new <code>offlineLinks</code> profile, which is activated
            by the presence of <code>src/main/java</code>.  If desired, this profile may be deactivated
            during a build with <code>mvn -P'!offlineLinks' …</code>.
          </p>
        </li>
        <li>
          Moved configuration into <code><![CDATA[&lt;pluginManagement /&gt;]]></code> where appropriate.
          <p>
            One notable consequence is that Javadocs are now fully formatted without
            requiring the <code>release</code> profile.
          </p>
        </li>
        <li>Restored <code>Built-By</code> manifest entry on <code>bundle</code> and <code>war</code> packaging.</li>
        <li>Now supporting generated resources on all projects.</li>
        <li>
          <p>
            Enabled the <ao:a href="https://maven.apache.org/wagon/wagon-providers/wagon-ssh-external/">wagon-ssh-external</ao:a> extension
            on all projects, which supports access to artifact repositories via <code>scpexe://…</code> URLs.
          </p>
          <p>
            Projects that have access to their parent either directly or over HTTP/HTTPS may remove
            <code>wagon-ssh-external</code> from their <code>.mvn/extensions.xml</code>.  However,
            if the parent is accessed through <code>scpexe://…</code>, the declaration in <code>extensions.xml</code>
            is still required.
          </p>
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.7.0"
      datePublished="2020-05-19T01:13:53-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>
          Added <ao:a href="https://axis.apache.org/axis2/java/core/tools/maven-plugins/axis2-aar-maven-plugin/howto.html">axis2-aar-maven-plugin</ao:a> for building web services.
          <ol>
            <li>Configured manifest entries consistent with other plugins.</li>
          </ol>
        </li>
        <li>
          Changed <code>Built-By</code> manifest entries from defaulting to blank
          to now defaulting to <code>\${project.organization.name}</code>.
        </li>
        <li>
          Enabled <code><![CDATA[&lt;attachClasses&gt;true&lt;/attachClasses&gt;]]></code>
          on <ao:a href="https://maven.apache.org/plugins/maven-war-plugin/">maven-war-plugin</ao:a> when
          <code>src/main/java</code> exists.  This allows the classes to by used as a dependency.
          This is particularly useful for our multi-project translation tools.
        </li>
        <li>
          Set <code><![CDATA[&lt;trimStackTrace&gt;false&lt;/trimStackTrace&gt;]]></code>
          on <ao:a href="https://maven.apache.org/surefire/maven-surefire-plugin/">maven-surefire-plugin</ao:a>.
          The full stack traces of exceptions during testing should help in debugging.
        </li>
        <li>
          Defined default build resources of both <code>src/main/resources</code> and <code>src/main/resources-filtered</code> (filtered).
          Previously, we had obtained this behavior through configuring plugins directly, but missed the more proper
          approach of defining in project/build/resources.  This cleans-up the implementation, and allows other
          parts of the configuration to work correctly when projects define different or additional resources.
        </li>
        <li>
          Defined default test resources of both <code>src/test/resources</code> and <code>src/test/resources-filtered</code> (filtered).
          This is for consistency with the definition of compilation resources.
        </li>
        <li>
          Added <ao:a href="https://maven.apache.org/plugins/maven-jar-plugin/test-jar-mojo.html">tests</ao:a>,
          <ao:a href="https://maven.apache.org/plugins/maven-javadoc-plugin/test-jar-mojo.html">test-javadoc</ao:a>,
          and <ao:a href="https://maven.apache.org/plugins/maven-source-plugin/test-jar-no-fork-mojo.html">test-sources</ao:a>
          artifacts, unless empty.
        </li>
        <li>
          Configured <ao:a href="https://maven.apache.org/plugins/maven-war-plugin/">maven-war-plugin</ao:a> to support filtered
          <code>META-INF/context.xml</code>, which is used to provide development values to web applications:
          <ol>
            <li>
              Added filtered web resources <code>src/main/webapp-filtered</code>, which is expected
              to include a <code>META-INF/context.xml</code>.  This means that projects
              <strong>must have a <code>src/main/webapp-filtered</code> directory</strong>,
              even if just an empty directory.
            </li>
            <li>
              Excluded <code>src/main/webapp/META-INF/context.xml</code> so that the filtered
              version may be used.  This file still must be present, however, as NetBeans uses
              this file to determine how to deploy to local development Tomcat.
            </li>
            <li>
              <code>META-INF/context.xml</code> is not included in the WAR file.  The expectation is production
              values will be provided by the container.
            </li>
          </ol>
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.5.1"
      datePublished="2020-03-24T21:25:51-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Updated links to <ao:a href="https://search.maven.org/" /></li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.5.0"
      datePublished="2020-03-23T21:27:27-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Changed default Java version from 1.7 to 1.8</li>
        <li>
          Reduced use of property substitutions in <code>pom.xml</code>.
          This is to help 3rd-party parsers that fail to perform full Maven-compatible substitutions.
        </li>
        <li>Now setting build properties <code>maven.compiler.source</code> and <code>maven.compiler.target</code>.</li>
        <li>
          Now setting build property <code>javadoc.link.javamail</code> in parent POM
          instead of on a per-project basis.
        </li>
        <li>
          Now setting builds properties <code>documented.javase.version</code> and <code>documented.javadoc.link.javase</code>
          in parent POM, with the default Java version (currently 1.8).  This allows books to not specify
          the Java version of the documented project when it is the default.
        </li>
        <li>
          Renamed some build properties to better represent their usage:
          <ol>
            <li>
              Consolidated build properties <code>compiler.bootclasspath</code> and <code>javac.bootclasspath</code>
              into a single property <code>java.bootclasspath</code>.
            </li>
            <li><code>javaVersion</code>                   to <code>javase.version</code></li>
            <li><code>javac.link.javaApi</code>            to <code>javadoc.link.javase</code></li>
            <li><code>javac.link.javaApi.jdk*</code>       to <code>javadoc.link.javase.*</code></li>
            <li><code>javac.link.javaeeApi.*</code>        to <code>javadoc.link.javaee.*</code></li>
            <li><code>javac.link.javamailApi</code>        to <code>javadoc.link.javamail</code></li>
            <li><code>java.bootclasspath</code>            to <code>javase.bootclasspath</code></li>
            <li><code>javase.bootclasspath*</code>         to <code>javase.bootclasspath.*</code></li>
            <li><code>documented.javaVersion</code>        to <code>documented.javase.version</code></li>
            <li><code>documented.javac.link.javaApi</code> to <code>documented.javadoc.link.javase</code></li>
          </ol>
        </li>
        <li>Renamed profile <code>bootclasspaths</code> to <code>javase.bootclasspath</code>.</li>
        <li>Added build properties for Java EE:
          <ol>
            <li><code>javaee.version</code>,default <code>6</code></li>
            <li><code>javadoc.link.javaee</code>, default <code>\${javadoc.link.javaee.6}</code></li>
            <li><code>documented.javaee.version</code>, default <code>6</code></li>
            <li><code>documented.javadoc.link.javaee</code>, default <code>\${javadoc.link.javaee.6}</code></li>
          </ol>
        </li>
        <li>
          Added <ao:a href="https://maven.apache.org/plugins/maven-javadoc-plugin/javadoc-mojo.html#source"><![CDATA[&lt;source&gt;]]></ao:a>
          configuration to <ao:a href="https://maven.apache.org/plugins/maven-javadoc-plugin/javadoc-mojo.html">maven-javadoc-plugin</ao:a> to build correctly in Java 11.
        </li>
        <li>Simplified use of <ao:a href="https://maven.apache.org/plugins/maven-gpg-plugin/sign-mojo.html">maven-gpg-plugin</ao:a>:
          <ul>
            <li>Changed <ao:a href="https://maven.apache.org/plugins/maven-gpg-plugin/sign-mojo.html#lockMode">lockMode</ao:a> to a fixed value "multiple"</li>
            <li>Removed <ao:a href="https://maven.apache.org/plugins/maven-gpg-plugin/sign-mojo.html#defaultKeyring">defaultKeyring</ao:a></li>
            <li>Removed <ao:a href="https://maven.apache.org/plugins/maven-gpg-plugin/sign-mojo.html#useAgent">useAgent</ao:a></li>
            <li>Removed <ao:a href="https://maven.apache.org/plugins/maven-gpg-plugin/sign-mojo.html#publicKeyring">publicKeyring</ao:a></li>
            <li>Removed <ao:a href="https://maven.apache.org/plugins/maven-gpg-plugin/sign-mojo.html#secretKeyring">secretKeyring</ao:a></li>
          </ul>
        </li>
        <li>Now using <code>--release</code> instead of <code>-bootclasspath</code> when building with <![CDATA[JDK &gt;= 9]]>.</li>
        <li>Java updates:
          <ol>
            <li>Java 13 is now end-of-life</li>
            <li>Java 14 is now current stable</li>
            <li>Java 15 is new beta</li>
          </ol>
        </li>
        <li>
          Changed default <ao:a href="https://docs.oracle.com/javase/8/docs/technotes/tools/windows/javadoc.html#BEJEFABE">doclint</ao:a>
          from <code>-Xdoclint:none</code> to <code>-Xdoclint:all,-missing</code>.
        </li>
        <li>Updated plugin versions.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.4.0"
      datePublished="2019-10-14T01:57:40-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>
          To significantly reduce the size of Javadocs, using new <core:link book="/javadoc-resources" page="/index.jspx" />
          project instead of <code>data:</code> URLs.
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.3.0"
      datePublished="2019-10-01T18:05:43-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Java updates:
          <ol>
            <li>Java 12 is now end-of-life</li>
            <li>Java 13 is now current stable</li>
            <li>Java 14 is new beta</li>
          </ol>
        </li>
        <li>Updated plugin versions.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.2.0"
      datePublished="2019-08-11T07:26:43-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>
          <p>
            Set delimiters for <ao:a href="https://maven.apache.org/plugins/maven-war-plugin/">maven-war-plugin</ao:a>
            to match the configuration of <ao:a href="https://maven.apache.org/plugins/maven-resources-plugin/">maven-resources-plugin</ao:a>,
            using <code>@{*}</code>.
          </p>
          <p>
            Also enabled <ao:a href="https://maven.apache.org/plugins/maven-war-plugin/war-mojo.html#filteringDeploymentDescriptors">filteringDeploymentDescriptors</ao:a>
            by default.
          </p>
        </li>
        <li>Updated plugin versions.</li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.1.1"
      datePublished="2019-06-29T19:11:19-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>
          Changed <code>Include-Resource</code> to <code>{maven-resources}, target/resources-filtered</code>
          in order to not leak full build paths into <code>META-INF/MANIFEST.MF</code>
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.1.0"
      datePublished="2019-06-23T11:03:56-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>New profile "POST-SNAPSHOT" that enables the use of
          post-release builds as dependencies.
          <p>
            This profile is not active by default.
            Activate in <code>~/.m2/settings.xml</code> to use post-release builds as dependencies:
          </p>
<pre><![CDATA[    &lt;profile&gt;
      &lt;id&gt;POST-SNAPSHOT&lt;/id&gt;
      &lt;activation&gt;
        &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;
      &lt;/activation&gt;
      &lt;properties&gt;
        &lt;POST-SNAPSHOT&gt;-POST-SNAPSHOT&lt;/POST-SNAPSHOT&gt;
      &lt;/properties&gt;
    &lt;/profile&gt;]]></pre>
          <p>
            This profile must not be active while performing a release.  Deactivate with:
          </p>
          <pre>mvn -Prelease,'!POST-SNAPSHOT' …</pre>
          <p>
            Post-release builds happen after a release and before a new -SNAPSHOT is
            started.  They are used to ensure that previous releases still compile
            against newer dependencies.
          </p>
          <p>
            Furthermore, post-release builds may contain the following changes without
            being promoted to the next -SNAPSHOT version:
          </p>
          <ol>
            <li>Updated parent POM</li>
            <li>Updated POM</li>
            <li>Updated Java version (without any source code changes)</li>
            <li>Updated dependency versions</li>
            <li>Updated javadocs</li>
            <li>Updated documentation</li>
            <li>Updated unit tests</li>
            <li>Deprecated methods and classes</li>
            <li>Renamed private fields and local variables</li>
            <li>Other changes to white-space or comments</li>
          </ol>
          <p>
            Post-release builds also allow NetBeans to correctly connect projects
            together for those who are actively developing multiple modules.
          </p>
          <p>
            Those who are only using the dependency can use the regular release to
            avoid the overhead of the daily check for updates.
          </p>
        </li>
      </ul>
    </changelog:release>

    <changelog:release
      projectName="@{documented.name}"
      version="1.0.0"
      datePublished="2019-06-19T03:36:25-05:00"
      groupId="@{project.groupId}"
      artifactId="@{documented.artifactId}"
      scmUrl="@{project.scm.url}"
    >
      <ul>
        <li>Project moved to GitHub and Maven.</li>
        <li>Set maven-surefire-plugin back to default configuration for better interaction with standard development tools.</li>
      </ul>
    </changelog:release>
  </core:page>
</jsp:root>

<?xml version="1.0" encoding="UTF-8"?>
<!--
nmw-oss-parent - Parent POM for all New Media Works open-source software projects.
Copyright (C) 2019, 2020, 2021, 2022, 2023, 2024, 2025  New Media Works
    info@newmediaworks.com
    703 2nd Street #465
    Santa Rosa, CA 95404

This file is part of nmw-oss-parent.

nmw-oss-parent is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

nmw-oss-parent is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with nmw-oss-parent.  If not, see <https://www.gnu.org/licenses/>.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.newmediaworks</groupId><artifactId>nmw-oss-parent</artifactId><version>1.22.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>
    <!-- Must be set to ${git.commit.time} for snapshots or ISO 8601 timestamp for releases. -->
    <project.build.outputTimestamp>${git.commit.time}</project.build.outputTimestamp>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Extensions -->
    <org.apache.maven.wagon.wagon-ssh-external.version>3.5.3</org.apache.maven.wagon.wagon-ssh-external.version>

    <!-- Plugins -->
    <org.simplify4u.plugins.pgpverify-maven-plugin.version>1.18.2</org.simplify4u.plugins.pgpverify-maven-plugin.version>
    <org.apache.axis2.axis2-aar-maven-plugin.version>1.8.2</org.apache.axis2.axis2-aar-maven-plugin.version>
    <org.codehaus.mojo.exec-maven-plugin.version>3.5.0</org.codehaus.mojo.exec-maven-plugin.version>
    <io.github.git-commit-id.git-commit-id-maven-plugin.version>9.0.1</io.github.git-commit-id.git-commit-id-maven-plugin.version>
    <org.apache.maven.plugins.maven-compiler-plugin.version>3.13.0</org.apache.maven.plugins.maven-compiler-plugin.version>
    <org.apache.maven.plugins.maven-enforcer-plugin.version>3.5.0</org.apache.maven.plugins.maven-enforcer-plugin.version>
    <org.apache.maven.plugins.maven-resources-plugin.version>3.3.1</org.apache.maven.plugins.maven-resources-plugin.version>
    <org.jacoco.jacoco-maven-plugin.version>0.8.12</org.jacoco.jacoco-maven-plugin.version>
    <org.apache.maven.plugins.maven-surefire-plugin.version>3.5.2</org.apache.maven.plugins.maven-surefire-plugin.version>
    <org.apache.maven.plugins.maven-dependency-plugin.version>3.8.1</org.apache.maven.plugins.maven-dependency-plugin.version>
    <org.apache.felix.maven-bundle-plugin.version>6.0.0</org.apache.felix.maven-bundle-plugin.version>
    <org.codehaus.mojo.build-helper-maven-plugin.version>3.6.0</org.codehaus.mojo.build-helper-maven-plugin.version>
    <io.reformanda.semper.dependencyversion-maven-plugin.version>1.0.1</io.reformanda.semper.dependencyversion-maven-plugin.version>
    <org.sonatype.ossindex.maven.ossindex-maven-plugin.version>3.2.0</org.sonatype.ossindex.maven.ossindex-maven-plugin.version>
    <org.apache.maven.plugins.maven-release-plugin.version>3.1.1</org.apache.maven.plugins.maven-release-plugin.version>
    <org.sonatype.plugins.nexus-staging-maven-plugin.version>1.7.0</org.sonatype.plugins.nexus-staging-maven-plugin.version>
    <org.codehaus.mojo.versions-maven-plugin.version>2.18.0</org.codehaus.mojo.versions-maven-plugin.version>
    <org.apache.maven.plugins.maven-gpg-plugin.version>3.2.7</org.apache.maven.plugins.maven-gpg-plugin.version>
    <org.apache.maven.plugins.maven-clean-plugin.version>3.4.1</org.apache.maven.plugins.maven-clean-plugin.version>
    <org.apache.maven.plugins.maven-deploy-plugin.version>3.0.0-M2</org.apache.maven.plugins.maven-deploy-plugin.version>
    <org.apache.maven.plugins.maven-install-plugin.version>3.1.3</org.apache.maven.plugins.maven-install-plugin.version>
    <org.apache.maven.plugins.maven-jar-plugin.version>3.4.2</org.apache.maven.plugins.maven-jar-plugin.version>
    <org.apache.maven.plugins.maven-remote-resources-plugin.version>3.3.0</org.apache.maven.plugins.maven-remote-resources-plugin.version>
    <org.apache.maven.plugins.maven-war-plugin.version>3.4.0</org.apache.maven.plugins.maven-war-plugin.version>
    <org.apache.maven.plugins.maven-source-plugin.version>3.3.1</org.apache.maven.plugins.maven-source-plugin.version>
    <org.apache.maven.plugins.maven-javadoc-plugin.version>3.11.2</org.apache.maven.plugins.maven-javadoc-plugin.version>
    <org.apache.maven.plugins.maven-antrun-plugin.version>3.1.0</org.apache.maven.plugins.maven-antrun-plugin.version>
    <org.apache.maven.plugins.maven-checkstyle-plugin.version>3.6.0</org.apache.maven.plugins.maven-checkstyle-plugin.version>
    <com.github.spotbugs.spotbugs-maven-plugin.version>4.9.1.0</com.github.spotbugs.spotbugs-maven-plugin.version>
    <!-- TODO: Try findsecbugs-plugin:
    <com.h3xstream.findsecbugs.findsecbugs-plugin.version>1.12.0</com.h3xstream.findsecbugs.findsecbugs-plugin.version>
    -->
    <org.apache.maven.plugins.maven-site-plugin.version>4.0.0-M16</org.apache.maven.plugins.maven-site-plugin.version>
    <org.sonarsource.scanner.maven.sonar-maven-plugin.version>5.0.0.4389</org.sonarsource.scanner.maven.sonar-maven-plugin.version>
    <org.apache.maven.plugins.maven-shade-plugin.version>3.6.0</org.apache.maven.plugins.maven-shade-plugin.version>
    <org.apache.maven.plugins.maven-jarsigner-plugin.version>3.1.0</org.apache.maven.plugins.maven-jarsigner-plugin.version>
    <org.apache.tomcat.maven.tomcat7-maven-plugin.version>2.2</org.apache.tomcat.maven.tomcat7-maven-plugin.version>
    <org.codehaus.mojo.properties-maven-plugin.version>1.2.1</org.codehaus.mojo.properties-maven-plugin.version>
    <org.eclipse.jetty.jetty-maven-plugin.version>11.0.24</org.eclipse.jetty.jetty-maven-plugin.version>
    <org.apache.maven.plugins.maven-project-info-reports-plugin.version>3.8.0</org.apache.maven.plugins.maven-project-info-reports-plugin.version>

    <!-- Plugin Dependencies -->
    <org.simplify4u.pgp-keys-map.version>2024.11.03</org.simplify4u.pgp-keys-map.version>
    <com.aoapps.pgp-keys-map.version>1.14.0-SNAPSHOT<!-- ${POST-SNAPSHOT} --></com.aoapps.pgp-keys-map.version>
    <org.codehaus.mojo.extra-enforcer-rules.version>1.9.0</org.codehaus.mojo.extra-enforcer-rules.version>
    <org.ow2.asm.asm.version>9.7.1</org.ow2.asm.asm.version>
    <com.puppycrawl.tools.checkstyle.version>10.21.2</com.puppycrawl.tools.checkstyle.version>
    <com.github.spotbugs.spotbugs.version>4.9.1</com.github.spotbugs.spotbugs.version>
    <com.aoapps.ao-javadoc-offline.version>3.5.0${POST-SNAPSHOT}</com.aoapps.ao-javadoc-offline.version>
    <com.newmediaworks.nmw-javadoc-resources.version>1.1.0${POST-SNAPSHOT}</com.newmediaworks.nmw-javadoc-resources.version>
    <com.aoapps.ao-ant-tasks.version>1.2.1-SNAPSHOT<!-- ${POST-SNAPSHOT} --></com.aoapps.ao-ant-tasks.version>
    <org.apache.commons.commons-compress.version>1.27.1</org.apache.commons.commons-compress.version>
    <commons-io.commons-io.version>2.18.0</commons-io.commons-io.version>
    <org.apache.commons.commons-lang3.version>3.17.0</org.apache.commons.commons-lang3.version>
    <org.apache.commons.commons-text.version>1.13.0</org.apache.commons.commons-text.version>
    <com.aoapps.ao-checkstyle-config.version>1.4.0-SNAPSHOT<!-- ${POST-SNAPSHOT} --></com.aoapps.ao-checkstyle-config.version>

    <!-- Maven Javadoc Plugin -->
    <!--
      This older version (accessed via this *.compat property) is used by projects that are module but revert to
      Automatic-Module-Name in releases.  This is done when the project itself uses any unnamed modules.  Before
      removing these properties, make sure to remove all uses of the properties across all projects.

      Once fixed, remove the plugin 3.0.1 workaround "copy-element-list-to-package-list-before-javadoc" below.
    -->
    <org.apache.maven.plugins.maven-javadoc-plugin.version.compat>3.0.1</org.apache.maven.plugins.maven-javadoc-plugin.version.compat>
    <copy-element-list-to-package-list-before-javadoc.phase>none</copy-element-list-to-package-list-before-javadoc.phase>

    <!-- devMode flag, enabled in "development" profile, enforced must be disabled in "publish" profile -->
    <devMode>false</devMode>
    <!-- devMode may be "true" only for projects that have profile.d/development which never publish anything. -->
    <devMode.enforceNotPublished.phase>validate</devMode.enforceNotPublished.phase>

    <!--
        Selectively enabled/disabled in development, skip-war, jenkins, jenkins-build-altjdk, jenkins-deploy, and release profiles.

        Useful to determine what to skip:
        mvn fr.jcgay.maven.plugins:buildplan-maven-plugin:list -PPOST-SNAPSHOT
        mvn fr.jcgay.maven.plugins:buildplan-maven-plugin:list -PPOST-SNAPSHOT,development
        mvn fr.jcgay.maven.plugins:buildplan-maven-plugin:list -PPOST-SNAPSHOT,development,skip-war
        mvn fr.jcgay.maven.plugins:buildplan-maven-plugin:list -PPOST-SNAPSHOT,jenkins
        mvn fr.jcgay.maven.plugins:buildplan-maven-plugin:list -PPOST-SNAPSHOT,development,jenkins
        mvn fr.jcgay.maven.plugins:buildplan-maven-plugin:list -PPOST-SNAPSHOT,jenkins,jenkins-build-altjdk
        mvn fr.jcgay.maven.plugins:buildplan-maven-plugin:list -PPOST-SNAPSHOT,development,jenkins,jenkins-build-altjdk
        mvn fr.jcgay.maven.plugins:buildplan-maven-plugin:list -PPOST-SNAPSHOT,jenkins,jenkins-deploy
        mvn fr.jcgay.maven.plugins:buildplan-maven-plugin:list -PPOST-SNAPSHOT,development,jenkins,jenkins-deploy
        mvn fr.jcgay.maven.plugins:buildplan-maven-plugin:list -P'!POST-SNAPSHOT',release

        Example colordiff while handling differing ASCII table widths:
        colordiff \
          <(mvn fr.jcgay.maven.plugins:buildplan-maven-plugin:list -PPOST-SNAPSHOT | sed -E -e 's/ +\| / | /g') \ <(mvn fr.jcgay.maven.plugins:buildplan-maven-plugin:list -PPOST-SNAPSHOT,development | sed -E -e 's/ +\| / | /g') -->
    <pgpverify-check.phase>validate</pgpverify-check.phase>
    <git.commit.time.phase>validate</git.commit.time.phase>
    <enforce-jdk.phase>validate</enforce-jdk.phase>
    <enforce-maven.phase>validate</enforce-maven.phase>
    <enforce-project.build.outputTimestamp-iso8601.phase>validate</enforce-project.build.outputTimestamp-iso8601.phase>
    <enforce-bytecode-version.phase>validate</enforce-bytecode-version.phase>
    <require-POST-SNAPSHOT-is-snapshot-version.phase>validate</require-POST-SNAPSHOT-is-snapshot-version.phase>
    <require-javadoc.breadcrumbs.phase>validate</require-javadoc.breadcrumbs.phase>
    <require-development-is-snapshot-version.phase>validate</require-development-is-snapshot-version.phase>
    <audit-dependencies.phase>validate</audit-dependencies.phase>
    <enforce-git.commit.time.phase>validate</enforce-git.commit.time.phase>
    <verify-no-java-in-src.phase>validate</verify-no-java-in-src.phase>
    <verify-java-in-src.phase>validate</verify-java-in-src.phase>
    <check-if-need-maven.gpg.skip.phase>validate</check-if-need-maven.gpg.skip.phase>
    <remove-empty-test.phase>initialize</remove-empty-test.phase>
    <empty-javadoc-generate-element-list.phase>generate-resources</empty-javadoc-generate-element-list.phase>
    <bundle-manifest.phase>process-classes</bundle-manifest.phase>
    <unpack.offlineLinks.phase>prepare-package</unpack.offlineLinks.phase>
    <process.offlineLinks.phase>prepare-package</process.offlineLinks.phase>
    <attach-tests.phase>package</attach-tests.phase>
    <empty-javadoc-jar.phase>package</empty-javadoc-jar.phase>
    <attach-sources.phase>none</attach-sources.phase>
    <attach-test-sources.phase>none</attach-test-sources.phase>
    <!--
      maven-javadoc-plugin-3.10.0 was not skipping empty javadoc JARs with warning
      "JAR will be empty - no content was marked for inclusion!".
      This property will be set to "package" by the presence of src/main/java
      We are keeping this conditional plugin execution as a minor optimization, since we already have it in-place.
    -->
    <attach-javadocs.phase.conditional>none</attach-javadocs.phase.conditional>
    <attach-javadocs.phase>${attach-javadocs.phase.conditional}</attach-javadocs.phase>
    <!--
      maven-javadoc-plugin-3.10.0 was not skipping empty test javadoc JARs with warning
      "JAR will be empty - no content was marked for inclusion!".
      This property will be set to "package" by the presence of src/test/java
      We are keeping this conditional plugin execution as a minor optimization, since we already have it in-place.
    -->
    <attach-test-javadocs.phase.conditional>none</attach-test-javadocs.phase.conditional>
    <attach-test-javadocs.phase>${attach-test-javadocs.phase.conditional}</attach-test-javadocs.phase>
    <seo-javadoc-filter.phase>package</seo-javadoc-filter.phase>
    <zip-timestamp-merge.phase>none</zip-timestamp-merge.phase>
    <generate-javadoc-sitemap.phase>package</generate-javadoc-sitemap.phase>
    <sign-artifacts.phase>verify</sign-artifacts.phase>
    <analyze-dependencies.phase>verify</analyze-dependencies.phase>
    <unpack.ao-checkstyle-config.phase>verify</unpack.ao-checkstyle-config.phase>
    <checkstyle.phase>verify</checkstyle.phase>
    <spotbugs.phase>verify</spotbugs.phase>
    <default-install.phase>install</default-install.phase>
    <default-deploy.phase>deploy</default-deploy.phase>

    <!-- The version of Java apidocs to link to, preferring https -->
    <!-- Note: This list matches ao-javadoc-offline and semanticcms-tag-reference -->
    <!-- Note: These prefixes match ao-ant-tasks:SeoJavadocFilterTask.java default Java SE nofollow filters -->
    <javadoc.link.javase.5>https://docs.oracle.com/javase/1.5.0/docs/api/</javadoc.link.javase.5>
    <javadoc.link.javase.6>https://docs.oracle.com/javase/6/docs/api/</javadoc.link.javase.6>
    <javadoc.link.javase.7>https://docs.oracle.com/javase/7/docs/api/</javadoc.link.javase.7>
    <javadoc.link.javase.8>https://docs.oracle.com/javase/8/docs/api/</javadoc.link.javase.8>
    <javadoc.link.javase.9>https://docs.oracle.com/javase/9/docs/api/</javadoc.link.javase.9>
    <javadoc.link.javase.10>https://docs.oracle.com/javase/10/docs/api/</javadoc.link.javase.10>
    <javadoc.link.javase.11>https://docs.oracle.com/en/java/javase/11/docs/api/</javadoc.link.javase.11>
    <javadoc.link.javase.12>https://docs.oracle.com/en/java/javase/12/docs/api/</javadoc.link.javase.12>
    <javadoc.link.javase.13>https://docs.oracle.com/en/java/javase/13/docs/api/</javadoc.link.javase.13>
    <javadoc.link.javase.14>https://docs.oracle.com/en/java/javase/14/docs/api/</javadoc.link.javase.14>
    <javadoc.link.javase.15>https://docs.oracle.com/en/java/javase/15/docs/api/</javadoc.link.javase.15>
    <javadoc.link.javase.16>https://docs.oracle.com/en/java/javase/16/docs/api/</javadoc.link.javase.16>
    <javadoc.link.javase.17>https://docs.oracle.com/en/java/javase/17/docs/api/</javadoc.link.javase.17>
    <javadoc.link.javase.18>https://docs.oracle.com/en/java/javase/18/docs/api/</javadoc.link.javase.18>
    <javadoc.link.javase.19>https://docs.oracle.com/en/java/javase/19/docs/api/</javadoc.link.javase.19>
    <javadoc.link.javase.20>https://docs.oracle.com/en/java/javase/20/docs/api/</javadoc.link.javase.20>
    <javadoc.link.javase.21>https://docs.oracle.com/en/java/javase/21/docs/api/</javadoc.link.javase.21>
    <javadoc.link.javase.22>https://download.java.net/java/early_access/jdk22/docs/api/</javadoc.link.javase.22>

    <!-- The Java EE apidocs to link to, preferring https -->
    <!-- Note: This list matches ao-javadoc-offline and semanticcms-tag-reference -->
    <!-- Note: These prefixes match ao-ant-tasks:SeoJavadocFilterTask.java default Java EE / Jakarta EE nofollow filters -->
    <javadoc.link.activation>https://jakarta.ee/specifications/activation/1.2/apidocs/</javadoc.link.activation>
    <javadoc.link.javamail>https://javaee.github.io/javamail/docs/api/</javadoc.link.javamail>
    <javadoc.link.javaee.5>https://docs.oracle.com/javaee/5/api/</javadoc.link.javaee.5>
    <javadoc.link.javaee.6>https://docs.oracle.com/javaee/6/api/</javadoc.link.javaee.6>
    <javadoc.link.javaee.7>https://docs.oracle.com/javaee/7/api/</javadoc.link.javaee.7>
    <javadoc.link.jakartaee.8>https://jakarta.ee/specifications/platform/8/apidocs/</javadoc.link.jakartaee.8>
    <javadoc.link.jakartaee.9>https://jakarta.ee/specifications/platform/9/apidocs/</javadoc.link.jakartaee.9>
    <javadoc.link.jakartaee.9.1>https://jakarta.ee/specifications/platform/9.1/apidocs/</javadoc.link.jakartaee.9.1>
    <javadoc.link.jakartaee.10>https://jakarta.ee/specifications/platform/10/apidocs/</javadoc.link.jakartaee.10>

    <!-- Java SE version -->
    <javase.version>11</javase.version><!-- 1.6, 1.7, 1.8, 9, 10, 11, ... -->
    <javase.release>11</javase.release><!-- 6, 7, 8, 9, 10, 11, ... -->
    <javadoc.link.javase>${javadoc.link.javase.11}</javadoc.link.javase>
    <!-- These values are copied from the project being documented -->
    <documented.javase.version>11</documented.javase.version><!-- 1.6, 1.7, 1.8, 9, 10, 11, ... -->
    <documented.javadoc.link.javase>${javadoc.link.javase.11}</documented.javadoc.link.javase>

    <!-- Java EE version -->
    <javaee.version>7</javaee.version>
    <javadoc.link.javaee>${javadoc.link.javaee.7}</javadoc.link.javaee>
    <!-- These values are copied from the project being documented -->
    <documented.javaee.version>7</documented.javaee.version>
    <documented.javadoc.link.javaee>${javadoc.link.javaee.7}</documented.javadoc.link.javaee>

    <!-- Maven Java version -->
    <maven.compiler.source>${javase.version}</maven.compiler.source>
    <maven.compiler.target>${javase.version}</maven.compiler.target>
    <maven.compiler.release>${javase.release}</maven.compiler.release>

    <!--
      The path to the sub-project.
      This should be empty for the top-level project or the path (ending in slash) to append to ${project.url}.

      One important use is the offsetting of the generated Javadoc apidocs/ URL.
      This is because others may publish our sub-project API docs that we do not publish directly (such as books).
      When published, we do not want conflicting canonical URLs.

      Sub-projects that both share the same ${project.url} and generate Javadocs must override this value. -->
    <subproject.subpath />

    <!--
      The frame target for links from javadocs:
        Can be "_self" for JDK >= 9, since the apidocs do not use frames.
        Must be "_top" for JDK < 9, due to frames. Using "_top" for all Java versions so links can escape frames at javadoc.io. -->
    <javadoc.target>_top</javadoc.target>
    <!-- Fix the scroll position in Java 11 javadoc -->
    <javadoc.html.style />
    <!-- The HTML format of the description -->
    <description.html>${project.description}</description.html>
    <!-- Taglib reference line for javadocs -->
    <javadoc.taglibReference><!-- Default is none --></javadoc.taglibReference>
    <!-- Modules section for javadocs -->
    <javadoc.modules><!-- Default is none --></javadoc.modules>
    <!-- Related Projects section for javadocs -->
    <javadoc.relatedProjects><!-- Default is none --></javadoc.relatedProjects>
    <!--
      The Java module name, defaulting to the value previously used for "Bundle-SymbolicName" in Java < 9. All projects should set this to match the module name defined in "module-info.java". Furthermore, projects without "module-info.java" should also add the "Automatic-Module-Name" manifest entry. -->
    <module.name>${project.groupId}.${project.artifactId}</module.name>
    <!-- Default bundle resources-filtered, may be overridden as part of "alt.build.dir" property -->
    <bundle.resources-filtered>target/resources-filtered</bundle.resources-filtered>
    <!-- Optional Main-Class for JAR manifest -->
    <osgi.mainClass><!-- Default is none --></osgi.mainClass>
    <!-- Optional Permissions for JAR manifest -->
    <osgi.permissions><!-- Default is none --></osgi.permissions>
    <!-- Set to "-POST-SNAPSHOT" by activating the "POST-SNAPSHOT" profile to use post-release dependencies -->
    <POST-SNAPSHOT><!-- -POST-SNAPSHOT --></POST-SNAPSHOT>
    <!-- com.newmediaworks is on original Sonatype Nexus Repository Manager -->
    <nexusServerId>ossrh-newmediaworks</nexusServerId>
    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
    <nexus.skipNexusStagingDeployMojo>false</nexus.skipNexusStagingDeployMojo>
    <!-- WAR exclusions -->
    <maven-war-plugin.warSourceExcludes.default>
      <!-- This file only exists so NetBeans knows the path to deploy the application. -->
      META-INF/context.xml
    </maven-war-plugin.warSourceExcludes.default>
    <maven-war-plugin.packagingExcludes.default>
      <!-- META-INF/context.xml is used for local development deployment only -->
      META-INF/context.xml
    </maven-war-plugin.packagingExcludes.default>
    <!-- SonarQube -->
    <sonar.projectKey>${project.groupId}:${project.artifactId}</sonar.projectKey>
    <sonar.organization>newmediaworks</sonar.organization>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <sonar.java.source>${javase.release}</sonar.java.source>
    <!--
    In SonarQube, at least in version 10.6, the JavaScript/TypeScript/CSS scanner is searching through all files
    and directories in the project, including .m2.  This scanning is severely slowing down the builds.  No combination
    of sonar.exclusions, sonar.sources, or sonar.javascript.detectBundles seems to prevent this scanning.

    This problem may be observed when there is a long delay between "to be analyzed" and "has been analyzed".
    For example:
    [INFO] 1 source file to be analyzed
    [INFO] 0/1 files analyzed, current file: src/main/webapp/google<REDACTED>.html
    - line repeated many times -
    [INFO] 1/1 source file has been analyzed

    Didn't help:
    <sonar.exclusions>.m2/**,.git/**,target/**</sonar.exclusions>

    Didn't help, pom.xml wasn't scanned (src/main might need to exist, set in profile if we ever need it):
    <sonar.sources>src/main</sonar.sources>

    Fails if doesn't exist, set in profile if we ever need it:
    <sonar.tests>src/test</sonar.tests>

    For now, we are disabling all scanners that rely on Node.JS.
    TODO: Check if this occurs in SonarQube > 10.6.
    -->
    <!--
    Prevent the JavaScript/TypeScript/CSS scanner from being invoked.
    The closest we've found to an authoritative list of file types is the SonarLanguage enum:
    https://github.com/SonarSource/sonarlint-core/blob/master/backend/commons/src/main/java/org/sonarsource/sonarlint/core/commons/api/SonarLanguage.java

    At the same time, we find close, but not precisely matching, extensions defined in implementations of getFileSuffixes():
    https://github.com/SonarSource/SonarJS/blob/master/sonar-plugin/css/src/main/java/org/sonar/css/CssLanguage.java
    https://github.com/SonarSource/SonarJS/blob/master/sonar-plugin/sonar-javascript-plugin/src/main/java/org/sonar/plugins/javascript/JavaScriptLanguage.java
    https://github.com/SonarSource/SonarJS/blob/master/sonar-plugin/sonar-javascript-plugin/src/main/java/org/sonar/plugins/javascript/TypeScriptLanguage.java
    https://github.com/SonarSource/sonar-css/blob/master/sonar-css-plugin/src/main/java/org/sonar/css/plugin/CssPlugin.java

    Instead of chasing specific file extensions to exclude, we are overriding the suffixes used by the scanners.  This
    technique is observed at
    https://github.com/acidanthera/Lilu/blob/2ec01fab29726828327ff09657ee754878c89bf8/sonar-project.properties#L89
    -->
    <sonar.css.file.suffixes>-</sonar.css.file.suffixes>
    <sonar.html.file.suffixes>-</sonar.html.file.suffixes>
    <sonar.javascript.file.suffixes>-</sonar.javascript.file.suffixes>
    <nar.ruby.file.suffixes>-</nar.ruby.file.suffixes>
    <sonar.typescript.file.suffixes>-</sonar.typescript.file.suffixes>

    <sonar.sources>.</sonar.sources>
    <default.sonar.exclusions>
      <!-- Maven and Git repositories: -->
      .m2/**,
      .git/**,
      <!-- Maven build: -->
      target*/**,
      <!-- Tests (used by sonar.test.inclusions below) -->
      src/test/**,
      <!--
      SonarLanguage.YAML and SonarLanguage.JSON are marked with "NO_PUBLIC_PROPERTY_PROVIDED_FOR_THIS_LANGUAGE",
      so exclude them by extension.  Note: *yaml without dot is intentional and matches SonarLanguage.YAML
      -->
      **/*.yml,
      **/*yaml,
      **/*.json
    </default.sonar.exclusions>
    <sonar.exclusions>${default.sonar.exclusions}</sonar.exclusions>
    <!--
    Fail if the exclusions are inadequate and the JavaScript/TypeScript/CSS scanner is still invoked.
    See https://docs.sonarsource.com/sonarqube-server/latest/analyzing-source-code/languages/javascript-typescript-css/
    -->
    <sonar.scanner.skipNodeProvisioning>true</sonar.scanner.skipNodeProvisioning>
    <sonar.nodejs.executable>/bin/false</sonar.nodejs.executable>

    <!-- Exclude .m2 and .git from tests, too -->
    <sonar.tests>.</sonar.tests>
    <default.sonar.test.inclusions>src/test/**</default.sonar.test.inclusions>
    <sonar.test.inclusions>${default.sonar.test.inclusions}</sonar.test.inclusions>

    <!--
      Is the last build required for the zip-timestamp-merge Ant task?
      Defaults to true and will typically only be false for either the first build
      or any build that adds or removes build artifacts.

      May be disabled in Maven command line property.
    -->
    <requireLastBuild>true</requireLastBuild>
    <!--
      Is this build reproducible for the zip-timestamp-merge Ant task?
      Currently with axis2-aar-maven-plugin version 1.8.2, aar builds are not reproducible,
      so this is disabled in packaging profile for "aar" packaging.
    -->
    <zip-timestamp-merge.buildReproducible>true</zip-timestamp-merge.buildReproducible>
    <!-- The nofollows URL prefixes for seo-javadoc-filter. -->
    <seo-javadoc-filter.nofollow>default</seo-javadoc-filter.nofollow>
    <!-- The follows URL prefixes for seo-javadoc-filter. -->
    <seo-javadoc-filter.follow>*</seo-javadoc-filter.follow>

    <!-- <NetBeans 17 → Project → Properties> -->
    <!--   <Run> -->
    <!--     Server -->
    <org-netbeans-modules-maven-j2ee.netbeans_2e_hint_2e_deploy_2e_server>Tomcat</org-netbeans-modules-maven-j2ee.netbeans_2e_hint_2e_deploy_2e_server>
    <!--   </Run> -->
    <!--   <Formatting> -->
    <!--     Use project specific options -->
    <org-netbeans-modules-editor-indent.CodeStyle.usedProfile>project</org-netbeans-modules-editor-indent.CodeStyle.usedProfile>
    <!--     <All Languages> -->
    <!--       <Tabs And Indents> -->
    <!--         Enable Indentation -->
    <org-netbeans-modules-editor-indent.CodeStyle.project.enable-indent>true</org-netbeans-modules-editor-indent.CodeStyle.project.enable-indent>
    <!--         Expand Tabs to Spaces -->
    <org-netbeans-modules-editor-indent.CodeStyle.project.expand-tabs>true</org-netbeans-modules-editor-indent.CodeStyle.project.expand-tabs>
    <!--         Number of Spaces per Indent -->
    <org-netbeans-modules-editor-indent.CodeStyle.project.indent-shift-width>2</org-netbeans-modules-editor-indent.CodeStyle.project.indent-shift-width>
    <org-netbeans-modules-editor-indent.CodeStyle.project.spaces-per-tab>2</org-netbeans-modules-editor-indent.CodeStyle.project.spaces-per-tab>
    <!--         Tab Size -->
    <org-netbeans-modules-editor-indent.CodeStyle.project.tab-size>4</org-netbeans-modules-editor-indent.CodeStyle.project.tab-size>
    <!--         Right Margin -->
    <org-netbeans-modules-editor-indent.CodeStyle.project.text-limit-width>120</org-netbeans-modules-editor-indent.CodeStyle.project.text-limit-width>
    <!--         Line Wrap -->
    <org-netbeans-modules-editor-indent.CodeStyle.project.text-line-wrap>none</org-netbeans-modules-editor-indent.CodeStyle.project.text-line-wrap>
    <!--       </Tabs And Indents> -->
    <!--     </All Languages> -->
    <!--     <JSON> -->
    <!--       <Tabs And Indents> -->
    <!--         Continuation Indentation -->
    <org-netbeans-modules-editor-indent.text.x-json.CodeStyle.project.continuationIndentSize>4</org-netbeans-modules-editor-indent.text.x-json.CodeStyle.project.continuationIndentSize>
    <!--       </Tabs And Indents> -->
    <!--     </JSON> -->
    <!--     <Java> -->
    <!--       <Tabs And Indents> -->
    <!--         Enable Indentation -->
    <org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.enable-indent>true</org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.enable-indent>
    <!--         Expand Tabs to Spaces -->
    <org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.expand-tabs>true</org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.expand-tabs>
    <!--         Number of Spaces per Indent -->
    <org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.indent-shift-width>2</org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.indent-shift-width>
    <org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.spaces-per-tab>2</org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.spaces-per-tab>
    <!--         Tab Size -->
    <org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.tab-size>4</org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.tab-size>
    <!--         Right Margin -->
    <org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.text-limit-width>120</org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.text-limit-width>
    <!--         Line Wrap -->
    <org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.text-line-wrap>none</org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.text-line-wrap>
    <!--         Continuation Indentation Size -->
    <org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.continuationIndentSize>4</org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.continuationIndentSize>
    <!--         Label Indentation -->
    <org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.labelIndent>0</org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.labelIndent>
    <!--         Absolute Label Indentation -->
    <org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.absoluteLabelIndent>false</org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.absoluteLabelIndent>
    <!--         Indent Top Level Class Members -->
    <org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.indentTopLevelClassMembers>true</org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.indentTopLevelClassMembers>
    <!--         Indent Case Statements In Switch -->
    <org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.indentCasesFromSwitch>true</org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.indentCasesFromSwitch>
    <!--       </Tabs And Indents> -->
    <!--       <Imports> -->
    <org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.importGroupsOrder>static *;*</org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.importGroupsOrder>
    <org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.separateStaticImports>true</org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.separateStaticImports>
    <!--       </Imports> -->
    <!--     </Java> -->
    <!--     <JavaScript> -->
    <!--       <Tabs And Indents> -->
    <!--         Continuation Indentation -->
    <org-netbeans-modules-editor-indent.text.javascript.CodeStyle.project.continuationIndentSize>4</org-netbeans-modules-editor-indent.text.javascript.CodeStyle.project.continuationIndentSize>
    <!--       </Tabs And Indents> -->
    <!--     </JavaScript> -->
    <!--   </Formatting> -->
    <!--   <Hints> -->
    <!--     <Implementation Note> -->
    <!--       NetBeans 12.0: Editor hints are much faster when all settings are pom.xml-based (not overridden in any nb-configuration.xml) -->
    <!--     </Implementation Note> -->
    <!--     Use project-specific options -->
    <org-netbeans-spi-editor-hints-projects.perProjectHintSettingsEnabled>true</org-netbeans-spi-editor-hints-projects.perProjectHintSettingsEnabled>
    <!--     <Java> -->
    <!--       <Abstraction> -->
    <!--         Type cast is too strong -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_suggestions_2e_TooStrongCast_2e_broadTypeCast.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_suggestions_2e_TooStrongCast_2e_broadTypeCast.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_suggestions_2e_TooStrongCast_2e_broadTypeCast.hintSeverity>HINT</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_suggestions_2e_TooStrongCast_2e_broadTypeCast.hintSeverity>
    <!--       </Abstraction> -->
    <!--       <APIs> -->
    <!--         Be aware that this API will be optional in Java EE 7 platform. -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.OptionalEE7APIsHint.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.OptionalEE7APIsHint.enabled>
    <!--         Exporting non-public type through public API -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ExportNonAccessibleElement.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ExportNonAccessibleElement.enabled>
    <!--         Utility class with visible constructor -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_UtilityClass_5f_2.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_UtilityClass_5f_2.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_UtilityClass_5f_2.hintSeverity>VERIFIER</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_UtilityClass_5f_2.hintSeverity>
    <!--         Utility class without constructor -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_UtilityClass_5f_1.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_UtilityClass_5f_1.enabled>
    <!--       </APIs> -->
    <!--       <Assignment Issues> -->
    <!--         Assignment replaceable with operator-assignment -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_AssignmentIssues_2e_replaceAssignWithOpAssign.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_AssignmentIssues_2e_replaceAssignWithOpAssign.enabled>
    <!--         Assignment to catch-block parameter -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_AssignmentIssues_2e_assignmentToCatchBlockParameter.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_AssignmentIssues_2e_assignmentToCatchBlockParameter.enabled>
    <!--         Assignment to for-loop parameter -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_AssignmentIssues_2e_assignmentToForLoopParam.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_AssignmentIssues_2e_assignmentToForLoopParam.enabled>
    <!--         Assignment to method parameter -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_AssignmentIssues_2e_assignmentToMethodParam.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_AssignmentIssues_2e_assignmentToMethodParam.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_AssignmentIssues_2e_assignmentToMethodParam.hintSeverity>HINT</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_AssignmentIssues_2e_assignmentToMethodParam.hintSeverity>
    <!--         Nested assignment -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_AssignmentIssues_2e_nestedAssignment.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_AssignmentIssues_2e_nestedAssignment.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_AssignmentIssues_2e_nestedAssignment.hintSeverity>HINT</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_AssignmentIssues_2e_nestedAssignment.hintSeverity>
    <!--         Value of increment/decrement expression used -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_AssignmentIssues_2e_incrementDecrementUsed.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_AssignmentIssues_2e_incrementDecrementUsed.enabled>
    <!--       </Assignment Issues> -->
    <!--       <Bitwise Operations> -->
    <!--         Incompatible mask -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_IncompatibleMask.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_IncompatibleMask.enabled>
    <!--         Pointless bitwise operation -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_PointlessBitwiseExpression.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_PointlessBitwiseExpression.enabled>
    <!--         Shift operation outside of the reasonable range -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ShiftOutOfRange.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ShiftOutOfRange.enabled>
    <!--       </Bitwise Operations> -->
    <!--       <Braces> -->
    <!--         Do-While Loops Should Use Braces -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Braces_5f_DO_5f_WHILE_5f_LOOP.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Braces_5f_DO_5f_WHILE_5f_LOOP.enabled>
    <!--         For Loops Should Use Braces -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Braces_5f_FOR_5f_LOOP.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Braces_5f_FOR_5f_LOOP.enabled>
    <!--         If-Else Statements Should Use Braces -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Braces_5f_IF.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Braces_5f_IF.enabled>
    <!--         While Loops Should Use Braces -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Braces_5f_WHILE_5f_LOOP.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Braces_5f_WHILE_5f_LOOP.enabled>
    <!--       </Braces> -->
    <!--       <Class Structure> -->
    <!--         Class may be interface -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_classMayBeInterface.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_classMayBeInterface.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_classMayBeInterface.hintSeverity>HINT</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_classMayBeInterface.hintSeverity>
    <!--         Final class -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_finalClass.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_finalClass.enabled>
    <!--         Final method -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_finalMethod.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_finalMethod.enabled>
    <!--         Final method in final class -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_finalMethodInFinalClass.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_finalMethodInFinalClass.enabled>
    <!--         Final private method -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_finalPrivateMethod.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_finalPrivateMethod.enabled>
    <!--         Initializer may be static -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_InitializerCanBeStatic.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_InitializerCanBeStatic.enabled>
    <!--         Marker interface -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_markerInterface.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_markerInterface.enabled>
    <!--         Multiple top-level classes in file -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_multipleTopLevelClassesInFile.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_multipleTopLevelClassesInFile.enabled>
    <!--         No-op method in abstract class -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_noopMethodInAbstractClass.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_noopMethodInAbstractClass.enabled>
    <!--         Organize members -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_OrganizeMembers.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_OrganizeMembers.enabled>
    <!--         Protected member in final class -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_protectedMemberInFinalClass.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_protectedMemberInFinalClass.enabled>
    <!--         Public constructor in non-public class -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_publicConstructorInNonPublicClass.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ClassStructure_2e_publicConstructorInNonPublicClass.enabled>
    <!--       </Class Structure> -->
    <!--       <Code Maturity Issues> -->
    <!--         Obsolete Collection -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ObsoleteCollection.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ObsoleteCollection.enabled>
    <!--         Print Stack Trace -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_PrintStackTrace.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_PrintStackTrace.enabled>
    <!--         System out/err -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_SystemOut.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_SystemOut.enabled>
    <!--         Thread Dump Stack -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ThreadDumpStack.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ThreadDumpStack.enabled>
    <!--       </Code Maturity Issues> -->
    <!--       <Custom> -->
    <!--         Inspection -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Inspection_2e_hint.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.Inspection_2e_hint.enabled>
    <!--         Inspection_1 -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Inspection_5f_1_2e_hint.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.Inspection_5f_1_2e_hint.enabled>
    <!--         Inspection_2 -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Inspection_5f_2_2e_hint.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.Inspection_5f_2_2e_hint.enabled>
    <!--         Inspection_3 -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Inspection_5f_3_2e_hint.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.Inspection_5f_3_2e_hint.enabled>
    <!--       </Custom> -->
    <!--       <Empty Statements> -->
    <!--         Empty statement -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.EmptyStatements_5f_BLOCK.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.EmptyStatements_5f_BLOCK.enabled>
    <!--         Empty statement after 'do' -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.EmptyStatements_5f_DO_5f_WHILE_5f_LOOP.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.EmptyStatements_5f_DO_5f_WHILE_5f_LOOP.enabled>
    <!--         Empty statement after 'for' -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.EmptyStatements_5f_FOR_5f_LOOP.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.EmptyStatements_5f_FOR_5f_LOOP.enabled>
    <!--         Empty statement after 'if/else' -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.EmptyStatements_5f_IF.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.EmptyStatements_5f_IF.enabled>
    <!--         Empty statement after 'while' -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.EmptyStatements_5f_WHILE_5f_LOOP.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.EmptyStatements_5f_WHILE_5f_LOOP.enabled>
    <!--       </Empty Statements> -->
    <!--       <Encapsulation> -->
    <!--         Access of Private Field of Another Object -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_FieldEncapsulation_2e_privateField.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_FieldEncapsulation_2e_privateField.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_FieldEncapsulation_2e_privateField.hintSeverity>HINT</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_FieldEncapsulation_2e_privateField.hintSeverity>
    <!--         Assignment to Array Field from Parameter -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_ParamEncapsulation_2e_array.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_ParamEncapsulation_2e_array.enabled>
    <!--         Assignment to Collection Field from Parameter -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_ParamEncapsulation_2e_collection.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_ParamEncapsulation_2e_collection.enabled>
    <!--         Assignment to Date or Calendar Field from Parameter -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_ParamEncapsulation_2e_date.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_ParamEncapsulation_2e_date.enabled>
    <!--         Package Field -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_FieldEncapsulation_2e_packageField.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_FieldEncapsulation_2e_packageField.enabled>
    <!--         Package Visible Inner Class -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_ClassEncapsulation_2e_packageCls.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_ClassEncapsulation_2e_packageCls.enabled>
    <!--         Protected Field -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_FieldEncapsulation_2e_protectedField.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_FieldEncapsulation_2e_protectedField.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_FieldEncapsulation_2e_protectedField.hintSeverity>HINT</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_FieldEncapsulation_2e_protectedField.hintSeverity>
    <!--         Protected Inner Class -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_ClassEncapsulation_2e_protectedCls.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_ClassEncapsulation_2e_protectedCls.enabled>
    <!--         Public Field -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_FieldEncapsulation_2e_publicField.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_FieldEncapsulation_2e_publicField.enabled>
    <!--         Public Inner Class -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_ClassEncapsulation_2e_publicCls.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_ClassEncapsulation_2e_publicCls.enabled>
    <!--         Return of Array Field -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_ReturnEncapsulation_2e_array.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_ReturnEncapsulation_2e_array.enabled>
    <!--         Return of Collection Field -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_ReturnEncapsulation_2e_collection.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_ReturnEncapsulation_2e_collection.enabled>
    <!--         Return of Date or Calendar Field -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_ReturnEncapsulation_2e_date.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_encapsulation_2e_ReturnEncapsulation_2e_date.enabled>
    <!--       </Encapsulation> -->
    <!--       <Error Fixes> -->
    <!--         Create Field -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintCREATE_5f_FINAL_5f_FIELD_5f_CTOR.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintCREATE_5f_FINAL_5f_FIELD_5f_CTOR.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintCREATE_5f_FINAL_5f_FIELD_5f_CTOR.create-final-fields-from-ctor>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintCREATE_5f_FINAL_5f_FIELD_5f_CTOR.create-final-fields-from-ctor>
    <!--         Create Local Variable -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintCREATE_5f_LOCAL_5f_VARIABLE.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintCREATE_5f_LOCAL_5f_VARIABLE.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintCREATE_5f_LOCAL_5f_VARIABLE.create-local-variables-in-place>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintCREATE_5f_LOCAL_5f_VARIABLE.create-local-variables-in-place>
    <!--         Implementation of EJBContainer is missing on project's classpath -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.EmbeddableEJBContainer.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.EmbeddableEJBContainer.enabled>
    <!--         Import Class -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintIMPORT_5f_CLASS.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintIMPORT_5f_CLASS.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintIMPORT_5f_CLASS.organize-import-class>false</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintIMPORT_5f_CLASS.organize-import-class>
    <!--         Java EE API is missing on project classpath. -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.MissingJavaEEForUnitTestExecutionHint.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.MissingJavaEEForUnitTestExecutionHint.enabled>
    <!--         <Surround with try-catch> -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintSURROUND_5f_WITH_5f_TRY_5f_CATCH.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintSURROUND_5f_WITH_5f_TRY_5f_CATCH.enabled>
    <!--           Use org.openide.util.Exceptions.printStackTrace -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintSURROUND_5f_WITH_5f_TRY_5f_CATCH.surround-try-catch-org-openide-util-Exceptions>false</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintSURROUND_5f_WITH_5f_TRY_5f_CATCH.surround-try-catch-org-openide-util-Exceptions>
    <!--           Use java.util.logging.Logger -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintSURROUND_5f_WITH_5f_TRY_5f_CATCH.surround-try-catch-java-util-logging-Logger>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintSURROUND_5f_WITH_5f_TRY_5f_CATCH.surround-try-catch-java-util-logging-Logger>
    <!--           Use Exceptions.printStackTrace -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintSURROUND_5f_WITH_5f_TRY_5f_CATCH.surround-try-catch-printStackTrace>false</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintSURROUND_5f_WITH_5f_TRY_5f_CATCH.surround-try-catch-printStackTrace>
    <!--           Use throw new RuntimeException(…) -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintSURROUND_5f_WITH_5f_TRY_5f_CATCH.surround-try-catch-rethrow-runtime>false</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintSURROUND_5f_WITH_5f_TRY_5f_CATCH.surround-try-catch-rethrow-runtime>
    <!--           Use throw … -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintSURROUND_5f_WITH_5f_TRY_5f_CATCH.surround-try-catch-rethrow>false</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_errors_2e_ErrorFixesFakeHintSURROUND_5f_WITH_5f_TRY_5f_CATCH.surround-try-catch-rethrow>
    <!--         </Surround with try-catch> -->
    <!--       </Error Fixes> -->
    <!--       <Finalization> -->
    <!--         finalize() called explicitly -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_finalize_2e_CallFinalize.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_finalize_2e_CallFinalize.enabled>
    <!--         finalize() declared -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_finalize_2e_FinalizeDeclared.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_finalize_2e_FinalizeDeclared.enabled>
    <!--         finalize() does not call super.finalize() -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_finalize_2e_FinalizeDoesNotCallSuper.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_finalize_2e_FinalizeDoesNotCallSuper.enabled>
    <!--         finalize() not declared protected -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_finalize_2e_FinalizeNotProtected.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_finalize_2e_FinalizeNotProtected.enabled>
    <!--       </Finalization> -->
    <!--       <General> -->
    <!--         .equals Method not Checking Type -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_EqualsMethodHint.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_EqualsMethodHint.enabled>
    <!--         Accessing static via reference -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_StaticAccess.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_StaticAccess.enabled>
    <!--         Assignment To Itself -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.AssignmentToItself.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.AssignmentToItself.enabled>
    <!--         Check Regular Expression -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_CheckRegex.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_CheckRegex.enabled>
    <!--         Comparing Strings using == or != -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Wrong_5f_String_5f_Comparison.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Wrong_5f_String_5f_Comparison.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.Wrong_5f_String_5f_Comparison.ternary-null-check>true</org-netbeans-spi-editor-hints-projects.text.x-java.Wrong_5f_String_5f_Comparison.ternary-null-check>
    <org-netbeans-spi-editor-hints-projects.text.x-java.Wrong_5f_String_5f_Comparison.string-literals-first>true</org-netbeans-spi-editor-hints-projects.text.x-java.Wrong_5f_String_5f_Comparison.string-literals-first>
    <!--         Field hides another field -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_HideField.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_HideField.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_HideField.warn-hidden-static-fields>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_HideField.warn-hidden-static-fields>
    <!--         Generate missing hashCode or equals -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_MissingHashCode.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_MissingHashCode.enabled>
    <!--         Incorrect @modules tag -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_openjdk_2e_jtreg_2e_ModulesHint.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_openjdk_2e_jtreg_2e_ModulesHint.enabled>
    <!--         JSNI to @JavaScriptBody -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_editor_2e_htmlui_2e_JSNI2JavaScriptBody.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_editor_2e_htmlui_2e_JSNI2JavaScriptBody.enabled>
    <!--         Local variable hides a field -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_HideFieldByVar.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_HideFieldByVar.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_HideFieldByVar.warn-hidden-static-fields>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_HideFieldByVar.warn-hidden-static-fields>
    <!--         Missing Reference Output -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_openjdk_2e_jtreg_2e_MissingRefOutputHint.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_openjdk_2e_jtreg_2e_MissingRefOutputHint.enabled>
    <!--         Redundant conditional expression -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_control_2e_RedundantConditional.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_control_2e_RedundantConditional.enabled>
    <!--         Redundant if statement -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_control_2e_RedundantIf.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_control_2e_RedundantIf.enabled>
    <!--         Remove Unnecessary Continue Statement -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_control_2e_RemoveUnnecessary_2e_unnecessaryContinue.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_control_2e_RemoveUnnecessary_2e_unnecessaryContinue.enabled>
    <!--         Remove Unnecessary Label in break -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.unnecessaryBreakLabel.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.unnecessaryBreakLabel.enabled>
    <!--         Remove Unnecessary Label in continue -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.unnecessaryContinueLabel.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.unnecessaryContinueLabel.enabled>
    <!--         Remove Unnecessary Return Statement -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_RemoveUnnecessaryReturn.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_RemoveUnnecessaryReturn.enabled>
    <!--         Tag Order -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_openjdk_2e_jtreg_2e_TagOrderHint.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_openjdk_2e_jtreg_2e_TagOrderHint.enabled>
    <!--         Unnecessary Throwable.initCause -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ThrowableInitCause.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ThrowableInitCause.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ThrowableInitCause.strict>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ThrowableInitCause.strict>
    <!--         Use Functional Operations -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_mapreduce_2e_ForLoopToFunctionalHint.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_mapreduce_2e_ForLoopToFunctionalHint.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_mapreduce_2e_ForLoopToFunctionalHint.hintSeverity>HINT</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_mapreduce_2e_ForLoopToFunctionalHint.hintSeverity>
    <!--         Wrong -source -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_openjdk_2e_jtreg_2e_WrongSourceVersion.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_openjdk_2e_jtreg_2e_WrongSourceVersion.enabled>
    <!--         Wrong Package -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_WrongPackageSuggestion.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_WrongPackageSuggestion.enabled>
    <!--       </General> -->
    <!--       <Imports> -->
    <!--         Import From The Same Package -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Imports_5f_SAME_5f_PACKAGE.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Imports_5f_SAME_5f_PACKAGE.enabled>
    <!--         Import From java.lang Package -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Imports_5f_DEFAULT_5f_PACKAGE.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Imports_5f_DEFAULT_5f_PACKAGE.enabled>
    <!--         Import from Excluded -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Imports_5f_EXCLUDED.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Imports_5f_EXCLUDED.enabled>
    <!--         Organize imports -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_OrganizeImports.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_OrganizeImports.enabled>
    <!--         Star import -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Imports_5f_STAR.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Imports_5f_STAR.enabled>
    <!--         Unused Import -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Imports_5f_UNUSED.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Imports_5f_UNUSED.enabled>
    <!--       </Imports> -->
    <!--       <Initialization> -->
    <!--         Passing suspicious parameter in the constructor -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_LeakingThisInConstructor.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_LeakingThisInConstructor.enabled>
    <!--         Problematic call in the constructor -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_OverridableMethodCallInConstructor.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_OverridableMethodCallInConstructor.enabled>
    <!--         Static non-final variable used during initialization -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_StaticNonFinalUsedInInitialization.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_StaticNonFinalUsedInInitialization.enabled>
    <!--       </Initialization> -->
    <!--       <JavaDoc> -->
    <!--         Create Jaavadoc -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.create-javadoc.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.create-javadoc.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.create-javadoc.scope>protected</org-netbeans-spi-editor-hints-projects.text.x-java.create-javadoc.scope>
    <org-netbeans-spi-editor-hints-projects.text.x-java.create-javadoc.availabilitytrue>false</org-netbeans-spi-editor-hints-projects.text.x-java.create-javadoc.availabilitytrue>
    <!--         Error in Javadoc -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.error-in-javadoc.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.error-in-javadoc.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.error-in-javadoc.availabilityfalse>false</org-netbeans-spi-editor-hints-projects.text.x-java.error-in-javadoc.availabilityfalse>
    <org-netbeans-spi-editor-hints-projects.text.x-java.error-in-javadoc.scope>protected</org-netbeans-spi-editor-hints-projects.text.x-java.error-in-javadoc.scope>
    <!--       </JavaDoc> -->
    <!--       <Java EE> -->
    <!--         <Enterprise Java Beans> -->
    <!--           <Implementation Note> -->
    <!--             No checks by default, activated in profile as-needed -->
    <!--           </Implementation Note> -->
    <!--           @Remote uses value in business interface -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_ValueNotSpecifiedForRemoteAnnotationInterface.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_ValueNotSpecifiedForRemoteAnnotationInterface.enabled>
    <!--           Annotation @PostConstruct -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_AnnotationPostContruct.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_AnnotationPostContruct.enabled>
    <!--           Asynchronous method invocation -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_AsynchronousMethodInvocation.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_AsynchronousMethodInvocation.enabled>
    <!--           Bean doesn't implement business interface -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_BeanImplementsBI.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_BeanImplementsBI.enabled>
    <!--           Inheritance of session beans -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_SBSuperClassNotSB.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_SBSuperClassNotSB.enabled>
    <!--           Instantiation replaceable with @EJB injection -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_UseInjectionInsteadOfInstantionRule.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_UseInjectionInsteadOfInstantionRule.enabled>
    <!--           Local and Remote business inteface together -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_BeanHasDifferentLBIandRBI.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_BeanHasDifferentLBIandRBI.enabled>
    <!--           Method definition in local and remote interface -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_BusinessMethodExposed.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_BusinessMethodExposed.enabled>
    <!--           Method not exposed in business interface. -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_BMnotPartOfRBIandLBI.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_BMnotPartOfRBIandLBI.enabled>
    <!--           Modifiers of the EJB bean -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_LegalModifiers.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_LegalModifiers.enabled>
    <!--           No-arg constructor in the EJB bean -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_HasNoArgContructor.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_HasNoArgContructor.enabled>
    <!--           Persistent timer within EJB Lite -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_PersistentTimerInEjbLite.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_PersistentTimerInEjbLite.enabled>
    <!--           SessionSynchronization implemted by non-SFSB -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_SessionSynchImplementedBySFSBOnly.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_SessionSynchImplementedBySFSBOnly.enabled>
    <!--           Uncomplete LBI Session bean -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_LocalAnnotatedBeanHasLBI.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_LocalAnnotatedBeanHasLBI.enabled>
    <!--           Uncomplete RBI Session bean -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_RemoteAnnotatedBeanHasRBI.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_RemoteAnnotatedBeanHasRBI.enabled>
    <!--           WebService must be designated as session bean -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_WSisSLSB.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_WSisSLSB.enabled>
    <!--         </Enterprise Java Beans> -->
    <!--         <Java Persistence API> -->
    <!--           <Implementation Note> -->
    <!--             No checks by default, activated in profile as-needed -->
    <!--           </Implementation Note> -->
    <!--           Check access types for jpa classes -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_ConsistentAccessType.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_ConsistentAccessType.enabled>
    <!--           Default public/protected constructor -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_HasNoArgConstructor.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_HasNoArgConstructor.enabled>
    <!--           Entity implements Serializable verification -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_SerializableClass.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_SerializableClass.enabled>
    <!--           Entity table name verification -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_ValidPrimaryTableName.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_ValidPrimaryTableName.enabled>
    <!--           JPQL validation -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_JPQLValidation.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_JPQLValidation.enabled>
    <!--           Presence of persistence.xml -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_PersistenceUnitPresent.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_PersistenceUnitPresent.enabled>
    <!--           The IdClass must override equals(Object o) and hashCode() method. -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_IdClassOverridesEqualsAndHashCode.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_IdClassOverridesEqualsAndHashCode.enabled>
    <!--           Verify @IdClass location -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_OnlyEntityOrMappedSuperclassCanUseIdClass.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_OnlyEntityOrMappedSuperclassCanUseIdClass.enabled>
    <!--           Verify IdClass in entity subclass -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_NoIdClassOnEntitySubclass.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_NoIdClassOnEntitySubclass.enabled>
    <!--           Verify access level for IdClass -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_PublicClass.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_PublicClass.enabled>
    <!--           Verify attributes of jpa classes -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_ValidAttributes.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_ValidAttributes.enabled>
    <!--           Verify combinations of jpa annitations -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_LegalCombinationOfAnnotations.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_LegalCombinationOfAnnotations.enabled>
    <!--           Verify entity have defined promary key -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_IdDefinedInHierarchy.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_IdDefinedInHierarchy.enabled>
    <!--           Verify entity name is unique -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_UniqueEntityName.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_UniqueEntityName.enabled>
    <!--           Verify jpa annotations on accessors -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_JPAAnnotsOnlyOnAccesor.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_JPAAnnotsOnlyOnAccesor.enabled>
    <!--           Verify jpa class is top level class -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_TopLevelClass.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_TopLevelClass.enabled>
    <!--           Verify jpa class isn't final -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_NonFinalClass.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_NonFinalClass.enabled>
    <!--           Verify named query location -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_QueriesProperlyDefined.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_QueriesProperlyDefined.enabled>
    <!--         </Java Persistence API> -->
    <!--         <JavaServer Faces> -->
    <!--           <Implementation Note> -->
    <!--             No checks by default, activated in profile as-needed -->
    <!--           </Implementation Note> -->
    <!--           @FlowScoped bean in the non-CDI capable project -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_web_2e_jsf_2e_hints_2e_FlowScopedBeanWithoutCdi.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_web_2e_jsf_2e_hints_2e_FlowScopedBeanWithoutCdi.enabled>
    <!--           Classes of javax.faces.bean are gonna be deprecated -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_web_2e_jsf_2e_hints_2e_JavaxFacesBeanIsGonnaBeDeprecated.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_web_2e_jsf_2e_hints_2e_JavaxFacesBeanIsGonnaBeDeprecated.enabled>
    <!--         </JavaServer Faces> -->
    <!--       </Java EE> -->
    <!--       <JDK Migration Support> -->
    <!--         AbstractProcessor.getSupportedAnnotationTypes() is overridden -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_AnnotationProcessors_2e_oGSA.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_AnnotationProcessors_2e_oGSA.enabled>
    <!--         Add @Override Annotation -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_AddOverrideAnnotation.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_AddOverrideAnnotation.enabled>
    <!--         Add Underscores -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_AddUnderscores.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_AddUnderscores.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_AddUnderscores.hintSeverity>HINT</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_AddUnderscores.hintSeverity>
    <!--         Boxed Primitive instantiation -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_boxedPrimitiveConstruction.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_boxedPrimitiveConstruction.enabled>
    <!--         Can Use Diamond -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_canUseDiamond.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_canUseDiamond.enabled>
    <!--         Convert Explicit Type to Var -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToVarHint.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToVarHint.enabled>
    <!--         Convert Text block to String -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertTextBlockToString.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertTextBlockToString.enabled>
    <!--         Convert Var to Explicit Type -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertVarToExplicitType.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertVarToExplicitType.enabled>
    <!--         Convert switch to rule switch -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertSwitchToRuleSwitch.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertSwitchToRuleSwitch.enabled>
    <!--         Convert to Lambda of Member Reference -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_canUseLambda.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_canUseLambda.enabled>
    <!--         Convert to Text Block -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToTextBlock.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToTextBlock.enabled>
    <!--         Convert to instanceof <pattern> -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToPatternInstanceOf.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToPatternInstanceOf.enabled>
    <!--         Convert to instanceof <record pattern> -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToRecordPattern.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToRecordPattern.enabled>
    <!--         Convert to nested record pattern -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToNestedRecordPattern.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToNestedRecordPattern.enabled>
    <!--         Convert to switch pattern matching <pattern> -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToSwitchPatternInstanceOf.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToSwitchPatternInstanceOf.enabled>
    <!--         Convert to try-with-resources -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToARM.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToARM.enabled>
    <!--         Don't use Annotation as super interface -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.AnnotationAsSuperInterface.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.AnnotationAsSuperInterface.enabled>
    <!--         Join catch sections using multicatch -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_JoinCatches.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_JoinCatches.enabled>
    <!--         Missing or obsolete @SupportedSourceVersion -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.obsoleteAnnotationSupportedSource.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.obsoleteAnnotationSupportedSource.enabled>
    <!--         Static imports -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_StaticImport.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_StaticImport.enabled>
    <!--         String.indexOf can be replaced with String.contains -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_IndexOfToContains.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_IndexOfToContains.enabled>
    <!--         Too broad 'catch' clause -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_BroadCatchBlock_2e_broadCatch.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_BroadCatchBlock_2e_broadCatch.enabled>
    <!--         Unnecessary boxing -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_UnnecessaryBoxing_2e_run.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_UnnecessaryBoxing_2e_run.enabled>
    <!--         Unnecessary unboxing -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_UnnecessaryUnboxing.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_UnnecessaryUnboxing.enabled>
    <!--         Use Java 5 for-loop -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_IteratorToFor.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_IteratorToFor.enabled>
    <!--         Use specific catch -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_UseSpecificCatch.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_UseSpecificCatch.enabled>
    <!--         Use switch over Strings where possible. -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToStringSwitch.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToStringSwitch.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToStringSwitch.hintSeverity>HINT</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToStringSwitch.hintSeverity>
    <!--       </JDK Migration Support> -->
    <!--       <Logging> -->
    <!--         Logger declaration is not static final -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_LoggerNotStaticFinal.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_LoggerNotStaticFinal.enabled>
    <!--         Multiple loggers -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_MultipleLoggers.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_MultipleLoggers.enabled>
    <!--         No loggers -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_NoLoggers.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_NoLoggers.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_NoLoggers.custom-loggers>false</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_NoLoggers.custom-loggers>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_NoLoggers.custom-loggers-list />
    <!--         String concatenation in logger -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jackpot_2e_hintsimpl_2e_LoggerStringConcat.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jackpot_2e_hintsimpl_2e_LoggerStringConcat.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jackpot_2e_hintsimpl_2e_LoggerStringConcat.hintSeverity>HINT</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jackpot_2e_hintsimpl_2e_LoggerStringConcat.hintSeverity>
    <!--       </Logging> -->
    <!--       <Maven> -->
    <!--         Resolve Missing Class Dependency -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.MAVEN_5f_SEARCH_5f_HINT.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.MAVEN_5f_SEARCH_5f_HINT.enabled>
    <!--       </Maven> -->
    <!--       <Naming> -->
    <!--         Constant naming conventions -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_suggestions_2e_ConstantNameHint.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_suggestions_2e_ConstantNameHint.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_suggestions_2e_ConstantNameHint.hintSeverity>HINT</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_suggestions_2e_ConstantNameHint.hintSeverity>
    <!--       </Naming> -->
    <!--       <NetBeans Development> -->
    <!--         Empty cancel() for cancelable tasks -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_IllegalInstanceOf.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_IllegalInstanceOf.enabled>
    <!--         Illegal Use of instanceOf operator -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_EmptyCancelForCancellableTask.enabled>false</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_EmptyCancelForCancellableTask.enabled>
    <!--       </NetBeans Development> -->
    <!--       <Performance> -->
    <!--         .getClass() replaceable with .class -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_getClassInsteadOfDotClass.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_getClassInsteadOfDotClass.enabled>
    <!--         Boxing of already boxed value -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_BoxingOfBoxingValue.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_BoxingOfBoxingValue.enabled>
    <!--         Collections without initial capacity -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_InitialCapacity_2e_collections.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_InitialCapacity_2e_collections.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_InitialCapacity_2e_collections.hintSeverity>HINT</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_InitialCapacity_2e_collections.hintSeverity>
    <!--         Creating new Boolean -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_NoBooleanConstructor.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_NoBooleanConstructor.enabled>
    <!--         Inefficient Collection.toArray -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_collectionsToArray.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_collectionsToArray.enabled>
    <!--         Length one String in String.indexOf -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_lengthOneStringIndexOf.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_lengthOneStringIndexOf.enabled>
    <!--         Manual array copy -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_ManualArrayCopy.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_ManualArrayCopy.enabled>
    <!--         Map replaceable with EnumMap -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_enumMap.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_enumMap.enabled>
    <!--         Redundant String.toString() -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_redundantToString.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_redundantToString.enabled>
    <!--         Replace StringBuffer/StringBuilder by String -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_ReplaceBufferByString.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_ReplaceBufferByString.enabled>
    <!--         Set replaceable with EnumSet -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_enumSet.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_enumSet.enabled>
    <!--         String concatenation in StringBuilder.append -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.StringBuilderAppend.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.StringBuilderAppend.enabled>
    <!--         String constructor -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_stringConstructor.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_stringConstructor.enabled>
    <!--         String.equals("") -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_stringEqualsEmpty.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_stringEqualsEmpty.enabled>
    <!--         String.intern() called on constant -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_constantIntern.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_constantIntern.enabled>
    <!--         StringBuilder without initial capacity -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_InitialCapacity_2e_stringBuilder.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_InitialCapacity_2e_stringBuilder.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_InitialCapacity_2e_stringBuilder.hintSeverity>HINT</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_InitialCapacity_2e_stringBuilder.hintSeverity>
    <!--         Unnecessary temporary during conversion from String -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_unnecessaryTempFromString.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_unnecessaryTempFromString.enabled>
    <!--         Unnecessary temporary during conversion to String -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_unnecessaryTypeToString.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_Tiny_2e_unnecessaryTypeToString.enabled>
    <!--         Usage of [Collection|Map].size() == 0 -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_SizeEqualsZero.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_SizeEqualsZero.enabled>
    <!--         Useless use of StringBuffer -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_StringBuffer2Builder.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_perf_2e_StringBuffer2Builder.enabled>
    <!--       </Performance> -->
    <!--       <Probable Bugs> -->
    <!--         'finally' block suppresses exceptions -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_TryCatchFinally_2e_finallyDiscardsException.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_TryCatchFinally_2e_finallyDiscardsException.enabled>
    <!--         'throw' inside 'finally' block -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_TryCatchFinally_2e_finallyThrowsException.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_TryCatchFinally_2e_finallyThrowsException.enabled>
    <!--         .equals on Array -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_EqualsHint_2e_arrayEquals.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_EqualsHint_2e_arrayEquals.enabled>
    <!--         .equals on Incompatible Types -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_EqualsHint.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_EqualsHint.enabled>
    <!--         .equals(null) -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Tiny_2e_equalsNull.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Tiny_2e_equalsNull.enabled>
    <!--         @CheckReturnValue -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_CheckReturnValueHint.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_CheckReturnValueHint.enabled>
    <!--         Annotations without runtime Retention -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_AnnotationsNotRuntime.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_AnnotationsNotRuntime.enabled>
    <!--         Assert with side effects -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_AssertWithSideEffects.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_AssertWithSideEffects.enabled>
    <!--         Boxed value identity comparison -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_BoxedIdentityComparison.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_BoxedIdentityComparison.enabled>
    <!--         Cloneable class does not implement clone(). -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_CloneAndCloneable_2e_cloneableWithoutClone.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_CloneAndCloneable_2e_cloneableWithoutClone.enabled>
    <!--         Comparator.compare() does not use its parameter {0} -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_ComparatorParameterNotUsed_2e_run.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_ComparatorParameterNotUsed_2e_run.enabled>
    <!--         Confusing identation -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Tiny_2e_indentation.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Tiny_2e_indentation.enabled>
    <!--         Confusing primitive array passed to varargs method -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_ConfusingVarargsParameter_2e_primitiveArray.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_ConfusingVarargsParameter_2e_primitiveArray.enabled>
    <!--         Created Throwable not thrown -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_ThrowableNotThrown_2e_newThrowable.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_ThrowableNotThrown_2e_newThrowable.enabled>
    <!--         Dead Branch -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_UnusedAssignmentOrBranch_2e_deadBranch.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_UnusedAssignmentOrBranch_2e_deadBranch.enabled>
    <!--         Incompatible cast/instanceof -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_CastVSInstanceOf.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_CastVSInstanceOf.enabled>
    <!--         Incorrect column index in ResultSet -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Tiny_2e_resultSet.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Tiny_2e_resultSet.enabled>
    <!--         Infinite recursion -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_InfiniteRecursion_2e_run.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_InfiniteRecursion_2e_run.enabled>
    <!--         Malformed XPath expression -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_MalformedXPathExpression.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_MalformedXPathExpression.enabled>
    <!--         Malformed format string -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_MalformedFormatString.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_MalformedFormatString.enabled>
    <!--         Malformed regular expression -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Regexp.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Regexp.enabled>
    <!--         Math.random() casted to int -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_MathRandomCast.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_MathRandomCast.enabled>
    <!--         Null Pointer Dereference -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_NPECheck.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_NPECheck.enabled>
    <!--         Possibly missing switch "cast" statement -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Tiny_2e_switchCaseLabelMismatch.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Tiny_2e_switchCaseLabelMismatch.enabled>
    <!--         Result of new Object ignored -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Tiny_2e_newObject.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Tiny_2e_newObject.enabled>
    <!--         Single Char Regex -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Tiny_2e_singleCharRegex.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Tiny_2e_singleCharRegex.enabled>
    <!--         StringBuffer constructor called with 'char" argument -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_StringBufferCharConstructor.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_StringBufferCharConstructor.enabled>
    <!--         Suspicious Collections.toArray() call -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_SuspiciousToArray.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_SuspiciousToArray.enabled>
    <!--         Suspicious Names Combination -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_SuspiciousNamesCombination.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_SuspiciousNamesCombination.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_SuspiciousNamesCombination.hintSeverity>HINT</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_SuspiciousNamesCombination.hintSeverity>
    <!--         Suspicious invocation of System.arraycopy -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Tiny_2e_systemArrayCopy.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Tiny_2e_systemArrayCopy.enabled>
    <!--         Suspicious method call -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_CollectionRemove.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_CollectionRemove.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_CollectionRemove.warn-for-castable>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_CollectionRemove.warn-for-castable>
    <!--         Synchronizing on this in anonymous class -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ThisInAnonymous.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_ThisInAnonymous.enabled>
    <!--         Throwable method result is ignored -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_ThrowableNotThrown_2e_methodInvocation.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_ThrowableNotThrown_2e_methodInvocation.enabled>
    <!--         Unbalanced read/write with arrays -->
    <!--         NetBeans 17: Setting changes not saved -->
    <!--         Unbalanced read/write with collections -->
    <!--         NetBeans 17: Setting changes not saved -->
    <!--         Unused Assignment -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_UnusedAssignmentOrBranch_2e_unusedAssignment.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_UnusedAssignmentOrBranch_2e_unusedAssignment.enabled>
    <!--         Unused Compound Assignment -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_UnusedCompoundAssignment.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_UnusedCompoundAssignment.enabled>
    <!--         Unused Element -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Unused.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Unused.enabled>
    <!--         clone() does not call super.clone() -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_CloneAndCloneable_2e_cloneWithoutSuperClone.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_CloneAndCloneable_2e_cloneWithoutSuperClone.enabled>
    <!--         clone() does not throw CloneNotSupportedException -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_CloneAndCloneable_2e_cloneWithoutThrows.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_CloneAndCloneable_2e_cloneWithoutThrows.enabled>
    <!--         clone() in a non-Cloneable class -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_CloneAndCloneable_2e_cloneInNonCloneableClass.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_CloneAndCloneable_2e_cloneInNonCloneableClass.enabled>
    <!--         hashCode() used on array instance -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Tiny_2e_hashCodeOnArray.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_Tiny_2e_hashCodeOnArray.enabled>
    <!--         toString() used on array instance -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_ArrayStringConversions.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_bugs_2e_ArrayStringConversions.enabled>
    <!--       </Probable Bugs> -->
    <!--       <Standard Javac Warnings> -->
    <!--         Deprecated -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_DEPRECATED.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_DEPRECATED.enabled>
    <!--         Division By Zero -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_DIVISION_5f_BY_5f_ZERO.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_DIVISION_5f_BY_5f_ZERO.enabled>
    <!--         Empty Statement After If -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_EMPTY_5f_STATEMENT_5f_AFTER_5f_IF.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_EMPTY_5f_STATEMENT_5f_AFTER_5f_IF.enabled>
    <!--         Fallthrough -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_FALLTHROUGH.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_FALLTHROUGH.enabled>
    <!--         Finally -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_FINALLY.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_FINALLY.enabled>
    <!--         Overrides -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_OVERRIDES.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_OVERRIDES.enabled>
    <!--         Raw Types -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_RAWTYPES.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_RAWTYPES.enabled>
    <!--         Serialization -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_SERIALIZATION.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_SERIALIZATION.enabled>
    <!--         Unchecked -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_UNCHECKED.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_UNCHECKED.enabled>
    <!--         Unnecessary Cast -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_UNNECESSARY_5f_CAST.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.Javac_5f_UNNECESSARY_5f_CAST.enabled>
    <!--       </Standard Javac Warnings> -->
    <!--       <Suggestions> -->
    <!--         Can use Virtual Threads -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_CanUseVT.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_CanUseVT.enabled>
    <!--         Inline Redundant Variable -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_suggestions_2e_Tiny_2e_inlineRedundantVar.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_suggestions_2e_Tiny_2e_inlineRedundantVar.enabled>
    <!--         Replace chain of ifs with switch -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_suggestions_2e_ConvertIfToSwitch.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_suggestions_2e_ConvertIfToSwitch.enabled>
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_suggestions_2e_ConvertIfToSwitch.hintSeverity>HINT</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_suggestions_2e_ConvertIfToSwitch.hintSeverity>
    <!--       </Suggestions> -->
    <!--       <Testing> -->
    <!--         Inconvertible parameters of Assert.assertEquals -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_testing_2e_Tiny_2e_incovertibleTypes.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_testing_2e_Tiny_2e_incovertibleTypes.enabled>
    <!--         Incorrect order of parameters of Assert.assertEquals -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_testing_2e_Tiny_2e_mismatchedConstantVSReal.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_testing_2e_Tiny_2e_mismatchedConstantVSReal.enabled>
    <!--         assertEquals for array parameters -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_testing_2e_Tiny_2e_assertEqualsForArrays.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_testing_2e_Tiny_2e_assertEqualsForArrays.enabled>
    <!--       </Testing> -->
    <!--       <Threading> -->
    <!--         .notify invoked outside a synchronized context -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_unsyncNotify.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_unsyncNotify.enabled>
    <!--         .wait invoked outside a synchronized context -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_unsyncWait.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_unsyncWait.enabled>
    <!--         Double-checked locking -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_DoubleCheck.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_DoubleCheck.enabled>
    <!--         Empty synchronized block -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_emptySynchronized.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_emptySynchronized.enabled>
    <!--         Field Can Be Final -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_canBeFinal.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_canBeFinal.enabled>
    <!--         Invoking Condition.notify() -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_notifyOnCondition.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_notifyOnCondition.enabled>
    <!--         Invoking Condition.wait() -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_waitOnCondition.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_waitOnCondition.enabled>
    <!--         Invoking Thread.run() -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_threadRun.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_threadRun.enabled>
    <!--         Invoking Thread.stop()/suspend()/resume() -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_threadSuspend.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_threadSuspend.enabled>
    <!--         Invoking Thread.yield() -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_threadYield.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_threadYield.enabled>
    <!--         Lock not unlocked in finally -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_UnlockOutsideFinally.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_UnlockOutsideFinally.enabled>
    <!--         Nested synchronized blocks -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_nestedSynchronized.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_nestedSynchronized.enabled>
    <!--         Starting Thread in constructor -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_threadStartInConstructor.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_threadStartInConstructor.enabled>
    <!--         Synchronization on non-final field -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_SyncOnNonFinal.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_SyncOnNonFinal.enabled>
    <!--         Synchronizing on Lock -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_synchronizedOnLock.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_synchronizedOnLock.enabled>
    <!--         Thread.sleep in loop -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_sleepInLoop.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_sleepInLoop.enabled>
    <!--         Thread.sleep in synchronized context -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_sleepInSync.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_sleepInSync.enabled>
    <!--         Volatile array field -->
    <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_volatileArray.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_threading_2e_Tiny_2e_volatileArray.enabled>
    <!--       </Threading> -->
    <!--     </Java> -->
    <!--   </Hints> -->
    <!--   <Line Endings> -->
    <!--     Use project options -->
    <com-junichi11-netbeans-changelf.use-global>false</com-junichi11-netbeans-changelf.use-global>
    <com-junichi11-netbeans-changelf.use-project>true</com-junichi11-netbeans-changelf.use-project>
    <!--     Enable adjusting the line endings -->
    <com-junichi11-netbeans-changelf.enable>true</com-junichi11-netbeans-changelf.enable>
    <!--     Unix (LF) -->
    <com-junichi11-netbeans-changelf.lf-kind>LF</com-junichi11-netbeans-changelf.lf-kind>
    <!--     Show confirmation dialog before adjusting the line endings -->
    <com-junichi11-netbeans-changelf.show-dialog>true</com-junichi11-netbeans-changelf.show-dialog>
    <!--   </Line Endings> -->
    <!-- </NetBeans 17 → Project → Properties> -->
  </properties>

  <name>NMW OSS Parent</name>
  <url>https://oss.newmediaworks.com/parent/</url>
  <description>Parent POM for all New Media Works open-source software projects.</description>
  <inceptionYear>2019</inceptionYear>

  <licenses>
    <license>
      <name>GNU General Lesser Public License (LGPL) version 3.0</name>
      <url>https://www.gnu.org/licenses/lgpl-3.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <organization>
    <name>New Media Works</name>
    <url>https://www.newmediaworks.com/</url>
  </organization>

  <developers>
    <developer>
      <name>AO Industries, Inc.</name>
      <email>support@aoindustries.com</email>
      <url>https://aoindustries.com/</url>
      <organization>AO Industries, Inc.</organization>
      <organizationUrl>https://aoindustries.com/</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/newmediaworks/nmw-oss-parent.git</connection>
    <developerConnection>scm:git:git@github.com:newmediaworks/nmw-oss-parent.git</developerConnection>
    <url>https://github.com/newmediaworks/nmw-oss-parent</url>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/newmediaworks/nmw-oss-parent/issues</url>
  </issueManagement>

  <ciManagement>
    <system>Jenkins</system>
    <url>https://jenkins.aoindustries.com/job/nmw/job/oss/job/parent/</url>
  </ciManagement>
  <!-- Only one allowed in POM:
  <ciManagement>
    <system>GitHub Actions</system>
    <url>https://github.com/newmediaworks/nmw-oss-parent/actions</url>
  </ciManagement>
  -->

  <pluginRepositories>
    <pluginRepository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <checksumPolicy>fail</checksumPolicy>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>sonatype-nexus-snapshots-s01</id>
      <name>Sonatype Nexus Snapshots S01</name>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <checksumPolicy>fail</checksumPolicy>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <repositories>
    <repository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <checksumPolicy>fail</checksumPolicy>
      </snapshots>
    </repository>
    <repository>
      <id>sonatype-nexus-snapshots-s01</id>
      <name>Sonatype Nexus Snapshots S01</name>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <checksumPolicy>fail</checksumPolicy>
      </snapshots>
    </repository>
  </repositories>

  <distributionManagement>
    <snapshotRepository>
      <id>${nexusServerId}</id>
      <name>${nexusServerId}</name>
      <url>${nexusUrl}content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>${nexusServerId}</id>
      <name>${nexusServerId}</name>
      <url>${nexusUrl}service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <build>
    <extensions>
      <!-- Enabling the use of SSH for repository access -->
      <extension>
        <groupId>org.apache.maven.wagon</groupId><artifactId>wagon-ssh-external</artifactId><version>${org.apache.maven.wagon.wagon-ssh-external.version}</version>
      </extension>
    </extensions>
    <resources>
      <!-- Default Resources -->
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>src/main/resources-filtered</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <testResources>
      <!-- Default Test Resources -->
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
      <testResource>
        <directory>src/test/resources-filtered</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.simplify4u.plugins</groupId><artifactId>pgpverify-maven-plugin</artifactId><version>${org.simplify4u.plugins.pgpverify-maven-plugin.version}</version>
          <configuration>
            <quiet>true</quiet>
            <suppressSignatureOkLogging>true</suppressSignatureOkLogging>
            <verifyAtypical>true</verifyAtypical>
            <verifyPluginDependencies>true</verifyPluginDependencies>
            <verifyPlugins>true</verifyPlugins>
            <verifyProvidedDependencies>true</verifyProvidedDependencies>
            <verifyReactorDependencies>true</verifyReactorDependencies>
            <verifySnapshots>true</verifySnapshots>
            <keysMapLocations>
              <!-- See https://github.com/s4u/pgp-keys-map -->
              <keysMapLocation>/pgp-keys-map.list</keysMapLocation>
              <keysMapLocation>/com/aoapps/pgp/keys/map/pgp-keys-map.list</keysMapLocation>
            </keysMapLocations>
          </configuration>
          <dependencies>
            <!-- See https://github.com/s4u/pgp-keys-map -->
            <dependency>
              <groupId>org.simplify4u</groupId><artifactId>pgp-keys-map</artifactId><version>${org.simplify4u.pgp-keys-map.version}</version>
            </dependency>
            <dependency>
              <groupId>com.aoapps</groupId><artifactId>pgp-keys-map</artifactId><version>${com.aoapps.pgp-keys-map.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.axis2</groupId><artifactId>axis2-aar-maven-plugin</artifactId><version>${org.apache.axis2.axis2-aar-maven-plugin.version}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
              <manifestEntries>
                <Built-By>${project.organization.name}</Built-By>
                <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
                <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><version>${org.codehaus.mojo.exec-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>io.github.git-commit-id</groupId><artifactId>git-commit-id-maven-plugin</artifactId><version>${io.github.git-commit-id.git-commit-id-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-compiler-plugin</artifactId><version>${org.apache.maven.plugins.maven-compiler-plugin.version}</version>
          <configuration>
            <!-- Default to using -Xlint and showing warnings -->
            <compilerArgs>
              <!-- We exclude "exports" since we proactively declare all directly used dependencies, matching the Maven build system. -->
              <arg>-Xlint:-exports</arg>
            </compilerArgs>
            <showDeprecation>true</showDeprecation>
            <showWarnings>true</showWarnings>
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
            <release>${maven.compiler.release}</release>
            <!--
              At least in maven-compiler-plugin-3.10.1, missing package-info.class are left as Java 9+ in
              our Java <= 8 builds that include a second compilation stage in Java >= 9 solely to include
              a module-info.class.  We do not care about incremental build performance, so are reverting
              to Java's default behavior of not generating empty package-info.class files.
              See https://issues.apache.org/jira/browse/MCOMPILER-205
            -->
            <createMissingPackageInfoClass>false</createMissingPackageInfoClass>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-enforcer-plugin</artifactId><version>${org.apache.maven.plugins.maven-enforcer-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.mojo</groupId><artifactId>extra-enforcer-rules</artifactId><version>${org.codehaus.mojo.extra-enforcer-rules.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-resources-plugin</artifactId><version>${org.apache.maven.plugins.maven-resources-plugin.version}</version>
          <configuration>
            <useDefaultDelimiters>false</useDefaultDelimiters>
            <delimiters>
              <!-- ${*} is JSP EL and shell scripts, so avoiding it -->
              <!-- #{*} is JSP EL deferred syntax, so avoiding it -->
              <!-- %{*} is Struts forced expression evaluation syntax, so avoiding it -->
              <!-- @{*} selected over @*@, as it gives our developers a more
                   consistent representation with JSP EL and shell scripts -->
              <delimiter>@{*}</delimiter>
            </delimiters>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId><artifactId>jacoco-maven-plugin</artifactId><version>${org.jacoco.jacoco-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId><version>${org.apache.maven.plugins.maven-surefire-plugin.version}</version>
          <configuration>
            <!-- Show full stack traces to help debugging -->
            <trimStackTrace>false</trimStackTrace>
          </configuration>
        </plugin>
        <!-- We need newer dependency plugin for Java 8 compatibility -->
        <!-- See https://issues.apache.org/jira/browse/MDEP-439 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-dependency-plugin</artifactId><version>${org.apache.maven.plugins.maven-dependency-plugin.version}</version>
          <configuration>
            <ignoreNonCompile>true</ignoreNonCompile>
            <silent>true</silent>
          </configuration>
        </plugin>
        <!-- Supporting packaging of "bundle" for OSGi bundles -->
        <plugin>
          <groupId>org.apache.felix</groupId><artifactId>maven-bundle-plugin</artifactId><version>${org.apache.felix.maven-bundle-plugin.version}</version>
          <configuration>
            <instructions>
              <_removeheaders>POST-SNAPSHOT</_removeheaders>
              <!--
                _nouses to avoid NP-hard time complexity in "uses" resolvers.
                See https://github.com/apache/commons-parent/blob/master/pom.xml
                See https://cwiki.apache.org/confluence/display/UIMA/Building+Eclipse+Plugins+with+maven-bundle-plugin+and+friends
                See https://www.eclipse.org/lists/stp-dev/msg01624.html
              -->
              <_nouses>true</_nouses>
              <Bundle-DocURL>${project.url}</Bundle-DocURL>
              <!--
                Other values seen at http://maven.reprezen.com/repository/releases/com/fasterxml/oss-parent/11/oss-parent-11.pom
                With documentation found at https://felix.apache.org/documentation/subprojects/apache-felix-maven-bundle-plugin-bnd.html
                Also from https://maven.apache.org/shared/maven-archiver/
              -->
              <Bundle-Name>${project.name}</Bundle-Name>
              <Bundle-SymbolicName>${module.name}</Bundle-SymbolicName>
              <Bundle-Description>${project.description}</Bundle-Description>
              <Implementation-Title>${project.name}</Implementation-Title>
              <Implementation-Version>${parsedVersion.osgiVersion}</Implementation-Version>
              <Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
              <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
              <Implementation-URL>${project.url}</Implementation-URL>
              <Specification-Title>${project.name}</Specification-Title>
              <Specification-Version>${project.artifact.selectedVersion.majorVersion}.${project.artifact.selectedVersion.minorVersion}</Specification-Version>
              <Specification-Vendor>${project.organization.name}</Specification-Vendor>
              <!-- Instructions not found in docs, and adapted by what found in https://github.com/mybatis/parent/blob/master/pom.xml -->
              <Built-By>${project.organization.name}</Built-By>
              <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
              <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
              <!-- Optional Main-Class, as seen at https://github.com/FasterXML/oss-parent/blob/master/pom.xml -->
              <Main-Class>${osgi.mainClass}</Main-Class>
              <!-- Optional Permissions -->
              <Permissions>${osgi.permissions}</Permissions>
            </instructions>
          </configuration>
          <executions>
            <!-- Do not install to any OBR repositories -->
            <execution>
              <id>default-install</id><phase>none</phase>
            </execution>
            <execution>
              <id>default-deploy</id><phase>none</phase>
            </execution>
          </executions>
        </plugin>
        <!-- Other plugins used below -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId><artifactId>build-helper-maven-plugin</artifactId><version>${org.codehaus.mojo.build-helper-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>io.reformanda.semper</groupId><artifactId>dependencyversion-maven-plugin</artifactId><version>${io.reformanda.semper.dependencyversion-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <!-- See https://sonatype.github.io/ossindex-maven/maven-plugin/ -->
          <groupId>org.sonatype.ossindex.maven</groupId><artifactId>ossindex-maven-plugin</artifactId><version>${org.sonatype.ossindex.maven.ossindex-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-release-plugin</artifactId><version>${org.apache.maven.plugins.maven-release-plugin.version}</version>
          <configuration>
            <releaseProfiles>release</releaseProfiles>
            <goals>deploy</goals>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.sonatype.plugins</groupId><artifactId>nexus-staging-maven-plugin</artifactId><version>${org.sonatype.plugins.nexus-staging-maven-plugin.version}</version>
          <configuration>
            <!--
              Use direct deployment instead of deferred for two reasons:
              1) Total deploy time is significantly reduced because artifact uploads happen in parallel
                 during the builds.  With deferred deployment, the artifact uploads are sequential.
              2) When the reactor happens to end on a project with skipNexusStagingDeployMojo=true, the
                 staging will not occur.
            -->
            <skipLocalStaging>${build.isSnapshot}</skipLocalStaging>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId><artifactId>versions-maven-plugin</artifactId><version>${org.codehaus.mojo.versions-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-gpg-plugin</artifactId><version>${org.apache.maven.plugins.maven-gpg-plugin.version}</version>
          <configuration>
            <lockMode>multiple</lockMode>
            <homedir>${gpg.oss-newmediaworks-com.homedir}</homedir>
            <keyname>${gpg.oss-newmediaworks-com.keyname}</keyname>
            <passphrase>${gpg.oss-newmediaworks-com.passphrase}</passphrase>
          </configuration>
        </plugin>
        <!--
          Setup a few global plugin versions so we don't have to specify elsewhere.
          This includes the versions of other plugins inherited from the super-pom without versions.
          This also keeps the output of versions:display-plugin-updates more meaningful.
        -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-clean-plugin</artifactId><version>${org.apache.maven.plugins.maven-clean-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-deploy-plugin</artifactId><version>${org.apache.maven.plugins.maven-deploy-plugin.version}</version>
          <executions>
            <execution>
              <id>default-deploy</id><phase>${default-deploy.phase}</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-install-plugin</artifactId><version>${org.apache.maven.plugins.maven-install-plugin.version}</version>
          <executions>
            <execution>
              <id>default-install</id><phase>${default-install.phase}</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-jar-plugin</artifactId><version>${org.apache.maven.plugins.maven-jar-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-remote-resources-plugin</artifactId><version>${org.apache.maven.plugins.maven-remote-resources-plugin.version}</version>
          <configuration>
            <useDefaultFilterDelimiters>false</useDefaultFilterDelimiters>
            <filterDelimiters>
              <!-- ${*} is JSP EL and shell scripts, so avoiding it -->
              <!-- #{*} is JSP EL deferred syntax, so avoiding it -->
              <!-- %{*} is Struts forced expression evaluation syntax, so avoiding it -->
              <!-- @{*} selected over @*@, as it gives our developers a more
                 consistent representation with JSP EL and shell scripts -->
              <filterDelimiter>@{*}</filterDelimiter>
            </filterDelimiters>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${org.apache.maven.plugins.maven-war-plugin.version}</version>
          <configuration>
            <useDefaultDelimiters>false</useDefaultDelimiters>
            <delimiters>
              <!-- ${*} is JSP EL and shell scripts, so avoiding it -->
              <!-- #{*} is JSP EL deferred syntax, so avoiding it -->
              <!-- %{*} is Struts forced expression evaluation syntax, so avoiding it -->
              <!-- @{*} selected over @*@, as it gives our developers a more
                 consistent representation with JSP EL and shell scripts -->
              <delimiter>@{*}</delimiter>
            </delimiters>
            <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
            <warSourceDirectory>src/main/webapp</warSourceDirectory>
            <warSourceExcludes>${maven-war-plugin.warSourceExcludes.default}</warSourceExcludes>
            <webResources>
              <!-- Default Web Resources -->
              <resource>
                <directory>src/main/webapp-filtered</directory>
                <filtering>true</filtering>
              </resource>
            </webResources>
            <packagingExcludes>${maven-war-plugin.packagingExcludes.default}</packagingExcludes>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
              <manifestEntries>
                <Built-By>${project.organization.name}</Built-By>
                <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
                <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><version>${org.apache.maven.plugins.maven-source-plugin.version}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
              <manifestEntries>
                <Built-By>${project.organization.name}</Built-By>
                <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
                <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-javadoc-plugin</artifactId><version>${org.apache.maven.plugins.maven-javadoc-plugin.version}</version>
          <dependencies>
            <!-- For plugin maven-javadoc-plugin:3.0.1, resolves "Unsupported class file major version 55" -->
            <dependency>
              <groupId>org.ow2.asm</groupId><artifactId>asm</artifactId><version>${org.ow2.asm.asm.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <source>${maven.compiler.source}</source>
            <release>${maven.compiler.release}</release>
            <doclint>all,-missing</doclint>
            <doctitle>${project.name} ${build.versionNoPostSnapshot} API</doctitle>
            <windowtitle>${project.name} ${build.versionNoPostSnapshot} API</windowtitle>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
              <manifestEntries>
                <Built-By>${project.organization.name}</Built-By>
                <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
                <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
              </manifestEntries>
            </archive>
            <notimestamp>true</notimestamp>
            <packagesheader><![CDATA[<a target="${javadoc.target}" href="${project.url}">${project.name} ${build.versionNoPostSnapshot}</a>]]></packagesheader>
            <header><![CDATA[<a target="${javadoc.target}" href="${project.url}">${project.name} ${build.versionNoPostSnapshot}</a>]]></header>
            <keywords>true</keywords><!-- Help internal search systems -->
            <quiet>true</quiet>
            <docfilessubdirs>true</docfilessubdirs>
            <!-- Links to JDK docs are added manually to the https version on a per-project basis -->
            <detectJavaApiLink>false</detectJavaApiLink>
            <!-- Links between projects are added manually on a per-project basis -->
            <detectOfflineLinks>false</detectOfflineLinks>
            <!-- Java 17: Use -legal-notices with the project's license: https://bugs.openjdk.org/browse/JDK-8259530 -->
            <top>
<![CDATA[<style>
  ${javadoc.html.style}
  div#nmw-javadoc-resources-fork-me {
    position: absolute;
    top: 0;
    right: 0;
    width: 149px;
    height: 149px;
  }
  div#nmw-javadoc-resources-fork-me img {
    border: 0;
  }
  div#nmw-javadoc-resources-top {
    font-size: 10px;
    margin: 0.5em 0;
  }
  div#nmw-javadoc-resources-top h1 {
    font-size: 18px;
    margin: 0 1em;
  }
  div#nmw-javadoc-resources-top h1 img {
    display: inline-block;
    vertical-align: middle;
    line-height: 30px;
  }
  div#nmw-javadoc-resources-top h2 {
    font-size: 12px;
    margin-top: 0em;
    margin-bottom: 6px;
  }
  div#nmw-javadoc-resources-top > p {
    font-size: 12px;
    margin-left: 1em;
    margin-right: 1em;
  }
  div#nmw-javadoc-resources-top > div {
    float: left;
    margin: 0 1em;
  }
  div#nmw-javadoc-resources-top p,
  div#nmw-javadoc-resources-top ul {
    margin-top: 6px;
    margin-bottom: 6px;
  }
</style>
<div id="nmw-javadoc-resources-fork-me">
  <a target="${javadoc.target}" href="${project.scm.url}">
    <img src="{@docRoot}/nmw-javadoc-resources/fork-me.png" width="149" height="149" alt="Fork me on GitHub" />
  </a>
</div>
<div id="nmw-javadoc-resources-top">
  <h1><a target="${javadoc.target}" href="https://newmediaworks.com/"><img src="{@docRoot}/nmw-javadoc-resources/nmw-logo.png" alt="New Media Works Logo" width="30" height="30" /></a>
  ${javadoc.breadcrumbs}</h1>
  <p>
    ${description.html}
  </p>
  <div>
    <h2>Project Links</h2>
    <ul>
      <li><a target="${javadoc.target}" href="${project.url}">Project Home</a></li>
      <li><a target="${javadoc.target}" href="${project.url}changelog">Changelog</a></li>
      ${javadoc.taglibReference}
      <li><a target="${javadoc.target}" href="${project.url}${subproject.subpath}apidocs/">API Docs</a></li>
      <li><a target="${javadoc.target}" href="https://central.sonatype.com/artifact/${project.groupId}/${project.artifactId}">Maven Central Repository</a></li>
      <li><a target="${javadoc.target}" href="${project.scm.url}">GitHub</a></li>
    </ul>
  </div>
  ${javadoc.modules}
  ${javadoc.relatedProjects}
  <div>
    <h2>Contact Us</h2>
    <p>
      For questions or support, please <a target="${javadoc.target}" href="https://www.newmediaworks.com/html/contact.html">contact us</a>:
    </p>
    <p>
      Email: <a target="${javadoc.target}" href="mailto:info@newmediaworks.com">info@newmediaworks.com</a><br />
      Phone: <a target="${javadoc.target}" href="tel:+1-707-252-7700">+1-707-252-7700</a><br />
      Web: <a target="${javadoc.target}" href="https://www.newmediaworks.com/html/contact.html">https://www.newmediaworks.com/html/contact.html</a>
    </p>
  </div>
</div>]]>
            </top>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-antrun-plugin</artifactId><version>${org.apache.maven.plugins.maven-antrun-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-checkstyle-plugin</artifactId><version>${org.apache.maven.plugins.maven-checkstyle-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId><artifactId>checkstyle</artifactId><version>${com.puppycrawl.tools.checkstyle.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <!-- TODO: https://checkstyle-addons.thomasjensen.com/ ? -->
            <!-- TODO: https://sevntu-checkstyle.github.io/sevntu.checkstyle/ ? -->
            <!-- TODO: Jenkins -->
            <!-- TODO: SonarQube -->
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.github.spotbugs</groupId><artifactId>spotbugs-maven-plugin</artifactId><version>${com.github.spotbugs.spotbugs-maven-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>com.github.spotbugs</groupId><artifactId>spotbugs</artifactId><version>${com.github.spotbugs.spotbugs.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <!-- TODO: http://fb-contrib.sourceforge.net/ ? -->
            <!-- TODO: https://find-sec-bugs.github.io/ ? -->
            <!-- TODO: Try findsecbugs-plugin:
            <plugins>
              <plugin>
                <groupId>com.h3xstream.findsecbugs</groupId><artifactId>findsecbugs-plugin</artifactId><version>${com.h3xstream.findsecbugs.findsecbugs-plugin.version}</version>
              </plugin>
            </plugins>
            -->
            <!-- TODO: Jenkins -->
            <xmlOutput>true</xmlOutput>
            <!-- TODO: SonarQube:
              https://spotbugs.readthedocs.io/en/stable/use-plugin-on-sonarqube.html
              https://docs.sonarqube.org/latest/analysis/external-issues/
            -->
            <failOnError>true</failOnError>
            <!-- TODO: How to set properties?
            <findbugs.maskedfields.locals>true</findbugs.maskedfields.locals>
            -->
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-site-plugin</artifactId><version>${org.apache.maven.plugins.maven-site-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId><artifactId>sonar-maven-plugin</artifactId><version>${org.sonarsource.scanner.maven.sonar-maven-plugin.version}</version>
        </plugin>
        <!-- Plugins used by some project-specific pom.xml -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-shade-plugin</artifactId><version>${org.apache.maven.plugins.maven-shade-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId><artifactId>maven-jarsigner-plugin</artifactId><version>${org.apache.maven.plugins.maven-jarsigner-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.tomcat.maven</groupId><artifactId>tomcat7-maven-plugin</artifactId><version>${org.apache.tomcat.maven.tomcat7-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId><artifactId>properties-maven-plugin</artifactId><version>${org.codehaus.mojo.properties-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.eclipse.jetty</groupId><artifactId>jetty-maven-plugin</artifactId><version>${org.eclipse.jetty.jetty-maven-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.simplify4u.plugins</groupId><artifactId>pgpverify-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>pgpverify-check</id><phase>${pgpverify-check.phase}</phase><goals><goal>check</goal></goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.github.git-commit-id</groupId><artifactId>git-commit-id-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>git.commit.time</id><phase>${git.commit.time.phase}</phase><goals><goal>revision</goal></goals>
            <configuration>
              <skipPoms>false</skipPoms>
              <dateFormat>yyyy-MM-dd'T'HH:mm:ss'Z'</dateFormat>
              <dateFormatTimeZone>Etc/UTC</dateFormatTimeZone>
              <includeOnlyProperties>
                <includeOnlyProperty>^git\.commit\.time$</includeOnlyProperty>
              </includeOnlyProperties>
              <injectIntoSysProperties>false</injectIntoSysProperties>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId><artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-jdk</id><phase>${enforce-jdk.phase}</phase><goals><goal>enforce</goal></goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <!-- Matches Java version for ao-ant-tasks -->
                  <!-- Matches Java version for ao-checkstyle-config -->
                  <!-- Matches Java version for ao-javadoc-offline -->
                  <!-- Matches Java version for ao-javadoc-resources (and related forks) -->
                  <!-- Matches Java version for ao-pgp-keys-map -->
                  <message>JDK &gt;= 11 required for building</message>
                  <version>[11,)</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>enforce-maven</id><phase>${enforce-maven.phase}</phase><goals><goal>enforce</goal></goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <message>Maven &gt;= 3.9.0 required for profile activation by packaging</message>
                  <version>[3.9.0,)</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>enforce-project.build.outputTimestamp-iso8601</id><phase>${enforce-project.build.outputTimestamp-iso8601.phase}</phase><goals><goal>enforce</goal></goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>project.build.outputTimestamp</property>
                  <regex>^[0-9]{4,}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$</regex>
                  <regexMessage>Property 'project.build.outputTimestamp' must be an ISO 8601 timestamp in 'yyyy-MM-ddTHH:mm:ssZ' format.</regexMessage>
                </requireProperty>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>enforce-bytecode-version</id><phase>${enforce-bytecode-version.phase}</phase><goals><goal>enforce</goal></goals>
            <configuration>
              <rules>
                <enforceBytecodeVersion>
                  <maxJdkVersion>${javase.release}</maxJdkVersion>
                  <ignoreClasses>
                    <!--
                      com.fasterxml.jackson.core:* artifacts are Java 8 but have Java 9+ builds of package-info,
                      ignore package-info from bytecode version checks on all projects.
                    -->
                    <ignoreClass>*.package-info</ignoreClass>
                  </ignoreClasses>
                </enforceBytecodeVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId><artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <!-- Make the components of the current version available as parsedVersion.* properties -->
          <execution>
            <id>parse-version</id><goals><goal>parse-version</goal></goals>
          </execution>
          <!--
            Set boolean properties "build.isSnapshot" and "build.noSnapshot" based on is a snapshot build,
            see https://stackoverflow.com/a/39139979
          -->
          <execution>
            <id>build.isSnapshot</id><goals><goal>regex-properties</goal></goals>
            <configuration>
              <regexPropertySettings>
                <regexPropertySetting>
                  <name>build.isSnapshot</name>
                  <value>${project.version}</value>
                  <regex>.*-SNAPSHOT$</regex>
                  <replacement>true</replacement>
                  <failIfNoMatch>false</failIfNoMatch>
                </regexPropertySetting>
                <regexPropertySetting>
                  <name>build.notSnapshot</name>
                  <value>${project.version}</value>
                  <regex>.*-SNAPSHOT$</regex>
                  <replacement>false</replacement>
                  <failIfNoMatch>false</failIfNoMatch>
                </regexPropertySetting>
              </regexPropertySettings>
            </configuration>
          </execution>
          <execution>
            <id>build.notSnapshot</id><goals><goal>regex-properties</goal></goals>
            <configuration>
              <regexPropertySettings>
                <regexPropertySetting>
                  <name>build.isSnapshot</name>
                  <value>${build.isSnapshot}</value>
                  <regex>^((?!^true$).)*$</regex>
                  <replacement>false</replacement>
                  <failIfNoMatch>false</failIfNoMatch>
                </regexPropertySetting>
                <regexPropertySetting>
                  <name>build.notSnapshot</name>
                  <value>${build.notSnapshot}</value>
                  <regex>^((?!^false$).)*$</regex>
                  <replacement>true</replacement>
                  <failIfNoMatch>false</failIfNoMatch>
                </regexPropertySetting>
              </regexPropertySettings>
            </configuration>
          </execution>
          <!-- Determine the type of Java EE, either "javaee" or "jakartaee". -->
          <execution>
            <id>build.javadoc.link.javaee.type.javaee</id><goals><goal>regex-properties</goal></goals>
            <configuration>
              <regexPropertySettings>
                <regexPropertySetting>
                  <name>javadoc.link.javaee.type</name>
                  <value>${javaee.version}</value>
                  <regex>^(5|6|7)$</regex>
                  <replacement>javaee</replacement>
                  <failIfNoMatch>false</failIfNoMatch>
                </regexPropertySetting>
              </regexPropertySettings>
            </configuration>
          </execution>
          <execution>
            <id>build.javadoc.link.javaee.type.jakartaee</id><goals><goal>regex-properties</goal></goals>
            <configuration>
              <regexPropertySettings>
                <regexPropertySetting>
                  <name>javadoc.link.javaee.type</name>
                  <value>${javadoc.link.javaee.type}</value>
                  <regex>^((?!^javaee$).)*$</regex>
                  <replacement>jakartaee</replacement>
                  <failIfNoMatch>false</failIfNoMatch>
                </regexPropertySetting>
              </regexPropertySettings>
            </configuration>
          </execution>
          <!-- Create build.currentYear property for filtering -->
          <execution>
            <id>build.currentYear</id><goals><goal>regex-properties</goal></goals>
            <configuration>
              <regexPropertySettings>
                <regexPropertySetting>
                  <name>build.currentYear</name>
                  <value>${project.build.outputTimestamp}</value>
                  <regex>^([0-9]+)-.*$</regex>
                  <replacement>$1</replacement>
                  <failIfNoMatch>true</failIfNoMatch>
                </regexPropertySetting>
              </regexPropertySettings>
            </configuration>
          </execution>
          <!-- Create build.versionNoPostSnapshot property for version numbers without -POST-SNAPSHOT -->
          <execution>
            <id>build.versionNoPostSnapshot</id><goals><goal>regex-properties</goal></goals>
            <configuration>
              <regexPropertySettings>
                <regexPropertySetting>
                  <name>build.versionNoPostSnapshot</name>
                  <value>${project.version}</value>
                  <regex>^(.+?)(?:-POST-SNAPSHOT)?$</regex>
                  <replacement>$1</replacement>
                  <failIfNoMatch>true</failIfNoMatch>
                </regexPropertySetting>
              </regexPropertySettings>
            </configuration>
          </execution>
          <!-- Support generated resources on all projects -->
          <execution>
            <id>add-generated-resources</id><goals><goal>add-resource</goal></goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.build.directory}/generated-resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>add-generated-test-resources</id><goals><goal>add-test-resource</goal></goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.build.directory}/generated-test-resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Sign all builds except "skip-war" -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId><artifactId>maven-gpg-plugin</artifactId>
        <executions>
          <execution>
            <id>sign-artifacts</id><phase>${sign-artifacts.phase}</phase><goals><goal>sign</goal></goals>
          </execution>
        </executions>
      </plugin>
      <!-- Make dependency versions available as properties -->
      <plugin>
        <groupId>io.reformanda.semper</groupId><artifactId>dependencyversion-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>set-all</id><goals><goal>set-version</goal></goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- See https://sonatype.github.io/ossindex-maven/maven-plugin/ -->
        <groupId>org.sonatype.ossindex.maven</groupId><artifactId>ossindex-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>audit-dependencies</id><phase>${audit-dependencies.phase}</phase><goals><goal>audit</goal></goals>
            <configuration>
              <!-- Perform audit, fail the build when vulnerable components are found -->
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId><artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <!-- Analyze dependencies, fail the build when problems found -->
          <execution>
            <id>analyze-dependencies</id><phase>${analyze-dependencies.phase}</phase><goals><goal>analyze-only</goal></goals>
            <configuration>
              <failOnWarning>true</failOnWarning>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Supporting packaging of "bundle" for OSGi bundles -->
      <plugin>
        <groupId>org.apache.felix</groupId><artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
      </plugin>
      <plugin>
        <!--
          Workaround "versions:display-plugin-updates" failing when "development" profile active.
          See https://github.com/mojohaus/versions-maven-plugin/issues/354
        -->
        <groupId>org.apache.maven.plugins</groupId><artifactId>maven-deploy-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId><artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <!-- Add tests as a secondary artifact -->
            <id>attach-tests</id><phase>${attach-tests.phase}</phase><goals><goal>test-jar</goal></goals>
            <configuration>
              <archive>
                <manifest>
                  <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                  <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                </manifest>
                <manifestEntries>
                  <Built-By>${project.organization.name}</Built-By>
                  <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
                  <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
                </manifestEntries>
              </archive>
              <!-- Unless empty -->
              <skipIfEmpty>true</skipIfEmpty>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!--
          maven-javadoc-plugin:3.0.1: Must be defined before "maven-antrun-plugin" workaround
          "copy-element-list-to-package-list-before-javadoc" so extracted element-list files are copied, too.
        -->
        <groupId>org.apache.maven.plugins</groupId><artifactId>maven-remote-resources-plugin</artifactId>
      </plugin>
      <!-- Attach sources only during release builds -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id><phase>${attach-sources.phase}</phase><goals><goal>jar-no-fork</goal></goals>
          </execution>
          <execution>
            <!-- Add tests as a secondary artifact -->
            <id>attach-test-sources</id><phase>${attach-test-sources.phase}</phase><goals><goal>test-jar-no-fork</goal></goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId><artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <!-- Create javadocs -->
          <execution>
            <id>attach-javadocs</id><phase>${attach-javadocs.phase}</phase><goals><goal>jar</goal></goals>
          </execution>
          <!-- Create test javadocs during release builds -->
          <execution>
            <id>attach-test-javadocs</id><phase>${attach-test-javadocs.phase}</phase><goals><goal>test-jar</goal></goals>
          </execution>
        </executions>
      </plugin>
      <!--
        Make sure everything else is packaged before timestamp manipulation.
        This must be after the following plugins:
          axis2-aar-maven-plugin
          maven-bundle-plugin
          maven-jar-plugin
          maven-remote-resources-plugin
          maven-war-plugin
          maven-source-plugin
          maven-javadoc-plugin
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId><artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <!--
            Verify ${project.build.outputTimestamp} equals ${git.commit.time} to ensure
            ${project.build.outputTimestamp} is properly set back to ${git.commit.time} after releases. -->
          <execution>
            <id>enforce-git.commit.time</id><phase>${enforce-git.commit.time.phase}</phase><goals><goal>run</goal></goals>
            <configuration>
              <target>
                <condition property="outputTimestampIsCommitTime">
                  <equals arg1="${project.build.outputTimestamp}" arg2="${git.commit.time}" forcestring="true" />
                </condition>
                <fail unless="outputTimestampIsCommitTime" message="Property 'project.build.outputTimestamp' must be set to $${git.commit.time} except during release: &quot;${project.build.outputTimestamp}&quot; != &quot;${git.commit.time}&quot;" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId><artifactId>maven-project-info-reports-plugin</artifactId><version>${org.apache.maven.plugins.maven-project-info-reports-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId><artifactId>jacoco-maven-plugin</artifactId><version>${org.jacoco.jacoco-maven-plugin.version}</version>
        <!-- See https://www.eclemma.org/jacoco/trunk/doc/maven.html -->
        <reportSets>
          <reportSet>
            <reports>
              <!-- select non-aggregate reports -->
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <!--
      This profile is not active by default.
      Activate in ~/.m2/settings.xml to use post-release builds as dependencies:
      <profile>
        <id>POST-SNAPSHOT</id>
        <activation>
          <activeByDefault>true</activeByDefault>
        </activation>
        <properties>
          <POST-SNAPSHOT>-POST-SNAPSHOT</POST-SNAPSHOT>
        </properties>
      </profile>

      This profile must not be active while performing a release.  Deactivate with:
      mvn -Prelease,'!POST-SNAPSHOT' …

      Post-release builds happen after a release and before a new -SNAPSHOT is
      started.  They are used to ensure that previous releases still compile
      against newer dependencies.

      Furthermore, post-release builds may contain the following changes without
      being promoted to the next -SNAPSHOT version:
      1) Updated parent POM
      2) Updated POM
      3) Updated Java version (without any source code changes)
      4) Updated dependency versions
      5) Updated javadocs
      6) Updated documentation
      7) Updated unit tests
      8) Deprecated methods and classes
      9) Renamed private fields and local variables
      10) Other changes to white-space or comments

      Post-release builds also allow NetBeans to correctly connect projects
      together for those who are actively developing multiple modules.

      Those who are only using the dependency can use the regular release to
      avoid the overhead of the daily check for updates.
    -->
    <profile>
      <id>POST-SNAPSHOT</id>
      <properties>
        <POST-SNAPSHOT>-POST-SNAPSHOT</POST-SNAPSHOT>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>require-POST-SNAPSHOT-is-snapshot-version</id><phase>${require-POST-SNAPSHOT-is-snapshot-version.phase}</phase><goals><goal>enforce</goal></goals>
                <configuration>
                  <rules>
                    <requireSnapshotVersion>
                      <message>"POST-SNAPSHOT" profile may only be used for *-SNAPSHOT versions.</message>
                    </requireSnapshotVersion>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- When the keys map file is present, we are building com.aoapps:pgp-keys-map, use file directly to avoid cyclic dependency -->
    <!-- com.aoapps:pgp-keys-map does not have this as a parent:
    <profile>
      <id>pgp-keys-map-direct</id>
      <activation><file><exists>src/main/resources/com/aoapps/pgp/keys/map/pgp-keys-map.list</exists></file></activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.simplify4u.plugins</groupId><artifactId>pgpverify-maven-plugin</artifactId>
              <configuration>
                <keysMapLocations>
                  <!- - See https://github.com/s4u/pgp-keys-map - ->
                  <keysMapLocation>/pgp-keys-map.list</keysMapLocation>
                  <keysMapLocation>${project.basedir}/src/main/resources/com/aoapps/pgp/keys/map/pgp-keys-map.list</keysMapLocation>
                </keysMapLocations>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    -->
    <!-- Otherwise, obtain the keys map file from the com.aoapps:pgp-keys-map artifact -->
    <!-- com.aoapps:pgp-keys-map does not have this as a parent:
    <profile>
      <id>pgp-keys-map</id>
      <activation><file><missing>src/main/resources/com/aoapps/pgp/keys/map/pgp-keys-map.list</missing></file></activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.simplify4u.plugins</groupId><artifactId>pgpverify-maven-plugin</artifactId>
              <configuration>
                <keysMapLocations>
                  <!- - See https://github.com/s4u/pgp-keys-map - ->
                  <keysMapLocation>/pgp-keys-map.list</keysMapLocation>
                  <keysMapLocation>/com/aoapps/pgp/keys/map/pgp-keys-map.list</keysMapLocation>
                </keysMapLocations>
              </configuration>
              <dependencies>
                <dependency>
                  <groupId>com.aoapps</groupId><artifactId>pgp-keys-map</artifactId><version>${com.aoapps.pgp-keys-map.version}</version>
                </dependency>
              </dependencies>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    -->
    <!-- Support per-project pgp-keys-map.list -->
    <profile>
      <id>pgp-keys-map.list</id>
      <activation><file><exists>pgp-keys-map.list</exists></file></activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.simplify4u.plugins</groupId><artifactId>pgpverify-maven-plugin</artifactId>
              <configuration>
                <keysMapLocations>
                  <!-- See https://github.com/s4u/pgp-keys-map -->
                  <keysMapLocation>/pgp-keys-map.list</keysMapLocation>
                  <keysMapLocation>/com/aoapps/pgp/keys/map/pgp-keys-map.list</keysMapLocation>
                  <keysMapLocation>${project.basedir}/pgp-keys-map.list</keysMapLocation>
                </keysMapLocations>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <!-- Obtain AO Ant Tasks from the com.aoapps:ao-ant-tasks artifact unless we are building com.aoapps:ao-ant-tasks to avoid cyclic dependency -->
    <profile>
      <id>ao-ant-tasks.maven-antrun-plugin.dependency</id>
      <activation>
        <property><name>packaging</name><value>!pom</value></property>
        <file><missing>profile.d/ao-ant-tasks.maven-antrun-plugin.dependency.skip</missing></file>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId><artifactId>maven-antrun-plugin</artifactId>
              <dependencies>
                <dependency>
                  <groupId>com.aoapps</groupId><artifactId>ao-ant-tasks</artifactId><version>${com.aoapps.ao-ant-tasks.version}</version>
                </dependency>
              </dependencies>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <!-- Allow changing build directory by property: https://stackoverflow.com/a/12598554/7121505 -->
    <profile>
      <id>alternateBuildDir</id>
      <activation>
        <property>
          <name>alt.build.dir</name>
        </property>
      </activation>
      <properties>
        <bundle.resources-filtered>${alt.build.dir}/resources-filtered</bundle.resources-filtered>
      </properties>
      <build>
        <directory>${alt.build.dir}</directory>
      </build>
    </profile>
    <!-- Allow changing surefire reports directory by property -->
    <profile>
      <id>alternateReportsDir</id>
      <activation>
        <property>
          <name>alt.reports.dir</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <reportsDirectory>${alt.reports.dir}</reportsDirectory>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>packaging-aar</id>
      <activation><property><name>packaging</name><value>aar</value></property></activation>
      <properties>
        <!--
          Is this build reproducible for the zip-timestamp-merge Ant task?
          Currently with axis2-aar-maven-plugin version 1.8.2, aar builds are not reproducible,
          so this is disabled in packaging profile for "aar" packaging.
        -->
        <zip-timestamp-merge.buildReproducible>false</zip-timestamp-merge.buildReproducible>
      </properties>
    </profile>
    <profile>
      <id>packaging-bundle</id>
      <activation><property><name>packaging</name><value>bundle</value></property></activation>
      <build>
        <pluginManagement>
          <plugins>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-resources-plugin</artifactId>
            <executions>
              <!--
                maven-bundle-plugin does not use the filtered resources from project.build.outputDirectory.
                To workaround this limitation, we perform a second filtering into a separate directory
                that is then used in bundle creation.

                We tried to avoid duplicate filtering by only filtering to target/resources-filtered
                and not also into target/classes.  However, maven-jar-plugin used for default-jar
                does not allow multiple source directories, and a second execution must be placed in
                a different artifact classifier.

                We hope for a better solution within maven-bundle-plugin in the future, but this issue
                goes back over a decade - we're not holding our breath.
              -->
              <execution>
                <id>filter-resources</id><phase>process-resources</phase><goals><goal>copy-resources</goal></goals>
                <configuration>
                  <resources>
                    <resource>
                      <directory>src/main/resources-filtered</directory>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                  <outputDirectory>${project.build.directory}/resources-filtered</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!--
            The second copy of resources-filtered is required for maven-bundle-plugin, even if empty.
            Otherwise the bundle packaging will fail.
          -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>create-resources-filtered-output</id><phase>process-resources</phase><goals><goal>run</goal></goals>
                <configuration>
                  <target>
                    <mkdir dir="${project.build.outputDirectory}" />
                    <mkdir dir="${project.build.directory}/resources-filtered" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.felix</groupId><artifactId>maven-bundle-plugin</artifactId>
            <configuration>
              <instructions>
                <Include-Resource>
                  {maven-resources},
                  ${bundle.resources-filtered}
                </Include-Resource>
              </instructions>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- See https://felix.apache.org/documentation/subprojects/apache-felix-maven-bundle-plugin-bnd.html#_adding_osgi_metadata_to_existing_projects_without_changing_the_packaging_type -->
    <profile>
      <id>packaging-not-jar</id>
      <activation><property><name>packaging</name><value>!jar</value></property></activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId><artifactId>maven-jar-plugin</artifactId>
              <executions>
                <execution>
                  <id>default-jar</id>
                  <configuration>
                    <archive>
                      <manifest>
                        <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                      </manifest>
                      <manifestEntries>
                        <Built-By>${project.organization.name}</Built-By>
                        <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
                        <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
                      </manifestEntries>
                    </archive>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>packaging-jar</id>
      <activation><property><name>packaging</name><value>jar</value></property></activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId><artifactId>maven-jar-plugin</artifactId>
              <executions>
                <execution>
                  <id>default-jar</id>
                  <configuration>
                    <archive>
                      <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.apache.felix</groupId><artifactId>maven-bundle-plugin</artifactId>
            <executions>
              <execution>
                <id>bundle-manifest</id><phase>${bundle-manifest.phase}</phase><goals><goal>manifest</goal></goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>ao-ant-tasks</id>
      <activation>
        <property><name>packaging</name><value>!pom</value></property>
        <file><missing>profile.d/ao-ant-tasks.skip</missing></file>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <!-- Maintain created and last-modified times between builds -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId><artifactId>maven-antrun-plugin</artifactId>
              <dependencies>
                <!-- Dependencies of ao-ant-tasks, whether used directly or via dependency -->
                <dependency>
                  <groupId>org.apache.commons</groupId><artifactId>commons-compress</artifactId><version>${org.apache.commons.commons-compress.version}</version>
                </dependency>
                <dependency>
                  <groupId>commons-io</groupId><artifactId>commons-io</artifactId><version>${commons-io.commons-io.version}</version>
                </dependency>
                <dependency>
                  <groupId>org.apache.commons</groupId><artifactId>commons-lang3</artifactId><version>${org.apache.commons.commons-lang3.version}</version>
                </dependency>
                <dependency>
                  <groupId>org.apache.commons</groupId><artifactId>commons-text</artifactId><version>${org.apache.commons.commons-text.version}</version>
                </dependency>
              </dependencies>
              <executions>
                <execution>
                  <id>seo-javadoc-filter</id><phase>${seo-javadoc-filter.phase}</phase><goals><goal>run</goal></goals>
                  <configuration>
                    <target>
                      <taskdef resource="com/aoapps/ant/tasks/antlib.xml">
                        <!-- com.aoapps:ao-ant-tasks does not have this as a parent:
                        <classpath>
                          <fileset dir="${project.build.directory}"><include name="ao-ant-tasks-*.jar" /></fileset>
                        </classpath>
                        -->
                      </taskdef>
                      <seo-javadoc-filter buildDirectory="${project.build.directory}" projectUrl="${project.url}" subprojectSubpath="${subproject.subpath}" nofollow="${seo-javadoc-filter.nofollow}" follow="${seo-javadoc-filter.follow}" />
                    </target>
                  </configuration>
                </execution>
                <execution>
                  <id>zip-timestamp-merge</id><phase>${zip-timestamp-merge.phase}</phase><goals><goal>run</goal></goals>
                  <configuration>
                    <target>
                      <taskdef resource="com/aoapps/ant/tasks/antlib.xml">
                        <!-- com.aoapps:ao-ant-tasks does not have this as a parent:
                        <classpath>
                          <fileset dir="${project.build.directory}"><include name="ao-ant-tasks-*.jar" /></fileset>
                        </classpath>
                        -->
                      </taskdef>
                      <zip-timestamp-merge outputTimestamp="${project.build.outputTimestamp}" buildReproducible="${zip-timestamp-merge.buildReproducible}" requireLastBuild="${requireLastBuild}" lastBuildDirectory="${project.build.directory}/last-successful-artifacts" buildDirectory="${project.build.directory}" />
                    </target>
                  </configuration>
                </execution>
                <execution>
                  <id>generate-javadoc-sitemap</id><phase>${generate-javadoc-sitemap.phase}</phase><goals><goal>run</goal></goals>
                  <configuration>
                    <target>
                      <taskdef resource="com/aoapps/ant/tasks/antlib.xml">
                        <!-- com.aoapps:ao-ant-tasks does not have this as a parent:
                        <classpath>
                          <fileset dir="${project.build.directory}"><include name="ao-ant-tasks-*.jar" /></fileset>
                        </classpath>
                        -->
                      </taskdef>
                      <generate-javadoc-sitemap buildDirectory="${project.build.directory}" projectUrl="${project.url}" subprojectSubpath="${subproject.subpath}" />
                    </target>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <!-- maven-bundle-plugin >= 6.0.0 requires JDK >= 17, use older plugin for older JDK -->
    <profile>
      <activation>
        <jdk>(,17)</jdk>
      </activation>
      <properties>
        <org.apache.felix.maven-bundle-plugin.version>5.1.9</org.apache.felix.maven-bundle-plugin.version>
      </properties>
    </profile>
    <!-- Fix the scroll position in Java 11 javadoc -->
    <profile>
      <id>nmw-javadoc-resources-addStylesheet-java-11</id>
      <activation>
        <jdk>11</jdk>
      </activation>
      <properties>
        <javadoc.html.style>html {scroll-padding-top: 120px;}</javadoc.html.style>
      </properties>
    </profile>
    <!--
      Workaround JDK-8215291 in JDK < 12 for projects without any module-info.java: https://bugs.openjdk.org/browse/JDK-8215291 -->
    <profile>
      <id>workaround-JDK-8215291</id>
      <activation>
        <jdk>(,12)</jdk>
        <file><missing>src/main/java/module-info.java</missing></file>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId><artifactId>maven-javadoc-plugin</artifactId>
              <configuration>
                <additionalJOption>--allow-script-in-comments</additionalJOption>
                <bottom>
<![CDATA[Copyright &#169; {inceptionYear}&#x2013;{currentYear} {organizationName}. All rights reserved.
<script type="application/javascript">
  /* Workaround "undefined" in URL during search when project has no modules: https://stackoverflow.com/a/57284322 */
  if (typeof useModuleDirectories !== 'undefined') {
    useModuleDirectories=false;
  }
</script>]]>
                </bottom>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <!-- When module-info.java is present, declare default package as Private-Package to avoid build warnings -->
    <profile>
      <id>private-package-for-module-info</id><activation><file><exists>src/main/java/module-info.java</exists></file></activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.felix</groupId><artifactId>maven-bundle-plugin</artifactId>
              <configuration>
                <instructions>
                  <Private-Package>.;-split-package:=merge-first,{local-packages}</Private-Package>
                </instructions>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <!-- Remove empty test directories that are created by something (NetBeans?) -->
      <id>remove-empty-test</id><activation><file><exists>src/test</exists></file></activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>remove-empty-test</id><phase>${remove-empty-test.phase}</phase><goals><goal>run</goal></goals>
                <configuration>
                  <target>
                    <!-- See https://stackoverflow.com/a/5706781 -->
                    <delete includeemptydirs="true">
                      <fileset dir="${project.basedir}/src/test">
                        <and>
                          <size value="0" />
                          <type type="dir" />
                         </and>
                      </fileset>
                    </delete>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- Set properties when src/main/java is present -->
      <!-- Sadly, cannot use Maven properties in profile activation: ${project.build.sourceDirectory} -->
      <id>set-properties-main-java</id><activation><file><exists>src/main/java</exists></file></activation>
      <properties>
        <!--
          maven-javadoc-plugin-3.10.0 was not skipping empty javadoc JARs with warning
          "JAR will be empty - no content was marked for inclusion!".
          This property will be set to "package" by the presence of src/main/java
          We are keeping this conditional plugin execution as a minor optimization, since we already have it in-place.
        -->
        <attach-javadocs.phase.conditional>package</attach-javadocs.phase.conditional>
      </properties>
    </profile>
    <profile>
      <!-- Set properties when src/test/java is present -->
      <!-- Sadly, cannot use Maven properties in profile activation: ${project.build.sourceDirectory} -->
      <id>set-properties-test-java</id><activation><file><exists>src/test/java</exists></file></activation>
      <properties>
        <!--
          maven-javadoc-plugin-3.10.0 was not skipping empty test javadoc JARs with warning
          "JAR will be empty - no content was marked for inclusion!".
          This property will be set to "package" by the presence of src/test/java
          We are keeping this conditional plugin execution as a minor optimization, since we already have it in-place.
        -->
        <attach-test-javadocs.phase.conditional>package</attach-test-javadocs.phase.conditional>
        <!-- Provide JUnit results to SonarQube -->
        <sonar.surefire.reportsPath>target/surefire-reports</sonar.surefire.reportsPath>
      </properties>
    </profile>
    <profile>
      <!-- Sadly, cannot use Maven properties in profile activation: ${project.build.sourceDirectory} -->
      <id>war-attachClasses</id><activation><file><exists>src/main/java</exists></file></activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId>
              <configuration>
                <!-- Make the classes available as a separate artifact -->
                <attachClasses>true</attachClasses>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <!-- Sadly, cannot use Maven properties in profile activation: ${project.build.sourceDirectory} -->
      <!-- Sadly, cannot also activate on src/test/java, for when there are tests without main -->
      <id>default-javadoc.breadcrumbs</id><activation><file><missing>src/main/java</missing></file></activation>
      <properties>
        <!-- Provides default breadcrumbs for when src/main/java not present -->
        <javadoc.breadcrumbs><![CDATA[<a target="${javadoc.target}" href="${project.url}">${project.name}</a>]]></javadoc.breadcrumbs>
      </properties>
    </profile>
    <profile>
      <!-- Sadly, cannot use Maven properties in profile activation: ${project.build.sourceDirectory} -->
      <!-- Sadly, cannot also activate on src/test/java, for when there are tests without main -->
      <id>require-javadoc.breadcrumbs</id><activation><file><exists>src/main/java</exists></file></activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>require-javadoc.breadcrumbs</id><phase>${require-javadoc.breadcrumbs.phase}</phase><goals><goal>enforce</goal></goals>
                <configuration>
                  <rules>
                    <requireProperty>
                      <property>javadoc.breadcrumbs</property>
                      <message>Property 'javadoc.breadcrumbs' is required when src/main/java exists.</message>
                    </requireProperty>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- Sadly, cannot use Maven properties in profile activation: ${project.build.sourceDirectory} -->
      <!-- Sadly, cannot also activate on src/test/java, for when there are tests without main -->
      <id>offlineLinks</id><activation><file><exists>src/main/java</exists></file></activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-remote-resources-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>com.aoapps</groupId><artifactId>ao-javadoc-offline</artifactId><version>${com.aoapps.ao-javadoc-offline.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>process.offlineLinks</id><phase>${process.offlineLinks.phase}</phase><goals><goal>process</goal></goals>
                <configuration>
                  <attachToMain>false</attachToMain><attachToTest>false</attachToTest>
                  <resourceBundles>
                    <resourceBundle>com.aoapps:ao-javadoc-offline:${com.aoapps.ao-javadoc-offline.version}</resourceBundle>
                  </resourceBundles>
                  <outputDirectory>${project.build.directory}/offlineLinks</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <!-- maven-javadoc-plugin:3.0.1: Can't link to "element-list" -->
              <execution>
                <id>copy-element-list-to-package-list-before-javadoc</id><phase>${copy-element-list-to-package-list-before-javadoc.phase}</phase><goals><goal>run</goal></goals>
                <configuration>
                  <target>
                    <copy todir="${project.build.directory}/offlineLinks">
                      <fileset dir="${project.build.directory}/offlineLinks" includes="**/element-list" />
                      <globmapper from="*/element-list" to="*/package-list" />
                    </copy>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <offlineLinks>
                <!-- Java EE -->
                <offlineLink>
                  <url>${javadoc.link.javaee}</url>
                  <location>${project.build.directory}/offlineLinks/com/aoapps/javadoc/offline/${javadoc.link.javaee.type}/${javaee.version}</location>
                </offlineLink>
                <!-- Java SE -->
                <offlineLink>
                  <url>${javadoc.link.javase}</url>
                  <location>${project.build.directory}/offlineLinks/com/aoapps/javadoc/offline/javase/${javase.release}</location>
                </offlineLink>
                <!-- Direct -->
                <!-- Note: Note: This list matches ao-javadoc-offline:download.sh -->
                <offlineLink>
                  <url>http://sendmail-jilter.sourceforge.net/apidocs/</url>
                  <location>${project.build.directory}/offlineLinks/com/aoapps/javadoc/offline/com.sendmail/jilter</location>
                </offlineLink>
                <offlineLink>
                  <url>https://hc.apache.org/httpclient-3.x/apidocs/</url>
                  <location>${project.build.directory}/offlineLinks/com/aoapps/javadoc/offline/commons-httpclient/commons-httpclient</location>
                </offlineLink>
                <offlineLink>
                  <url>https://axis.apache.org/axis/java/apiDocs/</url>
                  <location>${project.build.directory}/offlineLinks/com/aoapps/javadoc/offline/org.apache.axis/axis</location>
                </offlineLink>
                <offlineLink>
                  <url>${javadoc.link.activation}</url>
                  <location>${project.build.directory}/offlineLinks/com/aoapps/javadoc/offline/javax.activation/activation</location>
                </offlineLink>
                <offlineLink>
                  <url>${javadoc.link.javamail}</url>
                  <location>${project.build.directory}/offlineLinks/com/aoapps/javadoc/offline/com.sun.mail/javax.mail</location>
                </offlineLink>
                <offlineLink>
                  <url>https://ostermiller.org/utils/doc/</url>
                  <location>${project.build.directory}/offlineLinks/com/aoapps/javadoc/offline/org.ostermiller/utils</location>
                </offlineLink>
              </offlineLinks>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- Sadly, cannot use Maven properties in profile activation: ${project.build.sourceDirectory} -->
      <!-- Sadly, cannot also activate on src/test/java, for when there are tests without main -->
      <id>javadoc-resources</id><activation><file><exists>src/main/java</exists></file></activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-javadoc-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>com.newmediaworks</groupId><artifactId>nmw-javadoc-resources</artifactId><version>${com.newmediaworks.nmw-javadoc-resources.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <resourcesArtifacts>
                <resourcesArtifact>
                  <groupId>com.newmediaworks</groupId><artifactId>nmw-javadoc-resources</artifactId><version>${com.newmediaworks.nmw-javadoc-resources.version}</version>
                </resourcesArtifact>
              </resourcesArtifacts>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!--
        Projects without any public API must still deploy javadoc artifacts per Central Repository Requirements.
        This includes projects that contain only a module-info.class.

        To create an empty placeholder *-javadoc.jar:
        1) Create a src/main/javadoc/index.html with an explanation of why cannot publish javadocs
        2) Create a src/main/javadoc/element-list with empty module (this is auto-generated under "jenkins" profile)

        Note: Normally src/main/javadoc/index.html would never exist, since that file would conflict with the file
        created by the javadoc tool, thus there is no ambiguity.

        See https://central.sonatype.org/publish/requirements/#supply-javadoc-and-sources

        This is primarily used for *-all, *-book, and *-devel projects. However, this may be also be used for any
        project that has no public API but still has a module-info.java file, which would result in a Javadoc error
        "No public or protected classes found to document."
      -->
      <id>empty-javadoc</id><activation><file><exists>src/main/javadoc/index.html</exists></file></activation>
      <properties>
        <!-- Provides default breadcrumbs for when src/main/javadoc/index.html exists -->
        <javadoc.breadcrumbs><![CDATA[<a target="${javadoc.target}" href="${project.url}">${project.name}</a>]]></javadoc.breadcrumbs>
        <!-- maven-javadoc-plugin:3.0.1: Can't link to "element-list" -->
        <copy-element-list-to-package-list-before-javadoc.phase>none</copy-element-list-to-package-list-before-javadoc.phase>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <!-- Overriding phase to be "none" to fully disregard ${require-javadoc.breadcrumbs.phase} -->
                <id>require-javadoc.breadcrumbs</id><phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>verify-no-java-in-src</id><phase>${verify-no-java-in-src.phase}</phase><goals><goal>run</goal></goals>
                <configuration>
                  <target xmlns:unless="ant:unless">
                    <!-- Fail if no ${project.build.sourceDirectory} -->
                    <available property="sourceDirectoryExists" file="${project.build.sourceDirectory}" type="dir" />
                    <fail unless="sourceDirectoryExists">
                      src/main/javadoc/index.html exists while ${project.build.sourceDirectory}
                      does not exist or is not a directory. Please:
                      1) Remove src/main/javadoc/index.html
                      2) Remove src/main/javadoc/element-list
                    </fail>
                    <available property="developmentProfileExists" file="${project.basedir}/profile.d/development" type="file" />
                    <pathconvert unless:set="developmentProfileExists" property="javaSourceFiles" setonempty="false" pathsep=" ">
                      <path>
                        <fileset dir="${project.build.sourceDirectory}" excludes="module-info.java" includes="**/*.java" />
                      </path>
                    </pathconvert>
                    <fail unless:set="developmentProfileExists" if="javaSourceFiles">
                      May not skip javadocs when have *.java source files other than module-info.java. Please:
                      1) Remove src/main/javadoc/index.html
                      2) Remove src/main/javadoc/element-list
                      3) Configure javadoc.breadcrumbs property (and related)
                      4) Adds offlineLinks profile if have dependencies not in ao-javadoc-offline (do not do on books which do not have published apidocs)

                      Found the following files: ${javaSourceFiles}
                    </fail>
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>empty-javadoc-generate-element-list</id><phase>${empty-javadoc-generate-element-list.phase}</phase><goals><goal>run</goal></goals>
                <configuration>
                  <target>
                    <echo file="${project.basedir}/src/main/javadoc/element-list" message="module:${module.name}${line.separator}" encoding="${project.build.sourceEncoding}" />
                  </target>
                </configuration>
              </execution>
              <execution>
                <!-- Overriding phase to be "none" to fully disregard ${seo-javadoc-filter.phase} -->
                <id>seo-javadoc-filter</id><phase>none</phase>
              </execution>
              <execution>
                <!-- Overriding phase to be "none" to fully disregard ${generate-javadoc-sitemap.phase} -->
                <id>generate-javadoc-sitemap</id><phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-remote-resources-plugin</artifactId>
            <executions>
              <execution>
                <!-- Overriding phase to be "none" to fully disregard ${process.offlineLinks.phase} -->
                <id>process.offlineLinks</id><phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <!-- Overriding phase to be "none" to fully disregard ${attach-javadocs.phase} -->
                <id>attach-javadocs</id><phase>none</phase>
              </execution>
              <execution>
                <!-- Overriding phase to be "none" to fully disregard ${attach-test-javadocs.phase} -->
                <id>attach-test-javadocs</id><phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-jar-plugin</artifactId>
            <executions>
              <execution>
                <id>empty-javadoc-jar</id><phase>${empty-javadoc-jar.phase}</phase><goals><goal>jar</goal></goals>
                <configuration>
                  <classesDirectory>${project.basedir}/src/main/javadoc</classesDirectory>
                  <classifier>javadoc</classifier>
                  <archive>
                    <manifest>
                      <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                      <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                    </manifest>
                    <manifestEntries>
                      <Built-By>${project.organization.name}</Built-By>
                      <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
                      <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
                    </manifestEntries>
                  </archive>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>not-empty-javadoc</id><activation><file><missing>src/main/javadoc/index.html</missing></file></activation>
      <properties>
        <!-- May optionally allow javadocs despite being development-only in the "development-with-javadocs" profile -->
        <verify-java-in-src.allowJavadocInDevelopmentProfile>false</verify-java-in-src.allowJavadocInDevelopmentProfile>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>verify-java-in-src</id><phase>${verify-java-in-src.phase}</phase><goals><goal>run</goal></goals>
                <configuration>
                  <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                    <!-- Only when ${project.build.sourceDirectory} exists -->
                    <available property="sourceDirectoryExists" file="${project.build.sourceDirectory}" type="dir" />
                    <pathconvert if:set="sourceDirectoryExists" property="javaSourceFiles" setonempty="false" pathsep=" ">
                      <path>
                        <fileset dir="${project.build.sourceDirectory}" excludes="module-info.java" includes="**/*.java" />
                      </path>
                    </pathconvert>
                    <fail if:set="sourceDirectoryExists" unless="javaSourceFiles">
                      Must skip javadocs when have no *.java source files other than module-info.java. Please:
                      1) Create a src/main/javadoc/index.html with an explanation of why cannot publish javadocs
                      2) Create a src/main/javadoc/element-list with empty module (this is auto-generated under "jenkins" profile)
                      3) Remove javadoc.breadcrumbs property (and related)
                      4) Remove any offlineLinks profile
                    </fail>
                    <!-- Require src/main/javadoc/index.html when profile.d/development exists and ${project.build.sourceDirectory} exists -->
                    <available if:set="sourceDirectoryExists" unless:true="${verify-java-in-src.allowJavadocInDevelopmentProfile}" property="developmentProfileExists" file="${project.basedir}/profile.d/development" type="file" />
                    <fail if:set="sourceDirectoryExists" unless:true="${verify-java-in-src.allowJavadocInDevelopmentProfile}" if="developmentProfileExists">
                      src/main/javadoc/index.html required when both profile.d/development and ${project.build.sourceDirectory} exist,
                      unless profile.d/development-with-javadocs also exists.
                    </fail>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>checkstyle</id><activation><file><exists>src/main/java</exists></file></activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-checkstyle-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>com.aoapps</groupId><artifactId>ao-checkstyle-config</artifactId><version>${com.aoapps.ao-checkstyle-config.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <!-- See https://stackoverflow.com/a/49210574 -->
              <violationSeverity>warning</violationSeverity>
              <consoleOutput>true</consoleOutput>
              <configLocation>ao-checkstyle-config/checkstyle-configuration.xml</configLocation>
            </configuration>
            <executions>
              <execution>
                <id>checkstyle</id><phase>${checkstyle.phase}</phase><goals><goal>check</goal></goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <reporting>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-checkstyle-plugin</artifactId><version>${org.apache.maven.plugins.maven-checkstyle-plugin.version}</version>
          </plugin>
        </plugins>
      </reporting>
    </profile>
    <profile>
      <!-- Checkstyle analysis may be skipped by the presence of a file. -->
      <id>checkstyle.skip</id><activation><file><exists>profile.d/checkstyle.skip</exists></file></activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-checkstyle-plugin</artifactId>
            <executions>
              <execution>
                <!-- Overriding phase to be "none" to fully disregard ${checkstyle.phase} -->
                <id>checkstyle</id><phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <reporting>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-checkstyle-plugin</artifactId><version>${org.apache.maven.plugins.maven-checkstyle-plugin.version}</version>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
        </plugins>
      </reporting>
    </profile>
    <profile>
      <id>checkstyle-suppressions</id><activation><file><exists>checkstyle-suppressions.xml</exists></file></activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-checkstyle-plugin</artifactId>
            <configuration>
              <suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>spotbugs</id><activation><file><exists>src/main/java</exists></file></activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.spotbugs</groupId><artifactId>spotbugs-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>spotbugs</id><phase>${spotbugs.phase}</phase><goals><goal>check</goal></goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <reporting>
        <plugins>
          <plugin>
            <groupId>com.github.spotbugs</groupId><artifactId>spotbugs-maven-plugin</artifactId><version>${com.github.spotbugs.spotbugs-maven-plugin.version}</version>
          </plugin>
        </plugins>
      </reporting>
    </profile>
    <profile>
      <!--
        SpotBugs analysis may be skipped by the presence of a file.
        This will typically be used for any project that no public API but still has a module-info.java file, as
        this results in error "No files to analyze could be opened"
      -->
      <id>spotbugs.skip</id><activation><file><exists>profile.d/spotbugs.skip</exists></file></activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.spotbugs</groupId><artifactId>spotbugs-maven-plugin</artifactId>
            <executions>
              <execution>
                <!-- Overriding phase to be "none" to fully disregard ${spotbugs.phase} -->
                <id>spotbugs</id><phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <reporting>
        <plugins>
          <plugin>
            <groupId>com.github.spotbugs</groupId><artifactId>spotbugs-maven-plugin</artifactId><version>${com.github.spotbugs.spotbugs-maven-plugin.version}</version>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
        </plugins>
      </reporting>
    </profile>
    <profile>
      <id>spotbugs-excludes</id><activation><file><exists>spotbugs-excludes.xml</exists></file></activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.spotbugs</groupId><artifactId>spotbugs-maven-plugin</artifactId>
            <configuration>
              <excludeFilterFile>spotbugs-excludes.xml</excludeFilterFile>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>nexus</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.sonatype.plugins</groupId><artifactId>nexus-staging-maven-plugin</artifactId>
            <configuration>
              <serverId>${nexusServerId}</serverId>
              <nexusUrl>${nexusUrl}</nexusUrl>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
            </configuration>
            <!--
            Not using as extension, since it blocks maven-deploy-plugin in the jenkins-deploy profile:
            <extensions>true</extensions>
            -->
            <executions>
              <execution>
                <!-- Manually added since nexus-staging-maven-plugin is not used as extension -->
                <id>default-deploy</id><phase>${default-deploy.phase}</phase><goals><goal>deploy</goal></goals>
                <configuration>
                  <skipNexusStagingDeployMojo>${nexus.skipNexusStagingDeployMojo}</skipNexusStagingDeployMojo>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-deploy-plugin</artifactId>
            <executions>
              <execution>
                <!-- Manually disabled since nexus-staging-maven-plugin is not used as extension -->
                <id>default-deploy</id><phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!--
        Skips GPG signing.

        To ensure everything deployed is signed, the following profiles must also be active:
        1) maven.deploy.skip
        2) maven.install.skip
        3) skipNexusStagingDeployMojo

        This is primarily used for projects that only run directly in NetBeans.
      -->
      <id>maven.gpg.skip</id><activation><file><exists>profile.d/maven.gpg.skip</exists></file></activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>skip-war-enforce-profiles</id><goals><goal>enforce</goal></goals>
                <configuration>
                  <rules>
                    <requireActiveProfile>
                      <message>"maven.gpg.skip" requires "maven.deploy.skip" profile</message>
                      <profiles>maven.deploy.skip</profiles>
                    </requireActiveProfile>
                    <requireActiveProfile>
                      <message>"maven.gpg.skip" requires "maven.install.skip" profile</message>
                      <profiles>maven.install.skip</profiles>
                    </requireActiveProfile>
                    <requireActiveProfile>
                      <message>"maven.gpg.skip" requires "skipNexusStagingDeployMojo" profile</message>
                      <profiles>skipNexusStagingDeployMojo</profiles>
                    </requireActiveProfile>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <!-- Overriding phase to be "none" to fully disregard ${${sign-artifacts.phase} -->
                <id>sign-artifacts</id><phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
      <!--
        When all three of the following are present, profile.d/maven.gpg.skip must also be present:
        1) profile.d/maven.deploy.skip
        2) profile.d/maven.install.skip
        3) profile.d/skipNexusStagingDeployMojo
      -->
    <profile>
      <id>not-maven.gpg.skip</id><activation><file><missing>profile.d/maven.gpg.skip</missing></file></activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>check-if-need-maven.gpg.skip</id><phase>${check-if-need-maven.gpg.skip.phase}</phase><goals><goal>run</goal></goals>
                <configuration>
                  <target xmlns:if="ant:if">
                    <available property="mavenDeploySkipProfileExists" file="${project.basedir}/profile.d/maven.deploy.skip" type="file" />
                    <available if:set="mavenDeploySkipProfileExists" property="andMavenInstallSkipProfileExists" file="${project.basedir}/profile.d/maven.install.skip" type="file" />
                    <available if:set="andMavenInstallSkipProfileExists" property="andSkipNexusStagingDeployMojoProfileExists" file="${project.basedir}/profile.d/skipNexusStagingDeployMojo" type="file" />
                    <fail if="andMavenInstallSkipProfileExists" message="profile.d/maven.gpg.skip required when all three of profile.d/maven.deploy.skip, profile.d/maven.install.skip, and profile.d/skipNexusStagingDeployMojo exist" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!--
        Local repository install may be skipped by the presence of a file.
        This is primarily used for projects that are executed directly in NetBeans only.
      -->
      <id>maven.install.skip</id><activation><file><exists>profile.d/maven.install.skip</exists></file></activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-install-plugin</artifactId>
            <executions>
              <execution>
                <!-- Overriding phase to be "none" to fully disregard ${default-install.phase} -->
                <id>default-install</id><phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!--
        Deployment may be skipped by the presence of a file.
        This is primary used for devel/ projects and for projects that are executed directly in NetBeans only.
      -->
      <id>maven.deploy.skip</id><activation><file><exists>profile.d/maven.deploy.skip</exists></file></activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-deploy-plugin</artifactId>
            <executions>
              <execution>
                <!-- Overriding phase to be "none" to fully disregard ${default-deploy.phase} -->
                <id>default-deploy</id><phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!--
        Staging may be skipped by the presence of a file.
        This is primary used for devel/ projects and for projects that are executed directly in NetBeans only.
      -->
      <id>skipNexusStagingDeployMojo</id><activation><file><exists>profile.d/skipNexusStagingDeployMojo</exists></file></activation>
      <properties>
        <nexus.skipNexusStagingDeployMojo>true</nexus.skipNexusStagingDeployMojo>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.sonatype.plugins</groupId><artifactId>nexus-staging-maven-plugin</artifactId>
            <executions>
              <execution>
                <!-- Overriding phase to be "none" to fully disregard ${default-deploy.phase} -->
                <id>default-deploy</id><phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>versions-rules</id><activation><file><exists>versions-rules.xml</exists></file></activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId><artifactId>versions-maven-plugin</artifactId>
            <configuration>
              <rulesUri>file://${project.basedir}/versions-rules.xml</rulesUri>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!--
        Enables unit test code coverage analysis.  This is expected to primarily be used within continuous
        integration systems, and may be used as a basis for SonarCloud/SonarQube analysis.

        See https://www.jacoco.org/jacoco/trunk/doc/maven.html
        See https://ccbill.com/blog/code-coverage-with-surefire-and-jacoco
        See https://medium.com/codeops/code-coverage-with-jacoco-sonarqube-and-maven-59fb04a9a383
      -->
      <id>coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId><artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>jacoco-initialize</id><goals><goal>prepare-agent</goal></goals>
              </execution>
              <execution>
                <id>jacoco-report</id><goals><goal>report</goal></goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>development</id><activation><file><exists>profile.d/development</exists></file></activation>
      <properties>
        <!-- devMode flag, enabled in "development" profile, enforced must be disabled in "publish" profile -->
        <devMode>true</devMode>

        <!-- Skip many steps for quick development builds (unless reactivated in "jenkins" or "jenkins-deploy" profiles below  -->
        <!-- <pgpverify-check.phase>validate</pgpverify-check.phase> -->
        <!-- <git.commit.time.phase>validate</git.commit.time.phase> -->
        <enforce-jdk.phase>none</enforce-jdk.phase>
        <enforce-maven.phase>none</enforce-maven.phase>
        <enforce-project.build.outputTimestamp-iso8601.phase>none</enforce-project.build.outputTimestamp-iso8601.phase>
        <enforce-bytecode-version.phase>none</enforce-bytecode-version.phase>
        <require-POST-SNAPSHOT-is-snapshot-version.phase>none</require-POST-SNAPSHOT-is-snapshot-version.phase>
        <require-javadoc.breadcrumbs.phase>none</require-javadoc.breadcrumbs.phase>
        <!-- <require-development-is-snapshot-version.phase>validate</require-development-is-snapshot-version.phase> -->
        <audit-dependencies.phase>none</audit-dependencies.phase>
        <enforce-git.commit.time.phase>none</enforce-git.commit.time.phase>
        <verify-no-java-in-src.phase>none</verify-no-java-in-src.phase>
        <verify-java-in-src.phase>none</verify-java-in-src.phase>
        <check-if-need-maven.gpg.skip.phase>none</check-if-need-maven.gpg.skip.phase>
        <!-- <remove-empty-test.phase>initialize</remove-empty-test.phase> -->
        <empty-javadoc-generate-element-list.phase>none</empty-javadoc-generate-element-list.phase>
        <!-- <bundle-manifest.phase>process-classes</bundle-manifest.phase> -->
        <unpack.offlineLinks.phase>none</unpack.offlineLinks.phase>
        <process.offlineLinks.phase>none</process.offlineLinks.phase>
        <!-- <attach-tests.phase>package</attach-tests.phase> -->
        <empty-javadoc-jar.phase>none</empty-javadoc-jar.phase>
        <!-- <attach-sources.phase>none</attach-sources.phase> -->
        <!-- <attach-test-sources.phase>none</attach-test-sources.phase> -->
        <attach-javadocs.phase>none</attach-javadocs.phase>
        <attach-test-javadocs.phase>none</attach-test-javadocs.phase>
        <seo-javadoc-filter.phase>none</seo-javadoc-filter.phase>
        <!-- <zip-timestamp-merge.phase>none</zip-timestamp-merge.phase> -->
        <generate-javadoc-sitemap.phase>none</generate-javadoc-sitemap.phase>
        <!-- <sign-artifacts.phase>verify</sign-artifacts.phase> -->
        <analyze-dependencies.phase>none</analyze-dependencies.phase>
        <!-- <unpack.ao-checkstyle-config.phase>verify</unpack.ao-checkstyle-config.phase> -->
        <!-- <checkstyle.phase>verify</checkstyle.phase> -->
        <!-- <spotbugs.phase>verify</spotbugs.phase> -->
        <!-- <default-install.phase>install</default-install.phase> -->
        <default-deploy.phase>none</default-deploy.phase>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>require-development-is-snapshot-version</id><phase>${require-development-is-snapshot-version.phase}</phase><goals><goal>enforce</goal></goals>
                <configuration>
                  <rules>
                    <requireSnapshotVersion>
                      <message>"development" profile may only be used for *-SNAPSHOT versions.</message>
                    </requireSnapshotVersion>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Skip tests for quick development builds (unless reactivated in "jenkins" profile below) -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId>
            <configuration><skipTests>true</skipTests></configuration>
          </plugin>
          <!-- Never deploy development builds (although jenkins-deploy is allowed below for altDeploymentRepository) -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-deploy-plugin</artifactId>
            <executions>
              <execution>
                <!-- Overriding phase to be "none" to fully disregard ${default-deploy.phase} -->
                <id>default-deploy</id><phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <!-- Never stage development builds -->
          <plugin>
            <groupId>org.sonatype.plugins</groupId><artifactId>nexus-staging-maven-plugin</artifactId>
            <executions>
              <execution>
                <!-- Overriding phase to be "none" to fully disregard ${default-deploy.phase} -->
                <id>default-deploy</id><phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- Keep javadocs enabled even under development profile -->
      <id>development-with-javadocs</id><activation><file><exists>profile.d/development-with-javadocs</exists></file></activation>
      <properties>
        <!-- Allow javadocs despite being development-only -->
        <verify-java-in-src.allowJavadocInDevelopmentProfile>true</verify-java-in-src.allowJavadocInDevelopmentProfile>

        <!-- Reactivate phases disabled in development profile -->
        <require-javadoc.breadcrumbs.phase>validate</require-javadoc.breadcrumbs.phase>
        <unpack.offlineLinks.phase>prepare-package</unpack.offlineLinks.phase>
        <process.offlineLinks.phase>prepare-package</process.offlineLinks.phase>
        <attach-javadocs.phase>${attach-javadocs.phase.conditional}</attach-javadocs.phase>
        <attach-test-javadocs.phase>${attach-test-javadocs.phase.conditional}</attach-test-javadocs.phase>
        <seo-javadoc-filter.phase>package</seo-javadoc-filter.phase>
        <generate-javadoc-sitemap.phase>package</generate-javadoc-sitemap.phase>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>development-with-javadocs-enforce-profiles</id><goals><goal>enforce</goal></goals>
                <configuration>
                  <rules>
                    <requireActiveProfile>
                      <message>"development-with-javadocs" requires "development" profile</message>
                      <profiles>development</profiles>
                    </requireActiveProfile>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Optimize for fastest possible development build -->
    <profile>
      <id>skip-war</id>
      <properties>
        <!-- Starting with "development" profile, further reduce the steps -->
        <pgpverify-check.phase>none</pgpverify-check.phase>
        <remove-empty-test.phase>none</remove-empty-test.phase>
        <attach-tests.phase>none</attach-tests.phase>
        <sign-artifacts.phase>none</sign-artifacts.phase>
        <unpack.ao-checkstyle-config.phase>none</unpack.ao-checkstyle-config.phase>
        <checkstyle.phase>none</checkstyle.phase>
        <spotbugs.phase>none</spotbugs.phase>
        <default-install.phase>none</default-install.phase>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <!-- Do not pack the war -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId>
              <executions>
                <execution>
                  <id>default-war</id><phase>none</phase>
                </execution>
                <execution>
                  <id>war-exploded</id><phase>package</phase><goals><goal>exploded</goal></goals>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>skip-war-enforce-profiles</id><goals><goal>enforce</goal></goals>
                <configuration>
                  <rules>
                    <requireActiveProfile>
                      <message>"skip-war" requires "development" profile</message>
                      <profiles>development</profiles>
                    </requireActiveProfile>
                  </rules>
                </configuration>
              </execution>
              <execution>
                <id>skip-war-never-install</id><phase>install</phase><goals><goal>enforce</goal></goals>
                <configuration>
                  <rules>
                    <alwaysFail>
                      <message>"skip-war" may never be used in the "install" phase</message>
                    </alwaysFail>
                  </rules>
                </configuration>
              </execution>
              <execution>
                <id>skip-war-never-deploy</id><phase>deploy</phase><goals><goal>enforce</goal></goals>
                <configuration>
                  <rules>
                    <alwaysFail>
                      <message>"skip-war" may never be used in the "deploy" phase</message>
                    </alwaysFail>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>jenkins</id>
      <properties>
        <!-- Only done in "Build" phase -->
        <!-- <pgpverify-check.phase>validate</pgpverify-check.phase> -->
        <!-- <git.commit.time.phase>validate</git.commit.time.phase> -->
        <enforce-jdk.phase>validate</enforce-jdk.phase>
        <enforce-maven.phase>validate</enforce-maven.phase>
        <enforce-project.build.outputTimestamp-iso8601.phase>validate</enforce-project.build.outputTimestamp-iso8601.phase>
        <enforce-bytecode-version.phase>validate</enforce-bytecode-version.phase>
        <require-POST-SNAPSHOT-is-snapshot-version.phase>validate</require-POST-SNAPSHOT-is-snapshot-version.phase>
        <require-javadoc.breadcrumbs.phase>validate</require-javadoc.breadcrumbs.phase>
        <!-- <require-development-is-snapshot-version.phase>validate</require-development-is-snapshot-version.phase> -->
        <audit-dependencies.phase>validate</audit-dependencies.phase>
        <enforce-git.commit.time.phase>validate</enforce-git.commit.time.phase>
        <verify-no-java-in-src.phase>validate</verify-no-java-in-src.phase>
        <verify-java-in-src.phase>validate</verify-java-in-src.phase>
        <check-if-need-maven.gpg.skip.phase>validate</check-if-need-maven.gpg.skip.phase>
        <!-- <remove-empty-test.phase>initialize</remove-empty-test.phase> -->
        <empty-javadoc-generate-element-list.phase>generate-resources</empty-javadoc-generate-element-list.phase>
        <!-- <bundle-manifest.phase>process-classes</bundle-manifest.phase> -->
        <!-- Only done in "Deploy" phase -->
        <unpack.offlineLinks.phase>none</unpack.offlineLinks.phase>
        <process.offlineLinks.phase>none</process.offlineLinks.phase>
        <attach-tests.phase>none</attach-tests.phase>
        <empty-javadoc-jar.phase>none</empty-javadoc-jar.phase>
        <!-- <attach-sources.phase>none</attach-sources.phase> -->
        <!-- <attach-test-sources.phase>none</attach-test-sources.phase> -->
        <attach-javadocs.phase>none</attach-javadocs.phase>
        <attach-test-javadocs.phase>none</attach-test-javadocs.phase>
        <seo-javadoc-filter.phase>none</seo-javadoc-filter.phase>
        <!-- <zip-timestamp-merge.phase>none</zip-timestamp-merge.phase> -->
        <generate-javadoc-sitemap.phase>none</generate-javadoc-sitemap.phase>
        <sign-artifacts.phase>none</sign-artifacts.phase>
        <analyze-dependencies.phase>none</analyze-dependencies.phase>
        <unpack.ao-checkstyle-config.phase>none</unpack.ao-checkstyle-config.phase>
        <checkstyle.phase>none</checkstyle.phase>
        <spotbugs.phase>none</spotbugs.phase>
        <default-install.phase>none</default-install.phase>
        <default-deploy.phase>none</default-deploy.phase>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>jenkins-enforce</id><goals><goal>enforce</goal></goals>
                <configuration>
                  <rules>
                    <requireActiveProfile>
                      <message>"jenkins" requires "POST-SNAPSHOT" profile</message>
                      <profiles>POST-SNAPSHOT</profiles>
                    </requireActiveProfile>
                    <requireProperty>
                      <property>jenkins.buildNumber</property>
                      <message>"jenkins" profile requires 'jenkins.buildNumber' property.</message>
                      <regex>^\d+$</regex>
                      <regexMessage>The 'jenkins.buildNumber' property must contain one or more digits.</regexMessage>
                    </requireProperty>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Always test Jenkins builds -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId>
            <configuration><skipTests>false</skipTests></configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-gpg-plugin</artifactId>
            <configuration>
              <lockMode>multiple</lockMode>
              <homedir>${gpg.jenkins-aoindustries-com.homedir}</homedir>
              <keyname>${gpg.jenkins-aoindustries-com.keyname}</keyname>
              <passphrase>${gpg.jenkins-aoindustries-com.passphrase}</passphrase>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- The "Build" phase on a JDK other than the deployJdk.  These may skip some of the checks that are done on deployJdk. -->
      <id>jenkins-build-altjdk</id>
      <properties>
        <!-- Only done in "Build" phase on deployJdk-->
        <!-- <pgpverify-check.phase>validate</pgpverify-check.phase> -->
        <!-- <git.commit.time.phase>validate</git.commit.time.phase> -->
        <!-- <enforce-jdk.phase>validate</enforce-jdk.phase> -->
        <enforce-maven.phase>none</enforce-maven.phase>
        <enforce-project.build.outputTimestamp-iso8601.phase>none</enforce-project.build.outputTimestamp-iso8601.phase>
        <enforce-bytecode-version.phase>none</enforce-bytecode-version.phase>
        <require-POST-SNAPSHOT-is-snapshot-version.phase>none</require-POST-SNAPSHOT-is-snapshot-version.phase>
        <require-javadoc.breadcrumbs.phase>none</require-javadoc.breadcrumbs.phase>
        <require-development-is-snapshot-version.phase>none</require-development-is-snapshot-version.phase>
        <audit-dependencies.phase>none</audit-dependencies.phase>
        <enforce-git.commit.time.phase>none</enforce-git.commit.time.phase>
        <verify-no-java-in-src.phase>none</verify-no-java-in-src.phase>
        <verify-java-in-src.phase>none</verify-java-in-src.phase>
        <check-if-need-maven.gpg.skip.phase>none</check-if-need-maven.gpg.skip.phase>
        <remove-empty-test.phase>none</remove-empty-test.phase>
        <empty-javadoc-generate-element-list.phase>none</empty-javadoc-generate-element-list.phase>
        <!-- <bundle-manifest.phase>process-classes</bundle-manifest.phase> -->
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>jenkins-build-altjdk-enforce-profiles</id><goals><goal>enforce</goal></goals>
                <configuration>
                  <rules>
                    <requireActiveProfile>
                      <message>"jenkins-build-altjdk" requires "jenkins" profile</message>
                      <profiles>jenkins</profiles>
                    </requireActiveProfile>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>jenkins-deploy</id>
      <properties>
        <!-- Only done in "Build" phase -->
        <!-- <pgpverify-check.phase>validate</pgpverify-check.phase> -->
        <!-- <git.commit.time.phase>validate</git.commit.time.phase> -->
        <enforce-jdk.phase>none</enforce-jdk.phase>
        <enforce-maven.phase>none</enforce-maven.phase>
        <enforce-project.build.outputTimestamp-iso8601.phase>none</enforce-project.build.outputTimestamp-iso8601.phase>
        <enforce-bytecode-version.phase>none</enforce-bytecode-version.phase>
        <require-POST-SNAPSHOT-is-snapshot-version.phase>none</require-POST-SNAPSHOT-is-snapshot-version.phase>
        <require-javadoc.breadcrumbs.phase>none</require-javadoc.breadcrumbs.phase>
        <require-development-is-snapshot-version.phase>none</require-development-is-snapshot-version.phase>
        <audit-dependencies.phase>none</audit-dependencies.phase>
        <enforce-git.commit.time.phase>none</enforce-git.commit.time.phase>
        <verify-no-java-in-src.phase>none</verify-no-java-in-src.phase>
        <verify-java-in-src.phase>none</verify-java-in-src.phase>
        <check-if-need-maven.gpg.skip.phase>none</check-if-need-maven.gpg.skip.phase>
        <remove-empty-test.phase>none</remove-empty-test.phase>
        <empty-javadoc-generate-element-list.phase>none</empty-javadoc-generate-element-list.phase>
        <bundle-manifest.phase>none</bundle-manifest.phase>
        <!-- Only done in "Deploy" phase -->
        <unpack.offlineLinks.phase>prepare-package</unpack.offlineLinks.phase>
        <process.offlineLinks.phase>prepare-package</process.offlineLinks.phase>
        <attach-tests.phase>package</attach-tests.phase>
        <empty-javadoc-jar.phase>package</empty-javadoc-jar.phase>
        <!-- <attach-sources.phase>none</attach-sources.phase> -->
        <!-- <attach-test-sources.phase>none</attach-test-sources.phase> -->
        <attach-javadocs.phase>${attach-javadocs.phase.conditional}</attach-javadocs.phase>
        <attach-test-javadocs.phase>${attach-test-javadocs.phase.conditional}</attach-test-javadocs.phase>
        <seo-javadoc-filter.phase>package</seo-javadoc-filter.phase>
        <zip-timestamp-merge.phase>package</zip-timestamp-merge.phase>
        <generate-javadoc-sitemap.phase>package</generate-javadoc-sitemap.phase>
        <sign-artifacts.phase>verify</sign-artifacts.phase>
        <analyze-dependencies.phase>verify</analyze-dependencies.phase>
        <unpack.ao-checkstyle-config.phase>verify</unpack.ao-checkstyle-config.phase>
        <checkstyle.phase>verify</checkstyle.phase>
        <spotbugs.phase>verify</spotbugs.phase>
        <!-- <default-install.phase>none</default-install.phase> -->
        <default-deploy.phase>deploy</default-deploy.phase>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>jenkins-deploy-enforce-profiles</id><goals><goal>enforce</goal></goals>
                <configuration>
                  <rules>
                    <requireActiveProfile>
                      <message>"jenkins-deploy" requires "jenkins" profile</message>
                      <profiles>jenkins</profiles>
                    </requireActiveProfile>
                    <requireActiveProfile>
                      <message>"jenkins-deploy" requires "nexus" profile</message>
                      <profiles>nexus</profiles>
                    </requireActiveProfile>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Already compiled during "Build" phase -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <skipMain>true</skipMain>
              <skip>true</skip>
            </configuration>
          </plugin>
          <!-- Already tested during "Test" phase -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId>
            <configuration><skipTests>true</skipTests></configuration>
          </plugin>
          <!-- Always deploy Jenkins builds to local private repositories-->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-deploy-plugin</artifactId>
            <executions>
              <execution>
                <id>jenkins-deploy</id><phase>deploy</phase><goals><goal>deploy</goal></goals>
                <configuration>
                  <skip>false</skip>
                  <altDeploymentRepository>local-private-distribution::file:///var/maven2</altDeploymentRepository>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <properties>
        <!--
          maven-release-plugin release:prepare puts an ISO 8601 timestamp into ${project.build.outputTimestamp}.
          This is useful in support of reproducible releases without a dependency on the Git repository.
          Correspondingly, disable the generation of the ${git.commit.time} property.
        -->
        <git.commit.time.phase>none</git.commit.time.phase>
        <enforce-git.commit.time.phase>none</enforce-git.commit.time.phase>
        <attach-sources.phase>package</attach-sources.phase>
        <attach-test-sources.phase>package</attach-test-sources.phase>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-release-version</id><goals><goal>enforce</goal></goals>
                <configuration>
                  <rules>
                    <requireReleaseVersion>
                      <message>"release" profile may not be used for *-SNAPSHOT versions.</message>
                    </requireReleaseVersion>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>devMode.allowPublished</id><activation><file><exists>profile.d/development</exists></file></activation>
      <properties>
        <!-- devMode may be "true" only for projects that have profile.d/development which never publish anything. -->
        <devMode.enforceNotPublished.phase>none</devMode.enforceNotPublished.phase>
      </properties>
    </profile>
    <profile>
      <id>publish</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId><artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>publish-enforce-profiles</id><goals><goal>enforce</goal></goals>
                <configuration>
                  <rules>
                    <requireActiveProfile>
                      <message>"publish" requires "POST-SNAPSHOT" profile</message>
                      <profiles>POST-SNAPSHOT</profiles>
                    </requireActiveProfile>
                  </rules>
                </configuration>
              </execution>
              <execution>
                <id>devMode.enforceNotPublished</id><phase>${devMode.enforceNotPublished.phase}</phase><goals><goal>enforce</goal></goals>
                <configuration>
                  <rules>
                    <!-- devMode flag, enabled in "development" profile, enforced must be disabled in "publish" profile -->
                    <requireProperty>
                      <property>devMode</property>
                      <regex>^false$</regex>
                      <regexMessage>"publish" requires 'devMode' property must be 'false'</regexMessage>
                    </requireProperty>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>netbeans-hints-ejb</id><activation><file><exists>src/main/application</exists></file></activation>
      <properties>
        <!-- <NetBeans 17 → Project → Properties> -->
        <!--   <Hints> -->
        <!--     <Java> -->
        <!--       <Error Fixes> -->
        <!--         Implementation of EJBContainer is missing on project's classpath -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.EmbeddableEJBContainer.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.EmbeddableEJBContainer.enabled>
        <!--         Java EE API is missing on project classpath. -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.MissingJavaEEForUnitTestExecutionHint.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.MissingJavaEEForUnitTestExecutionHint.enabled>
        <!--       </Error Fixes> -->
        <!--       <Java EE> -->
        <!--         <Enterprise Java Beans> -->
        <!--           @Remote uses value in business interface -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_ValueNotSpecifiedForRemoteAnnotationInterface.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_ValueNotSpecifiedForRemoteAnnotationInterface.enabled>
        <!--           Annotation @PostConstruct -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_AnnotationPostContruct.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_AnnotationPostContruct.enabled>
        <!--           Asynchronous method invocation -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_AsynchronousMethodInvocation.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_AsynchronousMethodInvocation.enabled>
        <!--           Bean doesn't implement business interface -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_BeanImplementsBI.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_BeanImplementsBI.enabled>
        <!--           Inheritance of session beans -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_SBSuperClassNotSB.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_SBSuperClassNotSB.enabled>
        <!--           Instantiation replaceable with @EJB injection -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_UseInjectionInsteadOfInstantionRule.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_UseInjectionInsteadOfInstantionRule.enabled>
        <!--           Local and Remote business inteface together -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_BeanHasDifferentLBIandRBI.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_BeanHasDifferentLBIandRBI.enabled>
        <!--           Method definition in local and remote interface -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_BusinessMethodExposed.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_BusinessMethodExposed.enabled>
        <!--           Method not exposed in business interface. -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_BMnotPartOfRBIandLBI.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_BMnotPartOfRBIandLBI.enabled>
        <!--           Modifiers of the EJB bean -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_LegalModifiers.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_LegalModifiers.enabled>
        <!--           No-arg constructor in the EJB bean -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_HasNoArgContructor.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_HasNoArgContructor.enabled>
        <!--           Persistent timer within EJB Lite -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_PersistentTimerInEjbLite.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_PersistentTimerInEjbLite.enabled>
        <!--           SessionSynchronization implemted by non-SFSB -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_SessionSynchImplementedBySFSBOnly.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_SessionSynchImplementedBySFSBOnly.enabled>
        <!--           Uncomplete LBI Session bean -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_LocalAnnotatedBeanHasLBI.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_LocalAnnotatedBeanHasLBI.enabled>
        <!--           Uncomplete RBI Session bean -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_RemoteAnnotatedBeanHasRBI.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_RemoteAnnotatedBeanHasRBI.enabled>
        <!--           WebService must be designated as session bean -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_WSisSLSB.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_ejbverification_2e_WSisSLSB.enabled>
        <!--         </Enterprise Java Beans> -->
        <!--       </Java EE> -->
        <!--     </Java> -->
        <!--   </Hints> -->
        <!-- </NetBeans 17 → Project → Properties> -->
      </properties>
    </profile>
    <profile>
      <id>netbeans-hints-jpa</id><activation><file><exists>src/main/resources/META-INF/persistence.xml</exists></file></activation>
      <properties>
        <!-- <NetBeans 17 → Project → Properties> -->
        <!--   <Hints> -->
        <!--     <Java> -->
        <!--       <Java EE> -->
        <!--         <Java Persistence API> -->
        <!--           Check access types for jpa classes -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_ConsistentAccessType.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_ConsistentAccessType.enabled>
        <!--           Default public/protected constructor -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_HasNoArgConstructor.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_HasNoArgConstructor.enabled>
        <!--           Entity implements Serializable verification -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_SerializableClass.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_SerializableClass.enabled>
        <!--           Entity table name verification -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_ValidPrimaryTableName.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_ValidPrimaryTableName.enabled>
        <!--           JPQL validation -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_JPQLValidation.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_JPQLValidation.enabled>
        <!--           Presence of persistence.xml -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_PersistenceUnitPresent.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_PersistenceUnitPresent.enabled>
        <!--           The IdClass must override equals(Object o) and hashCode() method. -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_IdClassOverridesEqualsAndHashCode.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_IdClassOverridesEqualsAndHashCode.enabled>
        <!--           Verify @IdClass location -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_OnlyEntityOrMappedSuperclassCanUseIdClass.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_OnlyEntityOrMappedSuperclassCanUseIdClass.enabled>
        <!--           Verify IdClass in entity subclass -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_NoIdClassOnEntitySubclass.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_NoIdClassOnEntitySubclass.enabled>
        <!--           Verify access level for IdClass -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_PublicClass.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_PublicClass.enabled>
        <!--           Verify attributes of jpa classes -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_ValidAttributes.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_ValidAttributes.enabled>
        <!--           Verify combinations of jpa annitations -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_LegalCombinationOfAnnotations.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_LegalCombinationOfAnnotations.enabled>
        <!--           Verify entity have defined promary key -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_IdDefinedInHierarchy.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_IdDefinedInHierarchy.enabled>
        <!--           Verify entity name is unique -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_UniqueEntityName.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_UniqueEntityName.enabled>
        <!--           Verify jpa annotations on accessors -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_JPAAnnotsOnlyOnAccesor.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_JPAAnnotsOnlyOnAccesor.enabled>
        <!--           Verify jpa class is top level class -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_TopLevelClass.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_TopLevelClass.enabled>
        <!--           Verify jpa class isn't final -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_NonFinalClass.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_NonFinalClass.enabled>
        <!--           Verify named query location -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_QueriesProperlyDefined.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_j2ee_2e_jpa_2e_verification_2e_QueriesProperlyDefined.enabled>
        <!--         </Java Persistence API> -->
        <!--       </Java EE> -->
        <!--     </Java> -->
        <!--   </Hints> -->
        <!-- </NetBeans 17 → Project → Properties> -->
      </properties>
    </profile>
    <profile>
      <id>netbeans-hints-jsf-jar</id><activation><file><exists>src/main/resources/META-INF/faces-config.xml</exists></file></activation>
      <properties>
        <!-- <NetBeans 17 → Project → Properties> -->
        <!--   <Hints> -->
        <!--     <Java> -->
        <!--       <Java EE> -->
        <!--         <JavaServer Faces> -->
        <!--           @FlowScoped bean in the non-CDI capable project -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_web_2e_jsf_2e_hints_2e_FlowScopedBeanWithoutCdi.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_web_2e_jsf_2e_hints_2e_FlowScopedBeanWithoutCdi.enabled>
        <!--           Classes of javax.faces.bean are gonna be deprecated -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_web_2e_jsf_2e_hints_2e_JavaxFacesBeanIsGonnaBeDeprecated.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_web_2e_jsf_2e_hints_2e_JavaxFacesBeanIsGonnaBeDeprecated.enabled>
        <!--         </JavaServer Faces> -->
        <!--       </Java EE> -->
        <!--     </Java> -->
        <!--   </Hints> -->
        <!-- </NetBeans 17 → Project → Properties> -->
      </properties>
    </profile>
    <profile>
      <id>netbeans-hints-jsf-war</id><activation><file><exists>src/main/webapp/WEB-INF/faces-config.xml</exists></file></activation>
      <properties>
        <!-- <NetBeans 17 → Project → Properties> -->
        <!--   <Hints> -->
        <!--     <Java> -->
        <!--       <Java EE> -->
        <!--         <JavaServer Faces> -->
        <!--           @FlowScoped bean in the non-CDI capable project -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_web_2e_jsf_2e_hints_2e_FlowScopedBeanWithoutCdi.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_web_2e_jsf_2e_hints_2e_FlowScopedBeanWithoutCdi.enabled>
        <!--           Classes of javax.faces.bean are gonna be deprecated -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_web_2e_jsf_2e_hints_2e_JavaxFacesBeanIsGonnaBeDeprecated.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.o_2e_n_2e_m_2e_web_2e_jsf_2e_hints_2e_JavaxFacesBeanIsGonnaBeDeprecated.enabled>
        <!--         </JavaServer Faces> -->
        <!--       </Java EE> -->
        <!--     </Java> -->
        <!--   </Hints> -->
        <!-- </NetBeans 17 → Project → Properties> -->
      </properties>
    </profile>
    <profile>
      <!--
        NetBeans 12.0 shows this hint for all Java versions, despite it being a Java 14+ feature.
        Activating this hint via profile to workaround this issue.
      -->
      <id>netbeans-hints-java14</id><activation><jdk>[14,)</jdk></activation>
      <properties>
        <!-- <NetBeans 17 → Project → Properties> -->
        <!--   <Hints> -->
        <!--     <Java> -->
        <!--       <JDK Migration Support> -->
        <!--         Convert to instanceof <pattern> -->
        <org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToPatternInstanceOf.enabled>true</org-netbeans-spi-editor-hints-projects.text.x-java.org_2e_netbeans_2e_modules_2e_java_2e_hints_2e_jdk_2e_ConvertToPatternInstanceOf.enabled>
        <!--       </JDK Migration Support> -->
        <!--     </Java> -->
        <!--   </Hints> -->
        <!-- </NetBeans 17 → Project → Properties> -->
      </properties>
    </profile>
  </profiles>
</project>
